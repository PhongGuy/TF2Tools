const COMPODOC_SEARCH_INDEX = {
  index: {
    version: "2.3.9",
    fields: ["title", "body"],
    fieldVectors: [
      ["title/modules/AppModule.html", [0, 2.01, 1, 2.215]],
      [
        "body/modules/AppModule.html",
        [
          1, 4.578, 2, 1.564, 3, 2.597, 4, 2.607, 5, 2.607, 6, 2.607, 7, 2.607,
          8, 1.961, 9, 0.028, 10, 1.664, 11, 1.552, 12, 1.552, 13, 1.552, 14,
          1.664, 15, 1.664, 16, 1.552, 17, 1.552, 18, 1.664, 19, 1.552, 20,
          1.664, 21, 3.533, 22, 3.533, 23, 3.533, 24, 3.643, 25, 2.288, 26,
          2.288, 27, 0.265, 28, 0.265, 29, 0.203, 30, 2.288, 31, 3.643, 32,
          2.597, 33, 3.643, 34, 1.239, 35, 3.684, 36, 4.32, 37, 2.607, 38,
          2.863, 39, 0.565, 40, 3.197, 41, 1.446, 42, 4.32, 43, 2.607, 44, 4.32,
          45, 3.643, 46, 2.288, 47, 4.32, 48, 3.092, 49, 3.092, 50, 3.092, 51,
          4.32, 52, 3.092, 53, 4.32, 54, 3.092, 55, 3.643, 56, 3.092, 57, 4.32,
          58, 0.939, 59, 3.092, 60, 1.7, 61, 3.092, 62, 2.607, 63, 2.607, 64,
          2.607, 65, 3.092, 66, 2.049, 67, 2.607, 68, 3.092, 69, 1.223, 70,
          2.049, 71, 2.607, 72, 2.607, 73, 2.607, 74, 2.607, 75, 2.049, 76,
          2.607, 77, 2.288, 78, 1.859, 79, 2.288, 80, 2.288, 81, 1.859, 82,
          2.288, 83, 2.288, 84, 2.607, 85, 2.607, 86, 2.607, 87, 2.607, 88,
          2.607, 89, 2.607, 90, 1.08, 91, 2.863, 92, 2.049, 93, 1.159, 94,
          2.607, 95, 2.607, 96, 2.288, 97, 3.092, 98, 4.32, 99, 3.092, 100,
          2.607, 101, 3.092, 102, 3.092, 103, 3.092, 104, 1.245, 105, 0.233,
          106, 0.093, 107, 0.017, 108, 0.017,
        ],
      ],
      ["title/modules/AppRoutingModule.html", [0, 2.01, 21, 2.01]],
      [
        "body/modules/AppRoutingModule.html",
        [
          2, 2.164, 9, 0.028, 10, 1.517, 11, 1.414, 12, 1.414, 13, 1.414, 16,
          1.414, 17, 1.414, 19, 1.414, 21, 3.221, 27, 0.366, 28, 0.366, 29,
          0.28, 32, 2.571, 34, 1.219, 38, 3.551, 39, 0.782, 62, 3.606, 63,
          3.606, 64, 3.606, 72, 3.606, 73, 3.606, 74, 3.606, 75, 2.834, 76,
          3.606, 84, 3.606, 90, 1.493, 105, 0.323, 106, 0.129, 107, 0.021, 108,
          0.021, 109, 4.276, 110, 4.276, 111, 5.357, 112, 3.877, 113, 3.164,
          114, 2.283, 115, 3.606, 116, 1.016, 117, 4.276, 118, 1.854, 119,
          2.164, 120, 2.571, 121, 2.571, 122, 2.164, 123, 2.164, 124, 3.164,
          125, 4.276, 126, 4.276, 127, 4.276, 128, 3.606,
        ],
      ],
      ["title/modules/CoreModule.html", [0, 2.01, 22, 2.01]],
      [
        "body/modules/CoreModule.html",
        [
          2, 2.588, 9, 0.027, 22, 3.589, 27, 0.438, 28, 0.438, 29, 0.335, 31,
          4.313, 32, 3.075, 34, 1.091, 38, 3.957, 39, 0.935, 105, 0.386, 106,
          0.155, 107, 0.024, 108, 0.024, 129, 5.115, 130, 5.97, 131, 4.313,
        ],
      ],
      ["title/classes/CrosshairSelected.html", [106, 0.101, 132, 2.473]],
      [
        "body/classes/CrosshairSelected.html",
        [
          9, 0.028, 27, 0.352, 28, 0.352, 29, 0.269, 105, 0.31, 106, 0.124, 107,
          0.021, 108, 0.021, 121, 3.452, 132, 3.863, 133, 2.312, 134, 3.462,
          135, 0.535, 136, 4.994, 137, 4.994, 138, 0.535, 139, 0.954, 140,
          4.616, 141, 6.238, 142, 5.741, 143, 4.248, 144, 0.89, 145, 1.527, 146,
          2.178, 147, 2.338, 148, 0.813, 149, 4.106, 150, 4.106, 151, 4.106,
          152, 4.106, 153, 4.106, 154, 1.586, 155, 4.403,
        ],
      ],
      ["title/components/DashboardComponent.html", [11, 0.882, 116, 0.52]],
      [
        "body/components/DashboardComponent.html",
        [
          8, 1.98, 9, 0.028, 10, 1.072, 11, 1.547, 12, 1, 13, 1, 14, 1.072, 15,
          1.072, 16, 1, 17, 1, 18, 1.072, 19, 1, 20, 1.072, 27, 0.324, 28,
          0.324, 29, 0.248, 34, 0.906, 39, 0.692, 58, 2.079, 60, 2.082, 69,
          1.072, 105, 0.286, 106, 0.114, 107, 0.02, 108, 0.02, 115, 5.261, 116,
          0.988, 120, 2.979, 121, 2.979, 122, 2.507, 123, 2.507, 135, 0.646,
          138, 0.494, 139, 0.906, 144, 0.707, 148, 0.646, 154, 1.15, 156, 1.613,
          157, 1.419, 158, 1.525, 159, 1.525, 160, 1.525, 161, 3.193, 162,
          1.525, 163, 2.714, 164, 1.996, 165, 5.523, 166, 1.996, 167, 4.955,
          168, 3.038, 169, 1.403, 170, 3.193, 171, 3.786, 172, 1.403, 173,
          1.403, 174, 1.419, 175, 1.175, 176, 1.419, 177, 3.786, 178, 1.322,
          179, 2.725, 180, 4.955, 181, 2.802, 182, 2.802, 183, 2.51, 184, 3.193,
          185, 2.802, 186, 3.786, 187, 1.525, 188, 1.996, 189, 1.996, 190,
          1.525, 191, 2.36, 192, 1.525, 193, 1.525, 194, 1.525, 195, 1.525, 196,
          1.525, 197, 1.525, 198, 1.419, 199, 1.525, 200, 1.322, 201, 1.525,
          202, 1.525, 203, 1.525, 204, 1.233, 205, 1.525, 206, 1.525, 207,
          1.322, 208, 1.525, 209, 1.525,
        ],
      ],
      ["title/injectables/ElectronService.html", [210, 1.346, 211, 1.449]],
      [
        "body/injectables/ElectronService.html",
        [
          0, 2.885, 3, 2.476, 9, 0.028, 27, 0.248, 28, 0.248, 29, 0.27, 32,
          1.737, 34, 1.155, 39, 0.528, 58, 1.457, 92, 4.009, 100, 2.437, 105,
          0.218, 106, 0.087, 107, 0.016, 108, 0.016, 114, 2.18, 135, 0.377, 138,
          0.377, 139, 0.753, 148, 0.824, 169, 1.359, 172, 1.166, 173, 1.166,
          210, 1.659, 211, 1.785, 212, 1.737, 213, 2.437, 214, 3.432, 215,
          3.398, 216, 4.411, 217, 5.53, 218, 3.557, 219, 5.1, 220, 6.048, 221,
          5.53, 222, 5.53, 223, 4.119, 224, 4.799, 225, 4.119, 226, 2.89, 227,
          2.084, 228, 2.89, 229, 4.119, 230, 5.53, 231, 2.89, 232, 2.89, 233,
          2.89, 234, 2.89, 235, 4.119, 236, 5.231, 237, 2.89, 238, 2.89, 239,
          3.048, 240, 4.119, 241, 2.89, 242, 2.89, 243, 2.476, 244, 2.73, 245,
          1.009, 246, 3.048, 247, 4.119, 248, 2.89, 249, 4.119, 250, 2.639, 251,
          5.231, 252, 2.89, 253, 2.437, 254, 2.89, 255, 2.89, 256, 2.89, 257,
          2.437, 258, 3.473, 259, 1.737, 260, 2.639, 261, 4.555, 262, 2.89, 263,
          2.89, 264, 2.89, 265, 2.89, 266, 2.89, 267, 2.89, 268, 2.89, 269,
          2.89, 270, 2.89, 271, 2.89, 272, 2.89, 273, 2.89, 274, 2.89, 275,
          2.89, 276, 2.89, 277, 2.89, 278, 2.89, 279, 2.89, 280, 2.89, 281,
          2.89, 282, 2.89, 283, 4.119, 284, 4.119, 285, 2.89, 286, 4.119, 287,
          2.89, 288, 2.89, 289, 4.119, 290, 2.268, 291, 2.89, 292, 2.89, 293,
          2.89, 294, 2.138, 295, 4.119, 296, 2.437, 297, 4.119, 298, 2.89, 299,
          2.89, 300, 2.89, 301, 4.119, 302, 2.89, 303, 2.89, 304, 2.89, 305,
          2.437, 306, 2.89, 307, 2.89, 308, 2.89, 309, 2.138, 310, 2.89, 311,
          1.915, 312, 2.89, 313, 2.89, 314, 2.89, 315, 2.89, 316, 2.89, 317,
          2.89, 318, 2.89, 319, 2.89, 320, 2.89, 321, 2.89, 322, 2.437, 323,
          1.351, 324, 2.437, 325, 2.89, 326, 2.89,
        ],
      ],
      ["title/injectables/FileHelpService.html", [210, 1.346, 327, 2.215]],
      [
        "body/injectables/FileHelpService.html",
        [
          9, 0.028, 27, 0.349, 28, 0.349, 29, 0.424, 34, 0.949, 39, 0.744, 90,
          1.422, 105, 0.307, 106, 0.123, 107, 0.021, 108, 0.021, 135, 0.531,
          138, 0.531, 144, 0.741, 145, 1.189, 146, 1.422, 147, 1.526, 148,
          0.677, 169, 1.471, 172, 1.471, 173, 1.471, 174, 1.947, 175, 1.105,
          176, 1.947, 178, 1.997, 210, 2.092, 211, 2.611, 212, 2.448, 214,
          2.894, 215, 3.048, 243, 3.123, 245, 1.814, 259, 2.448, 260, 2.24, 323,
          1.904, 327, 3.443, 328, 4.822, 329, 3.434, 330, 5.079, 331, 2.092,
          332, 5.194, 333, 2.699, 334, 4.073, 335, 5.194, 336, 6.466, 337,
          4.073, 338, 3.148, 339, 5.194, 340, 2.448, 341, 1.765, 342, 4.073,
          343, 4.073, 344, 4.073, 345, 4.073, 346, 4.073, 347, 4.073,
        ],
      ],
      ["title/classes/Hitsound.html", [106, 0.101, 119, 1.691]],
      [
        "body/classes/Hitsound.html",
        [
          9, 0.027, 27, 0.422, 28, 0.422, 29, 0.323, 105, 0.371, 106, 0.149,
          107, 0.023, 108, 0.023, 114, 2.294, 119, 3.405, 133, 1.719, 135,
          0.642, 138, 0.642, 139, 1.067, 144, 0.833, 145, 1.473, 148, 0.761,
          175, 1.397, 348, 4.15, 349, 4.922, 350, 4.922,
        ],
      ],
      ["title/components/HitsoundComponent.html", [12, 0.882, 116, 0.52]],
      [
        "body/components/HitsoundComponent.html",
        [
          8, 1.465, 9, 0.028, 10, 0.378, 11, 0.352, 12, 0.904, 13, 0.352, 14,
          0.637, 15, 0.637, 16, 0.352, 17, 0.352, 18, 0.637, 19, 0.352, 20,
          0.637, 27, 0.293, 28, 0.114, 29, 0.352, 34, 1.014, 39, 0.244, 41,
          0.624, 58, 1.786, 60, 0.734, 66, 0.885, 67, 1.125, 69, 1.083, 70,
          0.885, 71, 1.125, 77, 0.987, 78, 0.802, 79, 0.987, 80, 0.987, 81,
          0.802, 82, 0.987, 90, 2.072, 93, 1.284, 104, 0.906, 105, 0.101, 106,
          0.04, 107, 0.009, 108, 0.009, 114, 1.835, 116, 0.922, 119, 3.385, 122,
          1.139, 135, 0.293, 138, 0.174, 139, 0.411, 140, 3.068, 144, 0.814,
          145, 1.369, 146, 0.786, 147, 1.284, 148, 0.774, 154, 0.405, 156,
          0.733, 157, 0.5, 158, 0.537, 159, 0.537, 160, 0.537, 162, 0.537, 163,
          2.2, 164, 0.906, 166, 0.906, 168, 1.604, 169, 0.637, 172, 0.637, 173,
          0.637, 174, 1.923, 175, 1.272, 176, 1.923, 178, 1.938, 182, 2.534,
          183, 0.885, 187, 0.537, 188, 0.906, 189, 0.906, 190, 0.537, 191,
          1.379, 192, 0.537, 193, 0.537, 194, 0.537, 195, 0.537, 196, 0.537,
          197, 0.537, 198, 1.093, 199, 0.537, 200, 0.786, 201, 0.537, 202,
          0.537, 203, 0.537, 204, 1.35, 205, 0.537, 206, 0.537, 207, 0.466, 208,
          0.537, 209, 0.537, 211, 1.485, 214, 1.476, 218, 2.059, 227, 1.733,
          243, 1.353, 245, 1.938, 261, 1.665, 290, 0.975, 311, 0.885, 323,
          1.052, 331, 0.906, 333, 0.885, 338, 1.139, 340, 0.802, 341, 2.091,
          351, 1.125, 352, 0.975, 353, 1.476, 354, 2.917, 355, 2.25, 356, 2.46,
          357, 2.46, 358, 2.889, 359, 2.901, 360, 2.917, 361, 2.46, 362, 1.897,
          363, 2.25, 364, 2.25, 365, 2.25, 366, 1.733, 367, 1.897, 368, 1.897,
          369, 2.534, 370, 2.25, 371, 2.888, 372, 3.497, 373, 2.535, 374, 3.425,
          375, 2.534, 376, 1.733, 377, 1.485, 378, 2.25, 379, 1.897, 380, 1.335,
          381, 2.46, 382, 1.364, 383, 2.25, 384, 1.335, 385, 2.888, 386, 2.25,
          387, 1.335, 388, 3.425, 389, 4.635, 390, 2.406, 391, 2.25, 392, 1.335,
          393, 1.491, 394, 2.749, 395, 2.25, 396, 1.335, 397, 1.139, 398, 2.25,
          399, 1.335, 400, 2.888, 401, 2.25, 402, 1.335, 403, 2.25, 404, 1.335,
          405, 2.888, 406, 2.25, 407, 3.824, 408, 1.335, 409, 2.25, 410, 1.335,
          411, 1.897, 412, 1.335, 413, 1.665, 414, 1.897, 415, 1.935, 416,
          1.335, 417, 1.897, 418, 1.335, 419, 2.25, 420, 1.335, 421, 2.46, 422,
          1.897, 423, 1.353, 424, 2.83, 425, 0.734, 426, 1.897, 427, 1.335, 428,
          1.335, 429, 1.335, 430, 1.335, 431, 1.353, 432, 1.934, 433, 1.335,
          434, 1.665, 435, 0.987, 436, 0.675, 437, 1.335, 438, 1.125, 439,
          1.897, 440, 0.734, 441, 1.335, 442, 1.139, 443, 0.987, 444, 1.237,
          445, 1.125, 446, 1.139, 447, 0.987, 448, 0.885, 449, 1.335, 450,
          1.125, 451, 1.335, 452, 1.335, 453, 2.25, 454, 1.125, 455, 1.335, 456,
          0.885, 457, 1.125, 458, 4.147, 459, 3.068, 460, 1.125, 461, 3.57, 462,
          1.335, 463, 1.335, 464, 3.225, 465, 1.335, 466, 2.888, 467, 1.335,
          468, 1.125, 469, 1.125, 470, 1.125, 471, 1.335, 472, 1.125, 473,
          1.335, 474, 1.335, 475, 1.335, 476, 1.125, 477, 1.335, 478, 1.335,
          479, 1.125, 480, 1.125, 481, 0.885, 482, 0.987, 483, 0.987, 484,
          0.987, 485, 1.335, 486, 1.335, 487, 1.897, 488, 1.335, 489, 2.917,
          490, 1.125, 491, 2.25, 492, 4.147, 493, 1.934, 494, 1.335, 495, 0.987,
          496, 1.665, 497, 1.335, 498, 1.237, 499, 1.335, 500, 2.159, 501, 2.25,
          502, 1.335, 503, 1.335, 504, 1.335, 505, 2.25, 506, 1.335, 507, 1.897,
          508, 1.897, 509, 3.691, 510, 3.691, 511, 1.125, 512, 1.335, 513,
          1.125, 514, 4.988, 515, 0.802, 516, 1.335, 517, 1.335, 518, 1.665,
          519, 1.335, 520, 1.125, 521, 1.125, 522, 4.413, 523, 2.25, 524, 1.335,
          525, 1.335, 526, 2.25, 527, 1.335, 528, 1.335, 529, 0.987, 530, 1.125,
          531, 1.125, 532, 1.125, 533, 1.125, 534, 1.125, 535, 3.265, 536,
          1.335, 537, 0.987, 538, 1.335, 539, 1.335, 540, 1.335, 541, 1.335,
          542, 1.335, 543, 0.987, 544, 1.335, 545, 1.125, 546, 1.125, 547,
          1.125, 548, 1.335, 549, 1.335, 550, 1.335, 551, 0.987, 552, 1.335,
          553, 1.897, 554, 2.888, 555, 2.059, 556, 2.25, 557, 1.665, 558, 2.25,
          559, 1.897, 560, 2.25, 561, 2.25, 562, 2.25, 563, 1.335, 564, 2.25,
          565, 2.25, 566, 2.25, 567, 2.25, 568, 2.25, 569, 1.125, 570, 1.125,
          571, 1.125, 572, 1.125, 573, 1.125, 574, 1.335, 575, 1.335, 576, 2.25,
          577, 1.353, 578, 2.25, 579, 2.534, 580, 1.733, 581, 3.497, 582, 2.25,
          583, 1.897, 584, 2.25, 585, 2.25, 586, 2.25, 587, 3.425,
        ],
      ],
      ["title/classes/Hud.html", [106, 0.101, 118, 1.449]],
      [
        "body/classes/Hud.html",
        [
          9, 0.028, 27, 0.395, 28, 0.395, 29, 0.302, 105, 0.348, 106, 0.139,
          107, 0.022, 108, 0.022, 114, 2.253, 118, 2.958, 133, 1.61, 135, 0.601,
          138, 0.601, 139, 1.026, 144, 0.898, 145, 1.534, 148, 0.821, 175,
          1.413, 290, 2.432, 588, 3.888, 589, 5.101, 590, 3.879, 591, 4.611,
          592, 4.611, 593, 4.611, 594, 4.611,
        ],
      ],
      ["title/components/HudComponent.html", [13, 0.882, 116, 0.52]],
      [
        "body/components/HudComponent.html",
        [
          8, 1.187, 9, 0.028, 10, 0.393, 11, 0.366, 12, 0.366, 13, 0.927, 14,
          0.393, 15, 0.658, 16, 0.366, 17, 0.366, 18, 0.393, 19, 0.366, 20,
          0.658, 27, 0.301, 28, 0.119, 29, 0.23, 34, 0.972, 39, 0.253, 41,
          0.648, 58, 1.767, 60, 0.763, 69, 0.393, 77, 1.026, 78, 0.834, 79,
          1.026, 80, 1.026, 81, 0.834, 82, 1.026, 90, 2.119, 93, 1.465, 104,
          1.574, 105, 0.105, 106, 0.042, 107, 0.009, 108, 0.009, 114, 1.569,
          116, 0.943, 118, 2.922, 135, 0.303, 137, 1.026, 138, 0.181, 139,
          0.425, 140, 3.13, 144, 0.811, 145, 1.218, 146, 0.484, 147, 1.124, 148,
          0.767, 154, 0.421, 156, 0.757, 157, 0.52, 158, 0.559, 159, 0.559, 160,
          0.559, 162, 0.559, 163, 2.224, 164, 0.936, 166, 0.936, 169, 0.658,
          172, 0.658, 173, 0.658, 174, 1.836, 175, 1.291, 176, 1.836, 178,
          1.858, 179, 3.037, 182, 1.72, 187, 0.559, 188, 0.936, 189, 0.936, 190,
          0.559, 191, 1.414, 192, 0.559, 193, 0.559, 194, 0.559, 195, 0.559,
          196, 0.559, 197, 0.559, 198, 0.52, 199, 0.559, 200, 0.812, 201, 0.559,
          202, 0.559, 203, 0.559, 204, 1.273, 205, 0.559, 206, 0.559, 207,
          0.484, 208, 0.559, 209, 0.559, 211, 1.521, 214, 1.518, 218, 2.11, 227,
          1.978, 243, 1.397, 245, 1.858, 257, 1.169, 261, 1.026, 290, 1.521,
          294, 1.026, 305, 1.169, 311, 0.919, 323, 1.641, 331, 0.936, 333,
          0.919, 338, 1.776, 340, 0.834, 341, 2.193, 352, 1.007, 353, 1.518,
          356, 2.529, 357, 2.529, 358, 0.763, 359, 3.372, 361, 2.529, 362, 1.96,
          366, 1.776, 369, 3.13, 371, 3.566, 373, 2.326, 375, 2.597, 376, 1.776,
          377, 1.521, 379, 1.96, 381, 2.529, 382, 1.641, 385, 2.96, 390, 2.253,
          397, 1.176, 405, 1.96, 411, 1.96, 413, 1.72, 414, 1.96, 415, 1.978,
          417, 1.96, 421, 2.529, 422, 1.96, 423, 1.397, 424, 2.892, 425, 0.763,
          426, 1.96, 431, 1.397, 432, 1.988, 434, 1.72, 435, 1.026, 436, 0.702,
          438, 1.169, 439, 1.96, 440, 0.763, 442, 1.176, 443, 1.026, 446, 1.518,
          447, 1.026, 448, 0.919, 450, 1.96, 459, 3.324, 461, 3.324, 464, 1.96,
          466, 1.96, 468, 1.169, 469, 1.169, 470, 1.169, 472, 1.169, 476, 1.96,
          479, 1.169, 480, 1.96, 481, 0.919, 482, 1.026, 483, 1.026, 484, 1.026,
          487, 2.529, 490, 1.169, 493, 1.54, 498, 0.763, 507, 1.169, 509, 2.892,
          510, 2.892, 511, 1.169, 513, 1.169, 515, 0.834, 518, 2.22, 520, 1.169,
          521, 1.169, 529, 1.72, 530, 1.169, 531, 1.169, 532, 1.96, 533, 2.529,
          534, 1.169, 535, 1.72, 537, 1.026, 554, 1.169, 555, 1.397, 557, 2.22,
          569, 1.169, 570, 1.169, 571, 1.169, 572, 1.169, 573, 1.169, 577, 2.11,
          579, 2.22, 580, 1.518, 583, 1.96, 589, 2.96, 590, 2.833, 595, 1.169,
          596, 3, 597, 2.324, 598, 3, 599, 3, 600, 3, 601, 3, 602, 2.324, 603,
          4.229, 604, 2.597, 605, 2.324, 606, 2.324, 607, 1.387, 608, 1.72, 609,
          5.32, 610, 1.387, 611, 2.324, 612, 1.387, 613, 1.387, 614, 2.324, 615,
          1.387, 616, 2.324, 617, 1.387, 618, 2.324, 619, 1.387, 620, 2.324,
          621, 2.324, 622, 2.324, 623, 1.387, 624, 2.324, 625, 1.387, 626,
          1.387, 627, 1.387, 628, 3, 629, 1.387, 630, 1.397, 631, 1.387, 632,
          1.387, 633, 1.387, 634, 1.387, 635, 1.387, 636, 1.387, 637, 4.493,
          638, 1.387, 639, 2.324, 640, 1.169, 641, 1.387, 642, 1.169, 643,
          2.326, 644, 1.169, 645, 1.387, 646, 3.51, 647, 1.387, 648, 2.324, 649,
          1.169, 650, 1.026, 651, 1.96, 652, 2.324, 653, 1.387, 654, 1.387, 655,
          1.026, 656, 1.387, 657, 1.387, 658, 4.712, 659, 3.51, 660, 2.324, 661,
          2.324, 662, 2.529, 663, 2.529, 664, 2.529, 665, 2.529, 666, 3.51, 667,
          3.51, 668, 2.324, 669, 1.387, 670, 1.387, 671, 1.387, 672, 1.96, 673,
          2.324, 674, 1.387, 675, 1.387, 676, 1.387, 677, 3.51, 678, 2.324, 679,
          1.387, 680, 3.51, 681, 2.324, 682, 1.387, 683, 2.324, 684, 2.324, 685,
          1.387, 686, 2.324, 687, 2.324, 688, 2.324, 689, 1.387, 690, 3.51, 691,
          1.387, 692, 1.387, 693, 1.387, 694, 1.387, 695, 2.324, 696, 1.387,
          697, 1.387, 698, 1.387, 699, 1.387, 700, 1.387, 701, 1.387, 702,
          1.169, 703, 1.387, 704, 1.387, 705, 1.169, 706, 1.387, 707, 1.026,
          708, 1.387, 709, 1.387, 710, 1.026, 711, 1.169, 712, 1.387, 713,
          1.387, 714, 1.387, 715, 1.169, 716, 1.387, 717, 1.387, 718, 1.387,
          719, 1.387, 720, 1.387, 721, 1.387, 722, 1.387, 723, 1.387, 724,
          2.324, 725, 3.51, 726, 3.51, 727, 3.51, 728, 2.324, 729, 2.324,
        ],
      ],
      ["title/classes/HudList.html", [106, 0.101, 730, 2.215]],
      [
        "body/classes/HudList.html",
        [
          9, 0.028, 27, 0.325, 28, 0.325, 29, 0.249, 105, 0.287, 106, 0.115,
          107, 0.02, 108, 0.02, 118, 2.981, 133, 1.326, 135, 0.495, 138, 0.495,
          139, 0.907, 144, 0.939, 145, 1.571, 148, 0.859, 175, 1.295, 730,
          3.291, 731, 3.202, 732, 6.877, 733, 6.087, 734, 6.087, 735, 6.087,
          736, 4.035, 737, 6.087, 738, 6.087, 739, 6.087, 740, 6.087, 741,
          6.087, 742, 3.798, 743, 3.798, 744, 3.798, 745, 3.798, 746, 3.798,
          747, 3.798, 748, 3.798, 749, 3.798, 750, 3.798, 751, 3.798,
        ],
      ],
      ["title/modules/MaterialModule.html", [0, 2.01, 23, 2.01]],
      [
        "body/modules/MaterialModule.html",
        [
          2, 2.037, 9, 0.028, 23, 3.1, 27, 0.345, 28, 0.345, 29, 0.264, 32,
          2.421, 34, 1.265, 38, 3.418, 39, 0.736, 40, 3.815, 41, 1.883, 43,
          3.395, 83, 2.979, 90, 1.406, 105, 0.389, 106, 0.122, 107, 0.02, 108,
          0.02, 128, 3.395, 156, 1.311, 436, 2.037, 752, 2.979, 753, 4.348, 754,
          4.348, 755, 4.026, 756, 4.348, 757, 4.026, 758, 4.348, 759, 4.026,
          760, 4.348, 761, 4.026, 762, 4.348, 763, 4.348, 764, 4.026, 765,
          4.348, 766, 4.026, 767, 4.026, 768, 4.348, 769, 4.026, 770, 4.348,
          771, 4.026, 772, 4.348, 773, 4.026, 774, 4.348, 775, 4.026, 776,
          4.026, 777, 4.348, 778, 4.348, 779, 4.026, 780, 4.348, 781, 4.026,
          782, 4.026, 783, 4.348, 784, 4.026, 785, 4.348, 786, 2.979, 787,
          2.421, 788, 4.348, 789, 4.026, 790, 4.348, 791, 4.026, 792, 4.348,
          793, 4.026, 794, 3.77,
        ],
      ],
      [
        "title/components/MultipleWarningComponent.html",
        [14, 0.947, 116, 0.52],
      ],
      [
        "body/components/MultipleWarningComponent.html",
        [
          8, 1.168, 9, 0.027, 10, 1.089, 11, 1.015, 12, 1.015, 13, 1.015, 14,
          1.669, 15, 1.089, 16, 1.015, 17, 1.015, 18, 1.089, 19, 1.015, 20,
          1.089, 27, 0.329, 28, 0.329, 29, 0.252, 34, 0.703, 39, 0.703, 58,
          2.05, 66, 3.317, 69, 1.089, 105, 0.29, 106, 0.116, 107, 0.02, 108,
          0.02, 116, 0.992, 122, 2.983, 135, 0.501, 148, 0.501, 154, 1.168, 156,
          1.63, 157, 1.441, 158, 1.549, 159, 1.549, 160, 1.549, 162, 1.549, 163,
          2.719, 164, 2.016, 166, 2.016, 169, 1.576, 172, 1.417, 173, 1.417,
          175, 1.065, 187, 1.549, 188, 2.016, 189, 2.016, 190, 1.549, 191,
          2.374, 192, 1.549, 193, 1.549, 194, 1.549, 195, 1.549, 196, 1.549,
          197, 1.549, 198, 2.549, 199, 1.549, 200, 1.343, 201, 1.549, 202,
          1.549, 203, 1.549, 204, 1.252, 205, 1.549, 206, 1.549, 207, 1.343,
          208, 1.549, 209, 1.549, 290, 2.17, 358, 2.752, 393, 3.317, 394, 3.317,
          496, 3.703, 529, 3.703, 535, 3.703, 795, 4.22, 796, 3.242, 797, 6.265,
          798, 5.565, 799, 5.005, 800, 3.845, 801, 3.317, 802, 2.845, 803, 4.22,
          804, 5.005, 805, 5.005, 806, 3.703, 807, 2.845,
        ],
      ],
      ["title/classes/QuestionAnswer.html", [106, 0.101, 442, 1.691]],
      [
        "body/classes/QuestionAnswer.html",
        [
          9, 0.028, 27, 0.397, 28, 0.397, 29, 0.304, 105, 0.35, 106, 0.14, 107,
          0.022, 108, 0.022, 133, 1.619, 135, 0.605, 138, 0.605, 139, 1.029,
          144, 0.865, 145, 1.504, 146, 1.619, 147, 1.738, 148, 0.791, 200,
          2.409, 442, 2.849, 498, 3.554, 515, 3.646, 808, 3.91, 809, 4.92, 810,
          4.637, 811, 4.637, 812, 4.637, 813, 4.748,
        ],
      ],
      ["title/components/QuestionAnswerComponent.html", [15, 0.947, 116, 0.52]],
      [
        "body/components/QuestionAnswerComponent.html",
        [
          8, 0.914, 9, 0.028, 10, 0.852, 11, 0.794, 12, 0.794, 13, 0.794, 14,
          0.852, 15, 1.65, 16, 0.794, 17, 0.794, 18, 0.852, 19, 0.794, 20,
          0.852, 27, 0.258, 28, 0.258, 29, 0.197, 34, 1.065, 39, 0.55, 41,
          1.407, 58, 1.981, 69, 0.852, 78, 3.599, 93, 1.589, 105, 0.227, 106,
          0.091, 107, 0.017, 108, 0.017, 116, 0.99, 135, 0.553, 138, 0.392, 139,
          0.775, 144, 0.76, 148, 0.76, 154, 0.914, 156, 1.38, 157, 1.128, 158,
          1.212, 159, 1.212, 160, 1.212, 162, 1.212, 163, 2.627, 164, 1.707,
          166, 1.707, 168, 2.699, 169, 1.2, 172, 1.2, 173, 1.2, 174, 1.128, 175,
          1.322, 176, 1.128, 178, 1.714, 187, 1.212, 188, 1.707, 189, 1.707,
          190, 1.212, 191, 2.145, 192, 1.212, 193, 1.212, 194, 1.212, 195,
          1.212, 196, 1.212, 197, 1.212, 198, 1.128, 199, 1.212, 200, 2.278,
          201, 1.212, 202, 1.212, 203, 1.212, 204, 0.98, 205, 1.212, 206, 1.212,
          207, 1.051, 208, 1.212, 209, 1.212, 227, 2.948, 245, 1.48, 250, 2.331,
          331, 1.707, 341, 1.837, 352, 1.837, 353, 2.483, 366, 2.696, 390,
          2.127, 397, 2.145, 425, 1.655, 432, 3.531, 436, 1.523, 442, 3.093,
          443, 2.226, 493, 3.252, 710, 3.136, 802, 2.226, 806, 3.136, 807,
          2.226, 809, 4.66, 814, 5.047, 815, 2.537, 816, 4.907, 817, 4.239, 818,
          4.735, 819, 4.735, 820, 4.492, 821, 2.537, 822, 4.492, 823, 3.942,
          824, 2.93, 825, 4.239, 826, 3.009, 827, 3.009, 828, 3.574, 829, 3.136,
          830, 3.009, 831, 3.009, 832, 4.492, 833, 2.226, 834, 2.537, 835,
          2.537, 836, 2.226, 837, 2.537, 838, 2.537, 839, 2.537, 840, 2.537,
          841, 2.537, 842, 2.537, 843, 2.537, 844, 2.537, 845, 3.574, 846,
          3.574, 847, 3.574, 848, 3.574,
        ],
      ],
      ["title/classes/Settings.html", [106, 0.101, 123, 1.691]],
      [
        "body/classes/Settings.html",
        [
          9, 0.028, 27, 0.362, 28, 0.362, 29, 0.277, 58, 1.615, 104, 2.141, 105,
          0.319, 106, 0.128, 107, 0.021, 108, 0.021, 114, 2.132, 120, 3.196,
          123, 2.944, 133, 1.476, 135, 0.551, 138, 0.551, 139, 0.972, 144,
          0.871, 145, 1.44, 146, 2.197, 147, 2.358, 148, 0.82, 179, 2.924, 290,
          2.305, 309, 3.126, 358, 2.924, 359, 3.196, 382, 2.855, 394, 3.524,
          431, 3.196, 500, 4.655, 555, 3.196, 630, 2.54, 643, 3.524, 801, 3.524,
          849, 3.563, 850, 4.225, 851, 5.817, 852, 5.817, 853, 5.817, 854,
          5.817, 855, 4.225, 856, 3.934, 857, 3.524, 858, 4.225, 859, 4.225,
          860, 4.225, 861, 5.317, 862, 4.225, 863, 4.483,
        ],
      ],
      ["title/components/SettingsComponent.html", [16, 0.882, 116, 0.52]],
      [
        "body/components/SettingsComponent.html",
        [
          8, 1.779, 9, 0.028, 10, 0.674, 11, 0.629, 12, 0.629, 13, 0.629, 14,
          0.674, 15, 0.674, 16, 1.26, 17, 0.629, 18, 0.674, 19, 0.629, 20,
          0.674, 27, 0.306, 28, 0.204, 29, 0.156, 34, 1.018, 35, 3.53, 37,
          2.008, 39, 0.435, 58, 1.968, 60, 1.31, 69, 1.216, 90, 0.832, 92,
          3.162, 93, 1.34, 104, 1.729, 105, 0.18, 106, 0.072, 107, 0.014, 108,
          0.014, 114, 1.785, 116, 0.795, 118, 2.068, 123, 3.02, 135, 0.466, 138,
          0.311, 139, 0.785, 144, 0.612, 145, 0.982, 146, 1.248, 147, 1.34, 148,
          0.764, 154, 0.723, 156, 1.164, 157, 0.893, 158, 0.959, 159, 0.959,
          160, 0.959, 162, 0.959, 163, 2.524, 164, 1.44, 166, 1.44, 168, 2.36,
          169, 1.012, 170, 2.008, 172, 1.012, 173, 1.012, 174, 0.893, 175,
          0.913, 176, 0.893, 178, 1.785, 179, 1.31, 184, 2.008, 187, 0.959, 188,
          1.44, 189, 1.44, 190, 0.959, 191, 1.921, 192, 0.959, 193, 0.959, 194,
          0.959, 195, 0.959, 196, 0.959, 197, 0.959, 198, 0.893, 199, 0.959,
          200, 0.832, 201, 0.959, 202, 0.959, 203, 0.959, 204, 0.775, 205,
          0.959, 206, 0.959, 207, 0.832, 208, 0.959, 209, 0.959, 211, 2.068,
          214, 2.414, 218, 2.868, 245, 1.785, 246, 1.762, 250, 1.31, 290, 1.55,
          322, 2.008, 323, 1.114, 331, 1.44, 340, 1.432, 341, 2.068, 352, 1.55,
          353, 2.172, 359, 3.588, 366, 2.414, 372, 3.619, 373, 3.884, 375, 3.53,
          376, 2.414, 377, 2.068, 382, 1.114, 390, 2.216, 397, 1.809, 413,
          2.645, 415, 1.205, 436, 1.205, 448, 1.578, 456, 2.37, 459, 1.762, 495,
          1.762, 509, 1.762, 510, 1.762, 518, 1.762, 551, 2.645, 557, 1.762,
          559, 2.008, 580, 1.205, 604, 2.645, 643, 1.578, 649, 2.008, 651,
          2.008, 655, 3.176, 662, 2.008, 663, 2.008, 664, 2.008, 702, 2.008,
          715, 2.008, 736, 2.37, 801, 2.37, 856, 1.762, 864, 2.008, 865, 3.176,
          866, 4.292, 867, 3.575, 868, 4.527, 869, 4.771, 870, 4.771, 871, 3.53,
          872, 4.771, 873, 3.575, 874, 2.381, 875, 3.014, 876, 2.381, 877,
          2.381, 878, 2.645, 879, 2.381, 880, 2.381, 881, 2.381, 882, 3.074,
          883, 2.381, 884, 4.527, 885, 1.578, 886, 2.381, 887, 2.381, 888,
          2.381, 889, 2.381, 890, 4.292, 891, 2.381, 892, 2.381, 893, 4.023,
          894, 2.381, 895, 2.381, 896, 4.941, 897, 4.292, 898, 2.381, 899,
          2.381, 900, 2.381, 901, 2.381, 902, 2.381, 903, 2.381, 904, 2.381,
          905, 2.381, 906, 2.381, 907, 2.381, 908, 2.381, 909, 2.381, 910,
          2.008, 911, 2.381, 912, 2.381, 913, 2.381, 914, 2.381, 915, 2.381,
          916, 2.381, 917, 2.381, 918, 2.381, 919, 2.381, 920, 3.575, 921,
          2.381, 922, 3.014, 923, 4.771, 924, 4.771, 925, 3.575, 926, 3.575,
          927, 3.575, 928, 2.37, 929, 2.381, 930, 2.381, 931, 2.381, 932, 2.381,
          933, 2.381, 934, 2.381, 935, 2.381, 936, 2.381, 937, 2.381, 938,
          2.381, 939, 2.381, 940, 2.381,
        ],
      ],
      ["title/components/SetupComponent.html", [17, 0.882, 116, 0.52]],
      [
        "body/components/SetupComponent.html",
        [
          8, 1.681, 9, 0.028, 10, 0.82, 11, 0.765, 12, 0.765, 13, 0.765, 14,
          0.82, 15, 0.82, 16, 0.765, 17, 1.383, 18, 0.82, 19, 0.765, 20, 0.82,
          25, 2.143, 27, 0.248, 28, 0.248, 29, 0.27, 34, 1.012, 39, 0.529, 58,
          2.012, 60, 1.593, 69, 0.82, 90, 1.678, 104, 1.167, 105, 0.219, 106,
          0.088, 107, 0.016, 108, 0.016, 113, 2.143, 114, 2.114, 116, 0.921,
          124, 4.622, 135, 0.378, 138, 0.378, 139, 0.754, 144, 0.747, 145,
          0.663, 146, 1.012, 147, 1.086, 148, 0.722, 154, 0.88, 156, 1.343, 157,
          1.086, 158, 1.167, 159, 1.167, 160, 1.167, 162, 1.167, 163, 2.612,
          164, 1.662, 166, 1.662, 169, 1.168, 172, 1.168, 173, 1.168, 174,
          1.546, 175, 1.114, 176, 1.546, 178, 1.933, 187, 1.167, 188, 1.662,
          189, 1.662, 190, 1.167, 191, 2.109, 192, 1.167, 193, 1.167, 194,
          1.167, 195, 1.167, 196, 1.167, 197, 1.167, 198, 1.086, 199, 1.167,
          200, 1.012, 201, 1.167, 202, 1.167, 203, 1.167, 204, 0.943, 205,
          1.167, 206, 1.167, 207, 1.012, 208, 1.167, 209, 1.167, 211, 2.27, 214,
          2.432, 243, 2.48, 245, 1.441, 290, 2.566, 331, 1.662, 333, 1.92, 338,
          1.466, 340, 1.741, 341, 2.566, 352, 1.788, 353, 2.432, 366, 2.65, 376,
          2.65, 377, 2.27, 382, 1.929, 390, 2.27, 397, 2.088, 415, 2.801, 424,
          4.096, 425, 1.593, 435, 2.143, 448, 1.92, 456, 2.735, 481, 1.92, 482,
          2.143, 483, 2.143, 484, 2.143, 551, 2.143, 579, 3.556, 580, 1.466,
          650, 2.143, 665, 2.442, 672, 2.442, 711, 3.479, 801, 3.669, 882, 2.48,
          893, 4.052, 941, 2.442, 942, 4.806, 943, 4.126, 944, 4.126, 945,
          6.052, 946, 4.126, 947, 4.126, 948, 2.896, 949, 2.896, 950, 4.126,
          951, 2.896, 952, 4.126, 953, 4.126, 954, 4.126, 955, 4.126, 956,
          2.896, 957, 4.126, 958, 2.896, 959, 2.896, 960, 2.896, 961, 2.896,
          962, 4.126, 963, 2.896, 964, 2.896, 965, 2.896, 966, 4.126, 967,
          4.126, 968, 3.479, 969, 3.479, 970, 3.479,
        ],
      ],
      ["title/classes/SnackBarMessage.html", [106, 0.101, 971, 2.01]],
      [
        "body/classes/SnackBarMessage.html",
        [
          9, 0.028, 27, 0.27, 28, 0.27, 29, 0.206, 34, 0.919, 39, 0.575, 90,
          1.755, 93, 1.639, 104, 1.267, 105, 0.33, 106, 0.152, 107, 0.017, 108,
          0.017, 133, 1.099, 135, 0.41, 138, 0.41, 139, 0.799, 144, 0.717, 145,
          1.387, 146, 1.527, 147, 1.639, 148, 0.656, 169, 0.891, 172, 0.891,
          173, 1.239, 178, 1.994, 185, 2.328, 210, 1.761, 215, 2.99, 244, 2.086,
          245, 1.099, 259, 1.892, 260, 1.73, 323, 1.471, 341, 2.561, 352, 1.364,
          376, 3.373, 377, 1.364, 382, 2.54, 390, 1.364, 423, 1.892, 440, 1.73,
          577, 1.892, 580, 1.592, 608, 2.328, 630, 1.892, 707, 2.328, 786,
          2.328, 787, 3.821, 865, 3.236, 871, 2.328, 878, 2.328, 882, 2.629,
          928, 2.899, 971, 3.022, 972, 2.328, 973, 5.663, 974, 4.16, 975, 5.111,
          976, 3.147, 977, 4.581, 978, 3.147, 979, 3.147, 980, 3.688, 981,
          3.688, 982, 2.653, 983, 4.581, 984, 2.653, 985, 2.653, 986, 3.688,
          987, 2.328, 988, 2.653, 989, 2.653, 990, 2.653, 991, 2.653, 992,
          2.653, 993, 3.688, 994, 4.814, 995, 2.653, 996, 4.581, 997, 2.653,
          998, 2.653, 999, 4.238, 1000, 2.653, 1001, 2.328, 1002, 2.653, 1003,
          2.653, 1004, 2.653, 1005, 2.653, 1006, 2.653, 1007, 2.653, 1008,
          2.653, 1009, 2.653, 1010, 2.653, 1011, 2.653, 1012, 2.653, 1013,
          4.238, 1014, 3.688, 1015, 2.653, 1016, 2.653, 1017, 2.653, 1018,
          2.653, 1019, 2.653, 1020, 2.653, 1021, 2.653, 1022, 2.653, 1023,
          2.653, 1024, 2.653,
        ],
      ],
      ["title/injectables/SnackService.html", [210, 1.346, 377, 1.449]],
      [
        "body/injectables/SnackService.html",
        [
          9, 0.028, 27, 0.237, 28, 0.237, 29, 0.181, 34, 0.856, 39, 0.506, 90,
          1.636, 93, 1.497, 104, 1.114, 105, 0.301, 106, 0.155, 107, 0.016, 108,
          0.016, 135, 0.521, 138, 0.361, 139, 0.73, 144, 0.776, 145, 1.433, 146,
          1.636, 147, 1.756, 148, 0.78, 169, 1.131, 172, 1.131, 173, 1.452, 174,
          1.497, 175, 0.849, 176, 1.497, 178, 1.899, 185, 2.047, 207, 1.394,
          210, 1.608, 212, 1.664, 215, 3.203, 244, 2.646, 245, 1.791, 259,
          1.664, 260, 1.522, 323, 1.294, 331, 1.608, 341, 2.826, 352, 1.199,
          376, 3.372, 377, 1.731, 382, 1.867, 390, 2.223, 423, 2.4, 440, 1.522,
          577, 2.4, 580, 1.4, 608, 2.954, 630, 2.816, 707, 2.047, 786, 2.047,
          787, 3.512, 865, 2.954, 871, 3.795, 878, 2.954, 882, 2.816, 928,
          3.604, 971, 2.4, 972, 2.047, 973, 5.465, 974, 4.037, 975, 4.325, 977,
          3.95, 980, 4.325, 981, 3.95, 982, 2.333, 983, 5.042, 984, 3.367, 985,
          3.95, 986, 4.325, 987, 2.954, 988, 3.95, 989, 3.367, 990, 3.367, 991,
          3.95, 992, 2.333, 993, 4.325, 994, 5.215, 995, 3.367, 996, 4.778, 997,
          3.367, 998, 3.367, 999, 4.585, 1000, 3.367, 1001, 2.954, 1002, 3.367,
          1003, 2.333, 1004, 2.333, 1005, 2.333, 1006, 2.333, 1007, 2.333, 1008,
          2.333, 1009, 2.333, 1010, 2.333, 1011, 2.333, 1012, 2.333, 1013, 3.95,
          1014, 3.367, 1015, 3.367, 1016, 4.325, 1017, 2.333, 1018, 2.333, 1019,
          2.333, 1020, 2.333, 1021, 2.333, 1022, 2.333, 1023, 2.333, 1024,
          2.333, 1025, 2.767, 1026, 3.993, 1027, 2.767, 1028, 2.767, 1029,
          2.767, 1030, 2.767, 1031, 2.767, 1032, 2.767, 1033, 2.767,
        ],
      ],
      ["title/classes/TfWeapons.html", [106, 0.101, 1034, 1.838]],
      [
        "body/classes/TfWeapons.html",
        [
          9, 0.028, 27, 0.475, 28, 0.388, 29, 0.297, 105, 0.342, 106, 0.202,
          107, 0.022, 108, 0.022, 121, 3.336, 133, 1.581, 135, 0.59, 138, 0.59,
          139, 1.014, 143, 4.44, 144, 0.916, 145, 1.55, 148, 0.837, 154, 1.685,
          155, 4.679, 175, 1.366, 857, 3, 1034, 3.052, 1035, 3.817, 1036, 4.526,
          1037, 5.412, 1038, 5.06, 1039, 4.526, 1040, 4.526, 1041, 4.526, 1042,
          4.526, 1043, 4.526,
        ],
      ],
      ["title/classes/UploadChangeName.html", [106, 0.101, 444, 1.838]],
      [
        "body/classes/UploadChangeName.html",
        [
          9, 0.028, 27, 0.384, 28, 0.384, 29, 0.437, 69, 1.903, 105, 0.338, 106,
          0.135, 107, 0.022, 108, 0.022, 133, 1.564, 135, 0.584, 138, 0.584,
          139, 1.007, 144, 0.889, 145, 1.426, 148, 0.813, 175, 1.429, 204,
          2.188, 444, 3.031, 495, 4.735, 498, 3.519, 500, 4.735, 630, 3.314,
          1044, 3.775, 1045, 4.477, 1046, 4.477, 1047, 4.477, 1048, 4.477,
        ],
      ],
      [
        "title/components/UploadChangeNameComponent.html",
        [18, 0.947, 116, 0.52],
      ],
      [
        "body/components/UploadChangeNameComponent.html",
        [
          8, 0.824, 9, 0.028, 10, 0.768, 11, 0.716, 12, 0.716, 13, 0.716, 14,
          0.768, 15, 0.768, 16, 0.716, 17, 0.716, 18, 1.439, 19, 0.716, 20,
          0.768, 27, 0.232, 28, 0.232, 29, 0.404, 34, 1.029, 39, 0.496, 41,
          1.268, 58, 1.948, 69, 1.931, 70, 3.942, 90, 0.947, 93, 1.736, 105,
          0.205, 106, 0.082, 107, 0.016, 108, 0.016, 116, 0.942, 135, 0.513,
          138, 0.354, 139, 0.719, 144, 0.77, 148, 0.757, 154, 0.824, 156, 1.281,
          157, 1.017, 158, 1.092, 159, 1.092, 160, 1.092, 162, 1.092, 163,
          2.584, 164, 1.585, 166, 1.585, 168, 2.547, 169, 1.115, 172, 1.115,
          173, 1.115, 174, 1.475, 175, 1.409, 176, 1.475, 178, 1.884, 183,
          1.798, 187, 1.092, 188, 1.585, 189, 1.585, 190, 1.092, 191, 2.046,
          192, 1.092, 193, 1.092, 194, 1.092, 195, 1.092, 196, 1.092, 197,
          1.092, 198, 1.017, 199, 1.092, 200, 0.947, 201, 1.092, 202, 1.092,
          203, 1.092, 204, 2.117, 205, 1.092, 206, 1.092, 207, 0.947, 208,
          1.092, 209, 1.092, 227, 2.848, 245, 1.618, 250, 2.164, 331, 1.585,
          341, 1.706, 352, 1.706, 353, 2.344, 366, 2.571, 368, 3.319, 390,
          2.203, 397, 1.991, 400, 3.319, 415, 2.73, 425, 1.492, 432, 3.368, 436,
          1.373, 444, 3.27, 445, 2.287, 493, 3.07, 543, 2.007, 545, 2.287, 546,
          2.287, 547, 2.287, 581, 3.319, 710, 2.912, 802, 2.007, 806, 2.912,
          807, 2.007, 809, 2.912, 818, 4.549, 819, 4.549, 820, 4.285, 821,
          2.287, 822, 4.285, 823, 3.76, 824, 2.794, 828, 3.319, 829, 2.912, 832,
          4.285, 833, 2.007, 834, 2.287, 835, 2.287, 836, 2.007, 837, 2.287,
          838, 2.287, 839, 2.287, 840, 2.287, 841, 2.287, 842, 2.287, 843,
          2.287, 844, 2.287, 846, 3.319, 847, 3.319, 848, 3.319, 1049, 5.014,
          1050, 2.287, 1051, 4.632, 1052, 3.936, 1053, 3.936, 1054, 2.712, 1055,
          3.936, 1056, 2.712, 1057, 2.712, 1058, 2.712, 1059, 2.712, 1060,
          2.712, 1061, 2.712, 1062, 2.712, 1063, 3.936, 1064, 3.936,
        ],
      ],
      ["title/injectables/ValidatorService.html", [210, 1.346, 824, 1.838]],
      [
        "body/injectables/ValidatorService.html",
        [
          9, 0.028, 27, 0.338, 28, 0.338, 29, 0.259, 34, 0.931, 39, 0.722, 41,
          1.847, 90, 1.379, 104, 2.051, 105, 0.298, 106, 0.119, 107, 0.02, 108,
          0.02, 135, 0.515, 138, 0.515, 144, 0.563, 145, 1.411, 148, 0.735, 169,
          1.596, 172, 1.442, 173, 1.442, 174, 1.48, 175, 1.311, 176, 1.48, 178,
          1.379, 210, 2.051, 212, 2.374, 215, 3.193, 245, 2.08, 246, 3.768, 259,
          2.374, 260, 2.172, 323, 2.951, 331, 2.051, 382, 2.784, 434, 3.768,
          498, 2.801, 580, 1.998, 823, 4.669, 824, 2.801, 1065, 3.33, 1066,
          5.093, 1067, 6.42, 1068, 3.949, 1069, 5.093, 1070, 3.949, 1071, 5.093,
          1072, 6.163, 1073, 3.949, 1074, 5.093, 1075, 5.637, 1076, 5.093, 1077,
          3.949, 1078, 3.949, 1079, 3.949, 1080, 3.949, 1081, 3.949, 1082,
          3.949,
        ],
      ],
      ["title/classes/WeaponData.html", [106, 0.101, 1083, 2.215]],
      [
        "body/classes/WeaponData.html",
        [
          9, 0.028, 27, 0.562, 28, 0.396, 29, 0.303, 34, 0.844, 105, 0.349, 106,
          0.14, 107, 0.022, 108, 0.022, 114, 2.254, 121, 4.031, 133, 1.613, 135,
          0.602, 136, 4.777, 138, 0.602, 139, 1.027, 144, 0.864, 145, 1.442,
          148, 0.79, 227, 3.393, 1034, 3.33, 1083, 3.724, 1084, 3.895, 1085,
          4.619, 1086, 4.619, 1087, 4.619, 1088, 4.619,
        ],
      ],
      ["title/components/WeaponsSoundsComponent.html", [19, 0.882, 116, 0.52]],
      [
        "body/components/WeaponsSoundsComponent.html",
        [
          8, 1.225, 9, 0.027, 10, 1.142, 11, 1.065, 12, 1.065, 13, 1.065, 14,
          1.142, 15, 1.142, 16, 1.065, 17, 1.065, 18, 1.142, 19, 1.584, 20,
          1.142, 27, 0.346, 28, 0.346, 29, 0.264, 34, 0.737, 39, 0.737, 58,
          2.062, 69, 1.142, 75, 3.421, 105, 0.304, 106, 0.122, 107, 0.02, 108,
          0.02, 116, 0.964, 122, 3.306, 135, 0.526, 148, 0.526, 154, 2.062, 156,
          1.681, 157, 1.512, 158, 1.624, 159, 1.624, 160, 1.624, 162, 1.624,
          163, 2.735, 164, 2.079, 166, 2.079, 169, 1.612, 172, 1.462, 173,
          1.462, 175, 1.098, 187, 1.624, 188, 2.079, 189, 2.079, 190, 1.624,
          191, 2.417, 192, 1.624, 193, 1.624, 194, 1.624, 195, 1.624, 196,
          1.624, 197, 1.624, 198, 1.512, 199, 1.624, 200, 1.408, 201, 1.624,
          202, 1.624, 203, 1.624, 204, 1.313, 205, 1.624, 206, 1.624, 207,
          1.408, 208, 1.624, 209, 1.624, 1089, 4.352, 1090, 3.4, 1091, 5.693,
          1092, 5.162, 1093, 4.033,
        ],
      ],
      ["title/classes/YesNo.html", [106, 0.101, 446, 1.691]],
      [
        "body/classes/YesNo.html",
        [
          9, 0.027, 27, 0.42, 28, 0.42, 29, 0.321, 105, 0.37, 106, 0.148, 107,
          0.023, 108, 0.023, 133, 1.712, 135, 0.639, 138, 0.639, 139, 1.064,
          144, 0.831, 145, 1.471, 148, 0.759, 200, 2.348, 207, 2.291, 446,
          2.946, 515, 3.734, 813, 4.91, 1094, 4.134, 1095, 4.903, 1096, 4.903,
        ],
      ],
      ["title/components/YesNoComponent.html", [20, 0.947, 116, 0.52]],
      [
        "body/components/YesNoComponent.html",
        [
          8, 1.101, 9, 0.028, 10, 1.027, 11, 0.957, 12, 0.957, 13, 0.957, 14,
          1.027, 15, 1.027, 16, 0.957, 17, 0.957, 18, 1.027, 19, 0.957, 20,
          1.631, 27, 0.311, 28, 0.311, 29, 0.238, 34, 0.988, 39, 0.663, 58,
          2.035, 69, 1.027, 81, 3.463, 105, 0.274, 106, 0.11, 107, 0.019, 108,
          0.019, 116, 0.932, 135, 0.628, 138, 0.473, 139, 0.88, 144, 0.687, 148,
          0.705, 154, 1.101, 156, 1.568, 157, 1.359, 158, 1.46, 159, 1.46, 160,
          1.46, 162, 1.46, 163, 2.698, 164, 1.939, 166, 1.939, 168, 2.973, 169,
          1.364, 172, 1.364, 173, 1.364, 174, 1.359, 175, 1.15, 176, 1.359, 178,
          1.266, 187, 1.46, 188, 1.939, 189, 1.939, 190, 1.46, 191, 2.32, 192,
          1.46, 193, 1.46, 194, 1.46, 195, 1.46, 196, 1.46, 197, 1.46, 198,
          1.359, 199, 1.46, 200, 1.266, 201, 1.46, 202, 1.46, 203, 1.46, 204,
          1.181, 205, 1.46, 206, 1.46, 207, 2.34, 208, 1.46, 209, 1.46, 227,
          3.034, 245, 1.266, 331, 1.939, 352, 2.087, 353, 2.736, 366, 2.915,
          390, 2.087, 397, 2.437, 425, 1.994, 436, 1.835, 446, 3.232, 447,
          2.683, 829, 3.563, 833, 2.683, 836, 2.683, 845, 4.06, 1097, 4.857,
          1098, 3.057, 1099, 5.407, 1100, 4.815, 1101, 3.625, 1102, 3.625, 1103,
          3.625, 1104, 3.625, 1105, 4.815,
        ],
      ],
      ["title/changelog.html", [1106, 2.066, 1107, 2.066, 1108, 2.355]],
      [
        "body/changelog.html",
        [
          8, 0.555, 9, 0.012, 10, 0.825, 11, 0.483, 12, 0.769, 13, 0.769, 14,
          0.518, 15, 0.518, 16, 0.483, 17, 0.483, 18, 0.518, 19, 0.769, 20,
          0.518, 29, 0.12, 39, 0.532, 58, 0.555, 69, 0.825, 91, 1.212, 93,
          1.092, 96, 1.353, 106, 0.055, 107, 0.012, 108, 0.012, 114, 0.638, 116,
          0.284, 118, 1.961, 119, 1.474, 120, 2.72, 122, 0.925, 123, 2.289, 124,
          1.353, 136, 1.353, 137, 1.353, 146, 1.017, 154, 0.885, 157, 0.685,
          179, 1.005, 181, 2.155, 198, 0.685, 204, 0.948, 211, 0.792, 214,
          1.838, 215, 1.474, 218, 1.099, 239, 1.353, 250, 1.997, 253, 4.678,
          260, 1.005, 290, 0.792, 309, 2.155, 311, 1.212, 324, 1.541, 327,
          1.212, 338, 2.096, 358, 1.005, 359, 2.183, 369, 1.353, 373, 2.407,
          377, 0.792, 415, 0.925, 423, 1.099, 440, 1.005, 442, 0.925, 444,
          1.005, 446, 0.925, 454, 4.563, 457, 1.541, 460, 1.541, 461, 1.353,
          481, 1.931, 496, 1.353, 498, 1.005, 508, 5.784, 515, 1.099, 537,
          3.065, 543, 1.353, 553, 1.541, 555, 1.099, 577, 2.183, 590, 3.644,
          604, 1.353, 640, 1.541, 642, 1.541, 643, 2.407, 644, 1.541, 655,
          1.353, 705, 1.541, 730, 1.931, 736, 1.212, 787, 1.099, 794, 1.212,
          803, 1.541, 824, 1.005, 857, 1.931, 863, 1.541, 868, 3.815, 875,
          1.541, 885, 1.212, 896, 2.456, 928, 1.931, 968, 1.541, 969, 1.541,
          971, 1.099, 987, 1.353, 1001, 2.687, 1034, 1.602, 1083, 1.212, 1108,
          1.541, 1109, 2.456, 1110, 4.935, 1111, 5.001, 1112, 1.828, 1113,
          5.999, 1114, 1.828, 1115, 1.828, 1116, 1.828, 1117, 6.616, 1118,
          1.828, 1119, 1.828, 1120, 1.828, 1121, 1.828, 1122, 1.828, 1123,
          1.828, 1124, 1.828, 1125, 1.828, 1126, 1.828, 1127, 1.828, 1128,
          1.828, 1129, 1.828, 1130, 1.828, 1131, 1.828, 1132, 1.828, 1133,
          1.828, 1134, 1.828, 1135, 3.631, 1136, 1.828, 1137, 1.828, 1138,
          1.828, 1139, 1.828, 1140, 1.828, 1141, 1.828, 1142, 1.828, 1143,
          1.828, 1144, 1.828, 1145, 1.828, 1146, 1.828, 1147, 1.828, 1148,
          1.828, 1149, 1.828, 1150, 1.828, 1151, 1.828, 1152, 1.828, 1153,
          1.828, 1154, 1.828, 1155, 2.913, 1156, 1.828, 1157, 1.828, 1158,
          1.828, 1159, 1.828, 1160, 1.828, 1161, 1.828, 1162, 1.828, 1163,
          1.828, 1164, 1.541, 1165, 1.828, 1166, 6.691, 1167, 3.631, 1168,
          2.913, 1169, 1.828, 1170, 1.828, 1171, 4.821, 1172, 5.547, 1173,
          4.142, 1174, 2.913, 1175, 1.828, 1176, 4.142, 1177, 1.828, 1178,
          4.821, 1179, 4.142, 1180, 2.913, 1181, 1.828, 1182, 1.828, 1183,
          1.828, 1184, 1.541, 1185, 1.828, 1186, 1.541, 1187, 1.828, 1188,
          2.913, 1189, 2.913, 1190, 2.913, 1191, 1.828, 1192, 1.828, 1193,
          3.631, 1194, 1.828, 1195, 5.999, 1196, 3.631, 1197, 2.913, 1198,
          2.913, 1199, 1.828, 1200, 1.828, 1201, 1.828, 1202, 5.25, 1203, 1.828,
          1204, 2.913, 1205, 1.828, 1206, 1.828, 1207, 1.828, 1208, 1.828, 1209,
          1.828, 1210, 2.913, 1211, 1.828, 1212, 1.828, 1213, 1.828, 1214,
          1.828, 1215, 3.631, 1216, 1.828, 1217, 1.828, 1218, 1.828, 1219,
          1.828, 1220, 1.828, 1221, 1.541, 1222, 1.828, 1223, 1.828, 1224,
          1.828, 1225, 2.913, 1226, 1.828, 1227, 1.828, 1228, 1.828, 1229,
          1.828, 1230, 2.913, 1231, 2.913, 1232, 1.828, 1233, 1.828, 1234,
          1.828, 1235, 1.828, 1236, 1.828, 1237, 1.828, 1238, 1.828, 1239,
          1.828, 1240, 1.828, 1241, 5.664, 1242, 4.264, 1243, 1.828, 1244,
          3.631, 1245, 4.142, 1246, 1.828, 1247, 1.828, 1248, 2.456, 1249,
          1.828, 1250, 4.142, 1251, 1.828, 1252, 1.828, 1253, 2.913, 1254,
          1.828, 1255, 1.828, 1256, 1.828, 1257, 1.828, 1258, 2.913, 1259,
          1.828, 1260, 1.828, 1261, 1.828, 1262, 1.828, 1263, 1.828, 1264,
          1.828, 1265, 1.828, 1266, 1.828, 1267, 1.828, 1268, 1.828, 1269,
          1.828, 1270, 1.828, 1271, 2.913, 1272, 1.828, 1273, 1.828, 1274,
          1.828, 1275, 1.828, 1276, 1.828, 1277, 1.828, 1278, 1.828, 1279,
          1.828, 1280, 1.828, 1281, 1.828, 1282, 2.913, 1283, 1.828, 1284,
          1.828, 1285, 1.828, 1286, 1.828, 1287, 1.828, 1288, 1.828, 1289,
          1.828, 1290, 1.828, 1291, 2.913, 1292, 1.828, 1293, 1.828, 1294,
          2.913, 1295, 2.913, 1296, 1.828, 1297, 2.913, 1298, 1.828, 1299,
          1.828, 1300, 1.828, 1301, 1.828, 1302, 1.828, 1303, 1.828, 1304,
          1.828, 1305, 1.541, 1306, 1.828, 1307, 1.828, 1308, 1.828, 1309,
          1.828, 1310, 1.828, 1311, 1.828, 1312, 1.828, 1313, 1.828, 1314,
          1.828, 1315, 1.828, 1316, 1.828, 1317, 1.828, 1318, 1.828, 1319,
          1.828, 1320, 1.828, 1321, 1.828, 1322, 1.828, 1323, 1.828, 1324,
          1.828, 1325, 1.828, 1326, 1.828, 1327, 4.524, 1328, 1.828, 1329,
          1.828, 1330, 3.631, 1331, 1.828, 1332, 2.913, 1333, 2.913, 1334,
          1.828, 1335, 1.828, 1336, 2.913, 1337, 1.828, 1338, 1.828, 1339,
          1.828, 1340, 1.828, 1341, 2.913, 1342, 1.541, 1343, 1.828, 1344,
          1.828, 1345, 1.828, 1346, 1.828, 1347, 2.913, 1348, 1.828, 1349,
          1.828, 1350, 2.456, 1351, 1.828, 1352, 4.142, 1353, 1.828, 1354,
          1.828, 1355, 2.913, 1356, 1.828, 1357, 1.828, 1358, 2.913, 1359,
          1.828, 1360, 1.828, 1361, 2.913, 1362, 1.828, 1363, 1.828, 1364,
          1.828, 1365, 1.541, 1366, 1.828, 1367, 1.828, 1368, 1.828, 1369,
          1.828, 1370, 1.828, 1371, 1.828, 1372, 1.828, 1373, 1.828, 1374,
          2.913, 1375, 1.828, 1376, 1.541, 1377, 1.828, 1378, 1.828, 1379,
          1.541, 1380, 1.828, 1381, 1.828, 1382, 1.828, 1383, 1.828, 1384,
          1.828, 1385, 1.828, 1386, 1.828, 1387, 1.828, 1388, 2.913, 1389,
          2.456, 1390, 1.828, 1391, 1.828, 1392, 1.828, 1393, 1.828, 1394,
          1.828, 1395, 2.913, 1396, 1.828, 1397, 1.828, 1398, 1.828, 1399,
          1.828, 1400, 2.913, 1401, 1.828, 1402, 1.828, 1403, 1.828, 1404,
          1.828, 1405, 1.828, 1406, 1.828, 1407, 1.828, 1408, 1.828, 1409,
          2.913, 1410, 1.828, 1411, 1.828, 1412, 4.142, 1413, 4.142, 1414,
          4.524, 1415, 1.828, 1416, 1.828, 1417, 1.828, 1418, 1.828, 1419,
          1.828, 1420, 1.828, 1421, 1.828, 1422, 1.828, 1423, 1.828, 1424,
          1.828, 1425, 1.828, 1426, 2.913, 1427, 2.913, 1428, 1.828, 1429,
          1.828, 1430, 1.828, 1431, 2.913, 1432, 1.828, 1433, 1.828, 1434,
          1.828, 1435, 1.828, 1436, 1.828, 1437, 1.828, 1438, 1.828, 1439,
          1.828, 1440, 1.828, 1441, 1.828, 1442, 1.828, 1443, 1.828, 1444,
          1.828, 1445, 1.828, 1446, 1.828, 1447, 1.828, 1448, 2.913, 1449,
          1.828, 1450, 1.828, 1451, 1.828, 1452, 1.828, 1453, 1.828, 1454,
          1.828, 1455, 1.828, 1456, 1.828, 1457, 1.828, 1458, 1.828, 1459,
          1.828, 1460, 1.828, 1461, 1.541, 1462, 1.828, 1463, 1.828, 1464,
          1.828, 1465, 1.828, 1466, 1.828, 1467, 1.828, 1468, 1.828, 1469,
          1.828, 1470, 1.828, 1471, 2.913, 1472, 1.828, 1473, 1.828, 1474,
          1.828, 1475, 2.913, 1476, 1.828, 1477, 1.828, 1478, 1.828, 1479,
          1.828, 1480, 1.828, 1481, 1.828, 1482, 1.828, 1483, 1.828, 1484,
          1.828, 1485, 1.828, 1486, 1.828, 1487, 1.828, 1488, 1.828, 1489,
          1.828, 1490, 1.828, 1491, 1.828,
        ],
      ],
      ["title/coverage.html", [1492, 3.844]],
      [
        "body/coverage.html",
        [
          8, 1.085, 9, 0.028, 10, 1.012, 11, 0.943, 12, 0.943, 13, 0.943, 14,
          1.012, 15, 1.012, 16, 0.943, 17, 0.943, 18, 1.012, 19, 0.943, 20,
          1.012, 29, 0.234, 30, 2.644, 66, 2.368, 69, 1.351, 70, 2.368, 75,
          2.368, 78, 2.148, 81, 2.148, 91, 2.368, 93, 1.339, 106, 0.198, 107,
          0.019, 108, 0.019, 116, 1.028, 118, 1.549, 119, 1.808, 123, 1.808,
          132, 2.644, 134, 3.013, 144, 0.51, 161, 3.013, 183, 4.618, 210, 2.307,
          211, 1.549, 213, 3.013, 327, 2.368, 328, 3.013, 329, 3.013, 348,
          3.013, 351, 3.013, 377, 1.549, 442, 1.808, 444, 1.965, 446, 1.808,
          588, 3.013, 595, 3.013, 730, 2.368, 731, 3.013, 752, 2.644, 794,
          2.368, 795, 3.013, 796, 3.013, 808, 3.013, 814, 3.013, 815, 3.013,
          824, 1.965, 849, 3.013, 864, 3.013, 885, 3.796, 941, 3.013, 971,
          2.148, 972, 3.529, 1034, 2.623, 1035, 3.013, 1044, 3.013, 1049, 3.013,
          1050, 3.013, 1065, 3.013, 1083, 2.368, 1084, 3.013, 1089, 3.013, 1090,
          3.013, 1094, 3.013, 1097, 3.013, 1098, 3.013, 1492, 3.013, 1493,
          3.013, 1494, 3.573, 1495, 3.573, 1496, 3.573, 1497, 3.573, 1498,
          6.447, 1499, 6.447, 1500, 4.769, 1501, 3.573, 1502, 3.573, 1503,
          5.727, 1504, 3.573, 1505, 4.769, 1506, 3.573, 1507, 3.573, 1508,
          3.573, 1509, 3.573, 1510, 3.573, 1511, 5.967, 1512, 3.013, 1513,
          5.727, 1514, 4.769, 1515, 3.573, 1516, 3.013, 1517, 3.013, 1518,
          3.013, 1519, 3.013, 1520, 4.021, 1521, 3.013, 1522, 3.013, 1523,
          3.573, 1524, 3.573,
        ],
      ],
      ["title/dependencies.html", [3, 2.416, 1221, 2.355]],
      [
        "body/dependencies.html",
        [
          3, 2.885, 9, 0.028, 33, 4.046, 39, 0.877, 41, 2.244, 45, 4.847, 46,
          4.253, 107, 0.023, 108, 0.023, 113, 3.55, 114, 1.676, 131, 4.046, 215,
          2.428, 216, 4.046, 219, 4.046, 258, 4.046, 440, 2.639, 1164, 4.046,
          1184, 4.046, 1242, 5.784, 1248, 4.046, 1342, 4.046, 1350, 4.046, 1525,
          4.798, 1526, 4.798, 1527, 4.798, 1528, 4.798, 1529, 4.798, 1530,
          4.798, 1531, 4.798, 1532, 4.798, 1533, 4.798, 1534, 4.798, 1535,
          4.798,
        ],
      ],
      ["title/index.html", [138, 0.364, 1106, 2.066, 1107, 2.066]],
      [
        "body/index.html",
        [
          9, 0.023, 69, 1.647, 107, 0.023, 108, 0.023, 118, 2.121, 119, 2.476,
          120, 3.497, 122, 2.943, 179, 3.413, 181, 4.303, 204, 1.894, 294,
          3.621, 330, 4.126, 338, 2.476, 358, 3.198, 367, 4.126, 393, 3.855,
          394, 3.855, 431, 2.942, 456, 3.243, 590, 2.942, 736, 3.855, 856,
          3.621, 857, 3.243, 922, 4.904, 970, 4.126, 1365, 4.126, 1376, 4.126,
          1536, 4.893, 1537, 5.816, 1538, 4.893, 1539, 4.893, 1540, 4.893, 1541,
          4.893, 1542, 4.893, 1543, 4.893, 1544, 4.893, 1545, 4.893, 1546,
          4.893, 1547, 4.893, 1548, 4.893,
        ],
      ],
      ["title/license.html", [1106, 2.066, 1107, 2.066, 1549, 2.793]],
      [
        "body/license.html",
        [
          9, 0.02, 26, 3.741, 107, 0.02, 108, 0.02, 244, 3.351, 250, 3.261, 338,
          2.559, 415, 2.559, 555, 3.565, 974, 3.351, 1110, 3.293, 1493, 4.263,
          1550, 6.292, 1551, 3.906, 1552, 5.93, 1553, 5.056, 1554, 5.056, 1555,
          5.056, 1556, 5.056, 1557, 5.056, 1558, 5.056, 1559, 6.85, 1560, 5.056,
          1561, 5.056, 1562, 6.292, 1563, 5.056, 1564, 5.93, 1565, 5.056, 1566,
          5.056, 1567, 5.056, 1568, 5.056, 1569, 5.056, 1570, 5.056, 1571,
          5.056, 1572, 5.056, 1573, 5.056, 1574, 5.93, 1575, 5.056, 1576, 5.056,
          1577, 5.056, 1578, 5.056, 1579, 5.056, 1580, 5.056, 1581, 5.056, 1582,
          5, 1583, 5.93, 1584, 5.056, 1585, 5.056, 1586, 5.056, 1587, 5.056,
          1588, 5.056, 1589, 5.056, 1590, 5.056, 1591, 5.056, 1592, 5.056, 1593,
          5.056, 1594, 5.056, 1595, 5.056, 1596, 5.056, 1597, 5.056, 1598,
          5.056, 1599, 5.056, 1600, 5.056, 1601, 5.056, 1602, 5.056, 1603,
          5.056, 1604, 5.056, 1605, 5.056, 1606, 5.056, 1607, 5.056, 1608,
          5.056, 1609, 5.056, 1610, 5.056, 1611, 3.906, 1612, 3.906, 1613,
          3.906,
        ],
      ],
      ["title/modules.html", [2, 2.307]],
      [
        "body/modules.html",
        [
          1, 3.469, 2, 2.649, 9, 0.024, 21, 3.147, 22, 3.147, 23, 3.147, 46,
          3.873, 107, 0.024, 108, 0.024, 884, 5.381, 1461, 4.413, 1614, 5.234,
          1615, 6.562, 1616, 6.382,
        ],
      ],
      ["title/overview.html", [1617, 3.844]],
      [
        "body/overview.html",
        [
          1, 4.657, 2, 2.183, 3, 3.238, 4, 3.637, 5, 3.637, 6, 3.637, 7, 3.637,
          8, 1.989, 9, 0.027, 10, 1.663, 11, 1.55, 12, 1.55, 13, 1.55, 14,
          1.663, 15, 1.663, 16, 1.55, 17, 1.55, 18, 1.663, 19, 1.55, 20, 1.663,
          21, 3.531, 22, 3.531, 23, 3.531, 24, 4.541, 25, 3.192, 26, 3.192, 107,
          0.021, 108, 0.021, 112, 2.859, 133, 1.506, 156, 1.405, 212, 2.593,
          1111, 3.637, 1389, 3.637, 1617, 3.637, 1618, 5.386, 1619, 4.314,
        ],
      ],
      ["title/routes.html", [112, 3.022]],
      ["body/routes.html", [9, 0.024, 107, 0.024, 108, 0.024, 112, 3.598]],
      ["title/miscellaneous/variables.html", [1620, 2.355, 1621, 3.389]],
      [
        "body/miscellaneous/variables.html",
        [
          9, 0.028, 30, 0.917, 34, 0.227, 35, 0.917, 40, 0.917, 55, 1.045, 83,
          0.917, 85, 1.045, 86, 1.045, 87, 1.045, 88, 1.045, 89, 1.045, 91,
          1.401, 92, 0.822, 93, 0.465, 94, 1.045, 95, 1.045, 96, 0.917, 104,
          0.851, 105, 0.094, 106, 0.202, 107, 0.008, 108, 0.008, 138, 0.162,
          143, 4.935, 144, 0.608, 146, 1.567, 147, 1.682, 154, 0.376, 156,
          0.404, 175, 1.419, 239, 0.917, 296, 3.089, 376, 0.627, 393, 0.822,
          431, 0.745, 590, 1.963, 650, 1.564, 752, 0.917, 753, 1.045, 754,
          1.045, 756, 1.045, 758, 1.045, 760, 1.045, 762, 1.045, 763, 1.045,
          765, 1.045, 768, 1.045, 770, 1.045, 772, 1.045, 774, 1.045, 777,
          1.045, 778, 1.045, 780, 1.045, 783, 1.045, 785, 1.045, 787, 0.745,
          788, 1.045, 790, 1.045, 792, 1.045, 794, 1.401, 882, 1.661, 885,
          3.397, 910, 1.782, 974, 0.822, 1034, 1.52, 1037, 5.624, 1038, 5.624,
          1109, 2.753, 1186, 1.045, 1305, 1.045, 1379, 1.045, 1512, 1.045, 1516,
          1.045, 1517, 1.045, 1518, 1.045, 1519, 1.045, 1520, 1.045, 1521, 2.33,
          1522, 2.33, 1582, 1.045, 1620, 1.045, 1621, 1.045, 1622, 1.24, 1623,
          1.24, 1624, 1.24, 1625, 1.24, 1626, 2.114, 1627, 1.24, 1628, 1.24,
          1629, 1.24, 1630, 3.265, 1631, 3.265, 1632, 3.265, 1633, 1.24, 1634,
          1.24, 1635, 1.24, 1636, 1.24, 1637, 1.24, 1638, 5.24, 1639, 1.24,
          1640, 2.114, 1641, 2.114, 1642, 2.114, 1643, 5.934, 1644, 1.24, 1645,
          2.114, 1646, 2.114, 1647, 2.763, 1648, 5.977, 1649, 1.24, 1650, 1.24,
          1651, 1.24, 1652, 2.114, 1653, 2.114, 1654, 6.054, 1655, 1.24, 1656,
          1.24, 1657, 1.24, 1658, 2.114, 1659, 2.763, 1660, 1.24, 1661, 1.24,
          1662, 4.486, 1663, 1.24, 1664, 1.24, 1665, 1.24, 1666, 1.24, 1667,
          1.24, 1668, 1.24, 1669, 1.24, 1670, 1.24, 1671, 1.24, 1672, 1.24,
          1673, 1.24, 1674, 1.24, 1675, 1.24, 1676, 5.435, 1677, 5.435, 1678,
          4.486, 1679, 4.259, 1680, 4.259, 1681, 4.259, 1682, 4.259, 1683,
          4.259, 1684, 4.259, 1685, 4.259, 1686, 4.259, 1687, 3.989, 1688,
          3.989, 1689, 4.486, 1690, 4.486, 1691, 4.486, 1692, 4.259, 1693,
          4.259, 1694, 4.681, 1695, 4.681, 1696, 1.24, 1697, 2.114, 1698, 1.24,
          1699, 1.24, 1700, 1.24, 1701, 1.24, 1702, 1.24, 1703, 2.114, 1704,
          1.24, 1705, 1.24, 1706, 2.114, 1707, 1.24, 1708, 2.114, 1709, 2.114,
          1710, 1.24, 1711, 2.114, 1712, 2.114, 1713, 3.265, 1714, 2.114, 1715,
          2.114, 1716, 1.24, 1717, 1.24, 1718, 1.24, 1719, 1.24, 1720, 1.24,
          1721, 2.114, 1722, 2.114, 1723, 1.24, 1724, 2.114, 1725, 2.114, 1726,
          4.486, 1727, 1.24, 1728, 2.114, 1729, 2.114, 1730, 1.24, 1731, 1.24,
          1732, 1.24, 1733, 1.24, 1734, 1.24, 1735, 1.24, 1736, 1.24, 1737,
          1.24, 1738, 2.114, 1739, 2.114, 1740, 1.24, 1741, 2.114, 1742, 2.114,
          1743, 1.24, 1744, 1.24, 1745, 1.24, 1746, 1.24, 1747, 1.24, 1748,
          2.763, 1749, 2.763, 1750, 1.24, 1751, 1.24, 1752, 1.24, 1753, 1.24,
          1754, 2.114, 1755, 2.114, 1756, 1.24, 1757, 2.763, 1758, 3.989, 1759,
          2.114, 1760, 2.114, 1761, 1.24, 1762, 1.24, 1763, 1.24, 1764, 1.24,
          1765, 1.24, 1766, 3.265, 1767, 1.24, 1768, 3.265, 1769, 2.114, 1770,
          2.114, 1771, 3.265, 1772, 3.664, 1773, 4.486, 1774, 1.24, 1775, 2.114,
          1776, 2.114, 1777, 1.24, 1778, 1.24, 1779, 1.24, 1780, 1.24, 1781,
          1.24, 1782, 1.24, 1783, 1.24, 1784, 1.24, 1785, 1.24, 1786, 1.24,
          1787, 2.114, 1788, 2.114, 1789, 2.763, 1790, 1.24, 1791, 1.24, 1792,
          1.24, 1793, 1.24, 1794, 2.114, 1795, 2.763, 1796, 1.24, 1797, 2.114,
          1798, 1.24, 1799, 1.24, 1800, 1.24, 1801, 1.24, 1802, 1.24, 1803,
          1.24, 1804, 1.24, 1805, 1.24, 1806, 1.24, 1807, 1.24, 1808, 1.24,
          1809, 1.24, 1810, 1.24, 1811, 1.24, 1812, 1.24, 1813, 1.24, 1814,
          1.24, 1815, 1.24, 1816, 2.763, 1817, 2.763, 1818, 1.24, 1819, 1.24,
          1820, 1.24, 1821, 4.259, 1822, 1.24, 1823, 2.114, 1824, 2.114, 1825,
          1.24, 1826, 1.24, 1827, 2.763, 1828, 1.24, 1829, 1.24, 1830, 2.114,
          1831, 2.114, 1832, 1.24, 1833, 1.24, 1834, 2.114, 1835, 1.24, 1836,
          1.24, 1837, 1.24, 1838, 2.114, 1839, 1.24, 1840, 1.24, 1841, 1.24,
          1842, 1.24, 1843, 1.24, 1844, 1.24, 1845, 1.24, 1846, 1.24, 1847,
          1.24, 1848, 1.24, 1849, 1.24, 1850, 1.24, 1851, 1.24, 1852, 1.24,
          1853, 1.24, 1854, 1.24, 1855, 1.24, 1856, 1.24, 1857, 1.24, 1858,
          2.114, 1859, 2.114, 1860, 3.265, 1861, 1.24, 1862, 2.763, 1863, 1.24,
          1864, 2.763, 1865, 1.24, 1866, 2.114, 1867, 2.114, 1868, 1.24, 1869,
          1.24, 1870, 1.24, 1871, 1.24, 1872, 1.24, 1873, 1.24, 1874, 1.24,
          1875, 1.24, 1876, 1.24, 1877, 1.24, 1878, 1.24, 1879, 1.24, 1880,
          1.24, 1881, 1.24, 1882, 1.24, 1883, 1.24, 1884, 1.24, 1885, 1.24,
          1886, 1.24, 1887, 1.24, 1888, 1.24, 1889, 1.24, 1890, 1.24, 1891,
          2.763, 1892, 1.24, 1893, 1.24, 1894, 1.24, 1895, 1.24, 1896, 1.24,
          1897, 1.24, 1898, 1.24, 1899, 1.24, 1900, 1.24, 1901, 1.24, 1902,
          1.24, 1903, 4.486, 1904, 1.24, 1905, 2.114, 1906, 1.24, 1907, 2.114,
          1908, 1.24, 1909, 1.24, 1910, 1.24, 1911, 1.24, 1912, 1.24, 1913,
          1.24, 1914, 1.24, 1915, 1.24, 1916, 2.114, 1917, 1.24, 1918, 2.114,
          1919, 2.114, 1920, 1.24, 1921, 2.114, 1922, 2.114, 1923, 1.24, 1924,
          1.24, 1925, 1.24, 1926, 2.114, 1927, 2.114, 1928, 1.24, 1929, 1.24,
          1930, 1.24, 1931, 1.24, 1932, 1.24, 1933, 3.265, 1934, 1.24, 1935,
          2.114, 1936, 2.114, 1937, 1.24, 1938, 1.24, 1939, 1.24, 1940, 1.24,
          1941, 1.24, 1942, 1.24, 1943, 1.24, 1944, 1.24, 1945, 1.24, 1946,
          1.24, 1947, 1.24, 1948, 1.24, 1949, 1.24, 1950, 1.24, 1951, 1.24,
          1952, 2.114, 1953, 1.24, 1954, 1.24, 1955, 4.681, 1956, 1.24, 1957,
          1.24, 1958, 1.24, 1959, 1.24, 1960, 1.24, 1961, 1.24, 1962, 2.114,
          1963, 1.24, 1964, 2.114, 1965, 2.114, 1966, 1.24, 1967, 2.114, 1968,
          1.24, 1969, 1.24, 1970, 1.24, 1971, 1.24, 1972, 1.24, 1973, 1.24,
          1974, 1.24, 1975, 1.24, 1976, 1.24, 1977, 1.24, 1978, 1.24, 1979,
          1.24, 1980, 1.24, 1981, 1.24, 1982, 1.24, 1983, 2.763, 1984, 2.763,
          1985, 1.24, 1986, 1.24, 1987, 1.24, 1988, 1.24, 1989, 1.24, 1990,
          1.24, 1991, 1.24, 1992, 2.114, 1993, 1.24, 1994, 3.664, 1995, 1.24,
          1996, 1.24, 1997, 1.24, 1998, 1.24, 1999, 1.24, 2000, 1.24, 2001,
          1.24, 2002, 1.24, 2003, 1.24, 2004, 1.24, 2005, 1.24, 2006, 1.24,
          2007, 1.24, 2008, 1.24, 2009, 1.24, 2010, 1.24, 2011, 1.24, 2012,
          1.24, 2013, 1.24, 2014, 1.24, 2015, 1.24, 2016, 1.24, 2017, 1.24,
          2018, 1.24, 2019, 1.24, 2020, 1.24, 2021, 1.24, 2022, 1.24, 2023,
          2.114, 2024, 1.24,
        ],
      ],
    ],
    invertedIndex: [
      [
        "",
        {
          _index: 9,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "modules/MaterialModule.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "index.html": {},
            "license.html": {},
            "modules.html": {},
            "overview.html": {},
            "routes.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "0",
        {
          _index: 580,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "injectables/ValidatorService.html": {},
          },
        },
      ],
      [
        "0.11.4",
        { _index: 1535, title: {}, body: { "dependencies.html": {} } },
      ],
      ["00a5a2f", { _index: 1337, title: {}, body: { "changelog.html": {} } }],
      ["00a72e4", { _index: 1479, title: {}, body: { "changelog.html": {} } }],
      ["00f73c4", { _index: 1481, title: {}, body: { "changelog.html": {} } }],
      ["026719d", { _index: 1390, title: {}, body: { "changelog.html": {} } }],
      ["0336909", { _index: 1403, title: {}, body: { "changelog.html": {} } }],
      ["042eb0c", { _index: 1480, title: {}, body: { "changelog.html": {} } }],
      ["04e8776", { _index: 1354, title: {}, body: { "changelog.html": {} } }],
      ["06fb1e4", { _index: 1142, title: {}, body: { "changelog.html": {} } }],
      ["08", { _index: 1472, title: {}, body: { "changelog.html": {} } }],
      ["084c390", { _index: 1208, title: {}, body: { "changelog.html": {} } }],
      ["08e31f5", { _index: 1165, title: {}, body: { "changelog.html": {} } }],
      ["0c7828e", { _index: 1144, title: {}, body: { "changelog.html": {} } }],
      ["0dbbfd9", { _index: 1375, title: {}, body: { "changelog.html": {} } }],
      [
        "1",
        {
          _index: 464,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      ["1.0.0", { _index: 1529, title: {}, body: { "dependencies.html": {} } }],
      ["1.1.2", { _index: 1471, title: {}, body: { "changelog.html": {} } }],
      ["1.16.3", { _index: 1426, title: {}, body: { "changelog.html": {} } }],
      ["1.17.1", { _index: 1427, title: {}, body: { "changelog.html": {} } }],
      ["1.2.0", { _index: 1395, title: {}, body: { "changelog.html": {} } }],
      ["1.2.1", { _index: 1388, title: {}, body: { "changelog.html": {} } }],
      ["1/1", { _index: 1499, title: {}, body: { "coverage.html": {} } }],
      [
        "10.0.0",
        { _index: 1531, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "100",
        {
          _index: 183,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "1000",
        {
          _index: 706,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "11",
        {
          _index: 1389,
          title: {},
          body: { "changelog.html": {}, "overview.html": {} },
        },
      ],
      ["11/11", { _index: 1500, title: {}, body: { "coverage.html": {} } }],
      [
        "12",
        {
          _index: 1111,
          title: {},
          body: { "changelog.html": {}, "overview.html": {} },
        },
      ],
      ["12427ef", { _index: 1398, title: {}, body: { "changelog.html": {} } }],
      [
        "12px",
        {
          _index: 931,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      ["13.0.0", { _index: 1412, title: {}, body: { "changelog.html": {} } }],
      ["13.0.1", { _index: 1414, title: {}, body: { "changelog.html": {} } }],
      ["13.0.2", { _index: 1409, title: {}, body: { "changelog.html": {} } }],
      [
        "13.1.0",
        {
          _index: 1242,
          title: {},
          body: { "changelog.html": {}, "dependencies.html": {} },
        },
      ],
      ["13.1.1", { _index: 1245, title: {}, body: { "changelog.html": {} } }],
      ["13.1.2", { _index: 1246, title: {}, body: { "changelog.html": {} } }],
      ["14", { _index: 1385, title: {}, body: { "changelog.html": {} } }],
      ["14c3473", { _index: 1243, title: {}, body: { "changelog.html": {} } }],
      ["154394c", { _index: 1146, title: {}, body: { "changelog.html": {} } }],
      ["16.0.0", { _index: 1434, title: {}, body: { "changelog.html": {} } }],
      ["16.0.4", { _index: 1355, title: {}, body: { "changelog.html": {} } }],
      ["16.0.5", { _index: 1356, title: {}, body: { "changelog.html": {} } }],
      ["16.11.12", { _index: 1210, title: {}, body: { "changelog.html": {} } }],
      ["16.11.7", { _index: 1429, title: {}, body: { "changelog.html": {} } }],
      ["1642c5f", { _index: 1143, title: {}, body: { "changelog.html": {} } }],
      ["166efe2", { _index: 1430, title: {}, body: { "changelog.html": {} } }],
      ["16fac3e", { _index: 1124, title: {}, body: { "changelog.html": {} } }],
      ["17", { _index: 1330, title: {}, body: { "changelog.html": {} } }],
      ["17.0.4", { _index: 1168, title: {}, body: { "changelog.html": {} } }],
      ["17.0.5", { _index: 1169, title: {}, body: { "changelog.html": {} } }],
      ["18", { _index: 1298, title: {}, body: { "changelog.html": {} } }],
      ["19", { _index: 1292, title: {}, body: { "changelog.html": {} } }],
      ["1a39c11", { _index: 1362, title: {}, body: { "changelog.html": {} } }],
      ["1bd5906", { _index: 1160, title: {}, body: { "changelog.html": {} } }],
      ["1e2e677", { _index: 1432, title: {}, body: { "changelog.html": {} } }],
      [
        "2",
        {
          _index: 705,
          title: {},
          body: { "components/HudComponent.html": {}, "changelog.html": {} },
        },
      ],
      ["2.0.1", { _index: 1374, title: {}, body: { "changelog.html": {} } }],
      [
        "2.1.0",
        {
          _index: 1342,
          title: {},
          body: { "changelog.html": {}, "dependencies.html": {} },
        },
      ],
      ["2.1.1", { _index: 1214, title: {}, body: { "changelog.html": {} } }],
      ["2.2.0", { _index: 1341, title: {}, body: { "changelog.html": {} } }],
      ["2.2.1", { _index: 1336, title: {}, body: { "changelog.html": {} } }],
      ["2.2.2", { _index: 1215, title: {}, body: { "changelog.html": {} } }],
      [
        "2.29.1",
        { _index: 1532, title: {}, body: { "dependencies.html": {} } },
      ],
      ["2/2", { _index: 1505, title: {}, body: { "coverage.html": {} } }],
      ["20/20", { _index: 1507, title: {}, body: { "coverage.html": {} } }],
      ["2020", { _index: 1611, title: {}, body: { "license.html": {} } }],
      [
        "2021",
        {
          _index: 1110,
          title: {},
          body: { "changelog.html": {}, "license.html": {} },
        },
      ],
      ["20531d7", { _index: 1299, title: {}, body: { "changelog.html": {} } }],
      ["2126270", { _index: 1132, title: {}, body: { "changelog.html": {} } }],
      ["22", { _index: 1272, title: {}, body: { "changelog.html": {} } }],
      ["22.13.1", { _index: 1437, title: {}, body: { "changelog.html": {} } }],
      ["22.14.5", { _index: 1438, title: {}, body: { "changelog.html": {} } }],
      ["22/22", { _index: 1504, title: {}, body: { "coverage.html": {} } }],
      ["222c4bc", { _index: 1175, title: {}, body: { "changelog.html": {} } }],
      ["228e9df", { _index: 1229, title: {}, body: { "changelog.html": {} } }],
      ["22bdbe5", { _index: 1476, title: {}, body: { "changelog.html": {} } }],
      ["23", { _index: 1226, title: {}, body: { "changelog.html": {} } }],
      ["236d288", { _index: 1287, title: {}, body: { "changelog.html": {} } }],
      ["245da9f", { _index: 1372, title: {}, body: { "changelog.html": {} } }],
      ["2559bbd", { _index: 1410, title: {}, body: { "changelog.html": {} } }],
      ["27", { _index: 1205, title: {}, body: { "changelog.html": {} } }],
      ["2733daf", { _index: 1274, title: {}, body: { "changelog.html": {} } }],
      ["276ed6d", { _index: 1159, title: {}, body: { "changelog.html": {} } }],
      ["2969808", { _index: 1123, title: {}, body: { "changelog.html": {} } }],
      [
        "2\\\\tf\\\\custom",
        {
          _index: 954,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      ["2edb1ad", { _index: 1149, title: {}, body: { "changelog.html": {} } }],
      ["2f6284f", { _index: 1136, title: {}, body: { "changelog.html": {} } }],
      [
        "2px",
        {
          _index: 934,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      ["3.0.0", { _index: 1297, title: {}, body: { "changelog.html": {} } }],
      ["3.0.1", { _index: 1291, title: {}, body: { "changelog.html": {} } }],
      ["3/3", { _index: 1503, title: {}, body: { "coverage.html": {} } }],
      ["30", { _index: 1112, title: {}, body: { "changelog.html": {} } }],
      [
        "3000",
        {
          _index: 707,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      ["34533b1", { _index: 1349, title: {}, body: { "changelog.html": {} } }],
      ["36/36", { _index: 1497, title: {}, body: { "coverage.html": {} } }],
      ["361712c", { _index: 1419, title: {}, body: { "changelog.html": {} } }],
      ["37.0.3", { _index: 1442, title: {}, body: { "changelog.html": {} } }],
      ["37.2.0", { _index: 1358, title: {}, body: { "changelog.html": {} } }],
      ["37.2.2", { _index: 1253, title: {}, body: { "changelog.html": {} } }],
      ["37.4.0", { _index: 1180, title: {}, body: { "changelog.html": {} } }],
      ["37.4.2", { _index: 1181, title: {}, body: { "changelog.html": {} } }],
      ["377f9c7", { _index: 1134, title: {}, body: { "changelog.html": {} } }],
      ["3786ada", { _index: 1346, title: {}, body: { "changelog.html": {} } }],
      ["37da0e0", { _index: 1351, title: {}, body: { "changelog.html": {} } }],
      ["3831c54", { _index: 1435, title: {}, body: { "changelog.html": {} } }],
      ["385fa75", { _index: 1399, title: {}, body: { "changelog.html": {} } }],
      ["39e0c8c", { _index: 1484, title: {}, body: { "changelog.html": {} } }],
      [
        "3px",
        {
          _index: 933,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "3rd",
        {
          _index: 313,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      ["4", { _index: 1618, title: {}, body: { "overview.html": {} } }],
      ["4.0.0", { _index: 1271, title: {}, body: { "changelog.html": {} } }],
      ["4.1.0", { _index: 1227, title: {}, body: { "changelog.html": {} } }],
      ["4.2.1", { _index: 1225, title: {}, body: { "changelog.html": {} } }],
      ["4.3.0", { _index: 1204, title: {}, body: { "changelog.html": {} } }],
      [
        "4.4.0",
        {
          _index: 1109,
          title: {},
          body: { "changelog.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      ["4.4.4", { _index: 1360, title: {}, body: { "changelog.html": {} } }],
      ["4.5.3", { _index: 1361, title: {}, body: { "changelog.html": {} } }],
      ["4.5.4", { _index: 1363, title: {}, body: { "changelog.html": {} } }],
      ["4/4", { _index: 1511, title: {}, body: { "coverage.html": {} } }],
      ["40/40", { _index: 1502, title: {}, body: { "coverage.html": {} } }],
      ["4127853", { _index: 1318, title: {}, body: { "changelog.html": {} } }],
      [
        "450px",
        {
          _index: 466,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      ["4527408", { _index: 1158, title: {}, body: { "changelog.html": {} } }],
      ["454344e", { _index: 1315, title: {}, body: { "changelog.html": {} } }],
      ["481aac9", { _index: 1359, title: {}, body: { "changelog.html": {} } }],
      ["4939961", { _index: 1148, title: {}, body: { "changelog.html": {} } }],
      ["4a1f6bb", { _index: 1232, title: {}, body: { "changelog.html": {} } }],
      ["4a99e57", { _index: 1147, title: {}, body: { "changelog.html": {} } }],
      ["4ab6415", { _index: 1293, title: {}, body: { "changelog.html": {} } }],
      ["4ae0cad", { _index: 1473, title: {}, body: { "changelog.html": {} } }],
      ["4deeb9f", { _index: 1266, title: {}, body: { "changelog.html": {} } }],
      ["4e6649a", { _index: 1443, title: {}, body: { "changelog.html": {} } }],
      ["4f59c74", { _index: 1247, title: {}, body: { "changelog.html": {} } }],
      ["4f7ebc4", { _index: 1201, title: {}, body: { "changelog.html": {} } }],
      ["5", { _index: 861, title: {}, body: { "classes/Settings.html": {} } }],
      ["5.1.3", { _index: 1530, title: {}, body: { "dependencies.html": {} } }],
      ["5.4.0", { _index: 1431, title: {}, body: { "changelog.html": {} } }],
      ["5.6.0", { _index: 1352, title: {}, body: { "changelog.html": {} } }],
      ["5.7.0", { _index: 1250, title: {}, body: { "changelog.html": {} } }],
      ["5.8.0", { _index: 1173, title: {}, body: { "changelog.html": {} } }],
      ["5.8.1", { _index: 1174, title: {}, body: { "changelog.html": {} } }],
      ["5/5", { _index: 1514, title: {}, body: { "coverage.html": {} } }],
      [
        "5000",
        {
          _index: 650,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["50e970d", { _index: 1373, title: {}, body: { "changelog.html": {} } }],
      ["514d426", { _index: 1199, title: {}, body: { "changelog.html": {} } }],
      ["5166f81", { _index: 1422, title: {}, body: { "changelog.html": {} } }],
      ["546b69f", { _index: 1458, title: {}, body: { "changelog.html": {} } }],
      ["58", { _index: 1261, title: {}, body: { "changelog.html": {} } }],
      ["593072e", { _index: 1126, title: {}, body: { "changelog.html": {} } }],
      ["5a34c1f", { _index: 1433, title: {}, body: { "changelog.html": {} } }],
      ["5b84f50", { _index: 1348, title: {}, body: { "changelog.html": {} } }],
      ["5bc5138", { _index: 1382, title: {}, body: { "changelog.html": {} } }],
      ["5bf0ef4", { _index: 1263, title: {}, body: { "changelog.html": {} } }],
      ["5c257d1", { _index: 1133, title: {}, body: { "changelog.html": {} } }],
      [
        "5px",
        {
          _index: 939,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "5rem",
        {
          _index: 186,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      ["6/6", { _index: 1513, title: {}, body: { "coverage.html": {} } }],
      [
        "6000",
        {
          _index: 715,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      ["627fb67", { _index: 1321, title: {}, body: { "changelog.html": {} } }],
      ["6683efb", { _index: 1453, title: {}, body: { "changelog.html": {} } }],
      ["66a13a6", { _index: 1128, title: {}, body: { "changelog.html": {} } }],
      ["67", { _index: 1209, title: {}, body: { "changelog.html": {} } }],
      ["672d0d2", { _index: 1116, title: {}, body: { "changelog.html": {} } }],
      ["68a9058", { _index: 1280, title: {}, body: { "changelog.html": {} } }],
      ["69b28f4", { _index: 1125, title: {}, body: { "changelog.html": {} } }],
      ["69c41c6", { _index: 1139, title: {}, body: { "changelog.html": {} } }],
      ["6b12ea7", { _index: 1220, title: {}, body: { "changelog.html": {} } }],
      ["6b3bb9e", { _index: 1224, title: {}, body: { "changelog.html": {} } }],
      ["6c6ace3", { _index: 1408, title: {}, body: { "changelog.html": {} } }],
      ["6eee7fe", { _index: 1468, title: {}, body: { "changelog.html": {} } }],
      ["6f8c55d", { _index: 1424, title: {}, body: { "changelog.html": {} } }],
      ["6faaa9a", { _index: 1152, title: {}, body: { "changelog.html": {} } }],
      ["7", { _index: 1619, title: {}, body: { "overview.html": {} } }],
      ["7.4.0", { _index: 1183, title: {}, body: { "changelog.html": {} } }],
      [
        "7.5.1",
        {
          _index: 1184,
          title: {},
          body: { "changelog.html": {}, "dependencies.html": {} },
        },
      ],
      ["7/7", { _index: 1510, title: {}, body: { "coverage.html": {} } }],
      ["70b11ad", { _index: 1130, title: {}, body: { "changelog.html": {} } }],
      ["720ef06", { _index: 1163, title: {}, body: { "changelog.html": {} } }],
      ["73c8640", { _index: 1417, title: {}, body: { "changelog.html": {} } }],
      [
        "75",
        {
          _index: 921,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      ["76", { _index: 1194, title: {}, body: { "changelog.html": {} } }],
      ["76c72c2", { _index: 1268, title: {}, body: { "changelog.html": {} } }],
      ["78c92e4", { _index: 1343, title: {}, body: { "changelog.html": {} } }],
      ["7921f46", { _index: 1206, title: {}, body: { "changelog.html": {} } }],
      ["7a552fa", { _index: 1129, title: {}, body: { "changelog.html": {} } }],
      ["7bdf421", { _index: 1329, title: {}, body: { "changelog.html": {} } }],
      ["7e4f58c", { _index: 1118, title: {}, body: { "changelog.html": {} } }],
      ["7e8b9eb", { _index: 1279, title: {}, body: { "changelog.html": {} } }],
      ["7f2bc30", { _index: 1380, title: {}, body: { "changelog.html": {} } }],
      ["8.2.0", { _index: 1440, title: {}, body: { "changelog.html": {} } }],
      ["8.4.1", { _index: 1282, title: {}, body: { "changelog.html": {} } }],
      ["8.5.0", { _index: 1283, title: {}, body: { "changelog.html": {} } }],
      ["8/10", { _index: 1509, title: {}, body: { "coverage.html": {} } }],
      ["8/8", { _index: 1506, title: {}, body: { "coverage.html": {} } }],
      ["80", { _index: 1508, title: {}, body: { "coverage.html": {} } }],
      ["8154536", { _index: 1235, title: {}, body: { "changelog.html": {} } }],
      ["82326ea", { _index: 1237, title: {}, body: { "changelog.html": {} } }],
      ["849914f", { _index: 1340, title: {}, body: { "changelog.html": {} } }],
      ["892b2d4", { _index: 1366, title: {}, body: { "changelog.html": {} } }],
      ["8b6e374", { _index: 1259, title: {}, body: { "changelog.html": {} } }],
      ["8df0ba8", { _index: 1153, title: {}, body: { "changelog.html": {} } }],
      [
        "8f8f8f2b",
        {
          _index: 936,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      ["8f9db5d", { _index: 1488, title: {}, body: { "changelog.html": {} } }],
      ["9/9", { _index: 1515, title: {}, body: { "coverage.html": {} } }],
      ["916db5e", { _index: 1119, title: {}, body: { "changelog.html": {} } }],
      ["9229338", { _index: 1451, title: {}, body: { "changelog.html": {} } }],
      ["92e0400", { _index: 1300, title: {}, body: { "changelog.html": {} } }],
      ["93efb40", { _index: 1121, title: {}, body: { "changelog.html": {} } }],
      ["94b1e9b", { _index: 1447, title: {}, body: { "changelog.html": {} } }],
      ["9526594", { _index: 1393, title: {}, body: { "changelog.html": {} } }],
      ["964c3ea", { _index: 1273, title: {}, body: { "changelog.html": {} } }],
      ["970747d", { _index: 1281, title: {}, body: { "changelog.html": {} } }],
      ["9900c22", { _index: 1141, title: {}, body: { "changelog.html": {} } }],
      ["997b2b7", { _index: 1260, title: {}, body: { "changelog.html": {} } }],
      ["9d2f1c5", { _index: 1326, title: {}, body: { "changelog.html": {} } }],
      ["9fc8934", { _index: 1308, title: {}, body: { "changelog.html": {} } }],
      ["9ffecce", { _index: 1185, title: {}, body: { "changelog.html": {} } }],
      [
        "_hitsound",
        {
          _index: 389,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "_hitsound.name",
        {
          _index: 514,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "_hitsound.path",
        {
          _index: 522,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "_hitsound.path.split",
        {
          _index: 519,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "_hud",
        {
          _index: 609,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "_hud.foldername",
        {
          _index: 690,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "_hud.path",
        {
          _index: 677,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "_hud.path.split",
        {
          _index: 717,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "_killsound",
        {
          _index: 395,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "_killsound.name",
        {
          _index: 567,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "_killsound.path",
        {
          _index: 564,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "_name",
        {
          _index: 407,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "a.foldername",
        {
          _index: 722,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "a.name",
        {
          _index: 574,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      ["a06c96a", { _index: 1255, title: {}, body: { "changelog.html": {} } }],
      ["a150574", { _index: 1156, title: {}, body: { "changelog.html": {} } }],
      ["a32e716", { _index: 1439, title: {}, body: { "changelog.html": {} } }],
      ["a39898a", { _index: 1464, title: {}, body: { "changelog.html": {} } }],
      ["a46905a", { _index: 1277, title: {}, body: { "changelog.html": {} } }],
      ["a4e8323", { _index: 1428, title: {}, body: { "changelog.html": {} } }],
      ["a4f862a", { _index: 1304, title: {}, body: { "changelog.html": {} } }],
      ["a50ceb7", { _index: 1170, title: {}, body: { "changelog.html": {} } }],
      ["a6528ed", { _index: 1240, title: {}, body: { "changelog.html": {} } }],
      ["a6dcbcf", { _index: 1323, title: {}, body: { "changelog.html": {} } }],
      ["a97e1e4", { _index: 1192, title: {}, body: { "changelog.html": {} } }],
      ["above", { _index: 1581, title: {}, body: { "license.html": {} } }],
      [
        "abstractcontrol",
        {
          _index: 1075,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      ["accent", { _index: 1230, title: {}, body: { "changelog.html": {} } }],
      [
        "accessors",
        {
          _index: 223,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "action",
        {
          _index: 974,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "license.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["active", { _index: 1391, title: {}, body: { "changelog.html": {} } }],
      [
        "actual_component",
        {
          _index: 209,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      ["adc11c7", { _index: 1319, title: {}, body: { "changelog.html": {} } }],
      [
        "add",
        {
          _index: 577,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "add(_hud",
        {
          _index: 606,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "added",
        {
          _index: 508,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "additional",
        {
          _index: 997,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "adds",
        {
          _index: 608,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      ["ae6e250", { _index: 1177, title: {}, body: { "changelog.html": {} } }],
      ["aea1346", { _index: 1302, title: {}, body: { "changelog.html": {} } }],
      ["aed3b86", { _index: 1415, title: {}, body: { "changelog.html": {} } }],
      ["af8d402", { _index: 1377, title: {}, body: { "changelog.html": {} } }],
      [
        "affected",
        {
          _index: 155,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "classes/TfWeapons.html": {},
          },
        },
      ],
      ["again", { _index: 1401, title: {}, body: { "changelog.html": {} } }],
      [
        "air",
        {
          _index: 1728,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["allowed", { _index: 1289, title: {}, body: { "changelog.html": {} } }],
      ["alpha.0", { _index: 1413, title: {}, body: { "changelog.html": {} } }],
      [
        "already",
        {
          _index: 710,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "ambassador",
        {
          _index: 2018,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "amputator",
        {
          _index: 1948,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "analysis.yml",
        { _index: 1450, title: {}, body: { "changelog.html": {} } },
      ],
      ["and/or", { _index: 1572, title: {}, body: { "license.html": {} } }],
      ["angular", { _index: 1241, title: {}, body: { "changelog.html": {} } }],
      [
        "angular/animations",
        {
          _index: 1350,
          title: {},
          body: { "changelog.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "angular/cdk",
        { _index: 1525, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/cli",
        { _index: 1244, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "angular/common",
        {
          _index: 131,
          title: {},
          body: { "modules/CoreModule.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "angular/common/http",
        {
          _index: 37,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "angular/compiler",
        { _index: 1526, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/core",
        {
          _index: 39,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "modules/MaterialModule.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "angular/forms",
        {
          _index: 41,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "modules/MaterialModule.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "angular/language",
        {
          _index: 1248,
          title: {},
          body: { "changelog.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "angular/material",
        { _index: 1527, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/material/autocomplete",
        { _index: 755, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/badge",
        { _index: 757, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/button",
        { _index: 759, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/card",
        { _index: 761, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/core",
        {
          _index: 835,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "angular/material/dialog",
        {
          _index: 436,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "modules/MaterialModule.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "angular/material/expansion",
        { _index: 764, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/form",
        { _index: 766, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/icon",
        { _index: 769, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/input",
        { _index: 771, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/list",
        { _index: 773, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/progress",
        { _index: 775, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/select",
        {
          _index: 43,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/MaterialModule.html": {},
          },
        },
      ],
      [
        "angular/material/sidenav",
        { _index: 779, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/slide",
        { _index: 781, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/slider",
        { _index: 784, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/snack",
        {
          _index: 786,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "angular/material/tabs",
        { _index: 789, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/toolbar",
        { _index: 791, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/material/tooltip",
        { _index: 793, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "angular/platform",
        {
          _index: 45,
          title: {},
          body: { "modules/AppModule.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "angular/router",
        {
          _index: 113,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "components/SetupComponent.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "answer",
        {
          _index: 809,
          title: {},
          body: {
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "answer'},{'name",
        {
          _index: 201,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "answer.component",
        {
          _index: 79,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "answer.component.html",
        {
          _index: 817,
          title: {},
          body: { "components/QuestionAnswerComponent.html": {} },
        },
      ],
      [
        "answer.component.scss",
        {
          _index: 816,
          title: {},
          body: { "components/QuestionAnswerComponent.html": {} },
        },
      ],
      [
        "answer.component.ts",
        {
          _index: 815,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "answer.component.ts:21",
        {
          _index: 831,
          title: {},
          body: { "components/QuestionAnswerComponent.html": {} },
        },
      ],
      [
        "answer.component.ts:25",
        {
          _index: 825,
          title: {},
          body: { "components/QuestionAnswerComponent.html": {} },
        },
      ],
      [
        "answer.component.ts:36",
        {
          _index: 830,
          title: {},
          body: { "components/QuestionAnswerComponent.html": {} },
        },
      ],
      [
        "answer.component.ts:43",
        {
          _index: 826,
          title: {},
          body: { "components/QuestionAnswerComponent.html": {} },
        },
      ],
      [
        "answer.component.ts:51",
        {
          _index: 827,
          title: {},
          body: { "components/QuestionAnswerComponent.html": {} },
        },
      ],
      [
        "answer/question",
        {
          _index: 78,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "aot",
        {
          _index: 85,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ap",
        {
          _index: 2000,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["api", { _index: 1482, title: {}, body: { "changelog.html": {} } }],
      [
        "apoco",
        {
          _index: 1872,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "app",
        {
          _index: 58,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "app.component",
        {
          _index: 60,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "app.settings.volume",
        {
          _index: 576,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "app/package.json",
        {
          _index: 288,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "app_config",
        {
          _index: 885,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "app_config.version",
        {
          _index: 888,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "appcomponent",
        {
          _index: 8,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "appdata",
        {
          _index: 216,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "dependencies.html": {},
          },
        },
      ],
      ["apply", { _index: 1294, title: {}, body: { "changelog.html": {} } }],
      ["applyed", { _index: 1239, title: {}, body: { "changelog.html": {} } }],
      [
        "appmodule",
        {
          _index: 1,
          title: { "modules/AppModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "approutingmodule",
        {
          _index: 21,
          title: { "modules/AppRoutingModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "args",
        {
          _index: 322,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "args.canceled",
        {
          _index: 903,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "args.filepaths[0",
        {
          _index: 904,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      ["arising", { _index: 1608, title: {}, body: { "license.html": {} } }],
      [
        "array",
        {
          _index: 986,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "array.from(target.files",
        {
          _index: 484,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "arrayoffiles",
        {
          _index: 336,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      [
        "arrayoffiles.push(this.electron.path.join(dirpath",
        {
          _index: 347,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      [
        "assassin",
        {
          _index: 1722,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "assets/i18n",
        {
          _index: 95,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["associated", { _index: 1560, title: {}, body: { "license.html": {} } }],
      [
        "assume",
        {
          _index: 641,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "async",
        {
          _index: 372,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "atomic",
        {
          _index: 1646,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "atomizer",
        {
          _index: 1671,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "attack",
        {
          _index: 1772,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "audio",
        {
          _index: 543,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "audio(_hitsound.path",
        {
          _index: 544,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "audio(file.path",
        {
          _index: 1061,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "audio.addeventlistener('ended",
        {
          _index: 548,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "audio.load",
        {
          _index: 546,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "audio.play",
        {
          _index: 547,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "audio.volume",
        {
          _index: 545,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      ["authors", { _index: 1599, title: {}, body: { "license.html": {} } }],
      [
        "available",
        {
          _index: 884,
          title: {},
          body: { "components/SettingsComponent.html": {}, "modules.html": {} },
        },
      ],
      [
        "await",
        {
          _index: 491,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "aware",
        {
          _index: 1969,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "awper",
        {
          _index: 1988,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "axe",
        {
          _index: 1800,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "axtinguisher",
        {
          _index: 1801,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["b13a1b4", { _index: 1228, title: {}, body: { "changelog.html": {} } }],
      ["b226221", { _index: 1491, title: {}, body: { "changelog.html": {} } }],
      ["b70b619", { _index: 1275, title: {}, body: { "changelog.html": {} } }],
      ["b7b8bc3", { _index: 1257, title: {}, body: { "changelog.html": {} } }],
      ["b8a20d9", { _index: 1477, title: {}, body: { "changelog.html": {} } }],
      ["b921d4e", { _index: 1216, title: {}, body: { "changelog.html": {} } }],
      [
        "baby",
        {
          _index: 1640,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "back",
        {
          _index: 1703,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "backburner",
        {
          _index: 1781,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "background",
        {
          _index: 856,
          title: {},
          body: {
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "backup",
        {
          _index: 1735,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "banana",
        {
          _index: 1898,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "banner",
        {
          _index: 1733,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "banners",
        {
          _index: 1731,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "bar",
        {
          _index: 787,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "changelog.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "bargain",
        {
          _index: 1984,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "basher",
        {
          _index: 1666,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "bat",
        {
          _index: 1662,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "batsaber",
        {
          _index: 1675,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "battalion's",
        {
          _index: 1734,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "bazaar",
        {
          _index: 1983,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "bazooka",
        {
          _index: 1764,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["bddacfc", { _index: 1249, title: {}, body: { "changelog.html": {} } }],
      ["be24bf5", { _index: 1151, title: {}, body: { "changelog.html": {} } }],
      ["be250f6", { _index: 1296, title: {}, body: { "changelog.html": {} } }],
      [
        "beast",
        {
          _index: 1883,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "beauty",
        {
          _index: 1970,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "beggar's",
        {
          _index: 1763,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "behaviorsubject",
        { _index: 1157, title: {}, body: { "changelog.html": {} } },
      ],
      ["being", { _index: 1378, title: {}, body: { "changelog.html": {} } }],
      [
        "big",
        {
          _index: 910,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "bison",
        {
          _index: 1755,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "bite",
        {
          _index: 1875,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "black",
        {
          _index: 1759,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "blade",
        {
          _index: 1674,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "blaster",
        {
          _index: 1642,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["block", { _index: 1189, title: {}, body: { "changelog.html": {} } }],
      [
        "blue",
        {
          _index: 1002,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "blutsauger",
        {
          _index: 1953,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "bomber",
        {
          _index: 1828,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "bonesaw",
        {
          _index: 1944,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "bonk",
        {
          _index: 1645,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "boolean",
        {
          _index: 246,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "components/SettingsComponent.html": {},
            "injectables/ValidatorService.html": {},
          },
        },
      ],
      [
        "bootstrap",
        {
          _index: 33,
          title: {},
          body: { "modules/AppModule.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "border",
        {
          _index: 937,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "boston",
        {
          _index: 1665,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "both",
        {
          _index: 287,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "bottle",
        {
          _index: 1833,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "bottom",
        {
          _index: 185,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "bows",
        {
          _index: 1957,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "box",
        {
          _index: 1305,
          title: {},
          body: { "changelog.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "boxing",
        {
          _index: 1865,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "brass",
        {
          _index: 1882,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "bread",
        {
          _index: 1874,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["browse", { _index: 1615, title: {}, body: { "modules.html": {} } }],
      [
        "browser",
        {
          _index: 46,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "dependencies.html": {},
            "modules.html": {},
          },
        },
      ],
      [
        "browser/animations",
        { _index: 48, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "browseranimationsmodule",
        { _index: 47, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "browsermodule",
        { _index: 44, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "buff",
        {
          _index: 1732,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "buffalo",
        {
          _index: 1893,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["bug", { _index: 1295, title: {}, body: { "changelog.html": {} } }],
      [
        "bug_report.md",
        { _index: 1267, title: {}, body: { "changelog.html": {} } },
      ],
      ["bugs", { _index: 1317, title: {}, body: { "changelog.html": {} } }],
      [
        "build",
        {
          _index: 303,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      ["builder", { _index: 1436, title: {}, body: { "changelog.html": {} } }],
      ["bump", { _index: 1166, title: {}, body: { "changelog.html": {} } }],
      ["bumped", { _index: 1113, title: {}, body: { "changelog.html": {} } }],
      [
        "bundle",
        {
          _index: 307,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "bushwacka",
        {
          _index: 1976,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "business",
        {
          _index: 1902,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "button",
        {
          _index: 181,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "changelog.html": {},
            "index.html": {},
          },
        },
      ],
      ["buttons", { _index: 1231, title: {}, body: { "changelog.html": {} } }],
      [
        "c.a.p.p.e.r",
        {
          _index: 1715,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["c10fa75", { _index: 1251, title: {}, body: { "changelog.html": {} } }],
      ["c3daabd", { _index: 1489, title: {}, body: { "changelog.html": {} } }],
      ["c402ee6", { _index: 1470, title: {}, body: { "changelog.html": {} } }],
      ["c5850e4", { _index: 1313, title: {}, body: { "changelog.html": {} } }],
      ["c5d4a18", { _index: 1233, title: {}, body: { "changelog.html": {} } }],
      ["c5fa067", { _index: 1114, title: {}, body: { "changelog.html": {} } }],
      ["c6b928d", { _index: 1328, title: {}, body: { "changelog.html": {} } }],
      ["c715676", { _index: 1423, title: {}, body: { "changelog.html": {} } }],
      ["c907f03", { _index: 1406, title: {}, body: { "changelog.html": {} } }],
      [
        "caber",
        {
          _index: 1859,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "can't",
        {
          _index: 802,
          title: {},
          body: {
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "can\\'t",
        {
          _index: 807,
          title: {},
          body: {
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "cancel",
        {
          _index: 848,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "canceled",
        {
          _index: 901,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "candy",
        {
          _index: 1663,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "cane",
        {
          _index: 1664,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "cannon",
        {
          _index: 1831,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "cant",
        {
          _index: 498,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "classes/UploadChangeName.html": {},
            "injectables/ValidatorService.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "cant.filter(a",
        {
          _index: 1077,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "carbine",
        {
          _index: 1965,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "case",
        {
          _index: 452,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "cases",
        {
          _index: 319,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "catch(err",
        {
          _index: 509,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      ["cb12d0a", { _index: 1310, title: {}, body: { "changelog.html": {} } }],
      ["cc8bf7b", { _index: 1370, title: {}, body: { "changelog.html": {} } }],
      ["cd6e5e9", { _index: 1466, title: {}, body: { "changelog.html": {} } }],
      ["cd802d3", { _index: 1211, title: {}, body: { "changelog.html": {} } }],
      ["cd873d5", { _index: 1252, title: {}, body: { "changelog.html": {} } }],
      ["cfbcec2", { _index: 1203, title: {}, body: { "changelog.html": {} } }],
      [
        "change",
        {
          _index: 69,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "changed",
        {
          _index: 454,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "changelibrary",
        {
          _index: 869,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "changelog",
        {
          _index: 1108,
          title: { "changelog.html": {} },
          body: { "changelog.html": {} },
        },
      ],
      [
        "changelog.md",
        { _index: 1115, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "changes",
        {
          _index: 875,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      ["charge", { _index: 1556, title: {}, body: { "license.html": {} } }],
      [
        "check",
        {
          _index: 460,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "checkname",
        {
          _index: 1066,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "checkname(cant",
        {
          _index: 1069,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "checks",
        {
          _index: 1071,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "child",
        {
          _index: 229,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "child_process",
        {
          _index: 248,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "childprocess",
        {
          _index: 217,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "children",
        {
          _index: 117,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      ["choose", { _index: 1544, title: {}, body: { "index.html": {} } }],
      [
        "chose",
        {
          _index: 895,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "cicle",
        {
          _index: 2013,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "circuit",
        {
          _index: 1922,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "claidheamh",
        {
          _index: 1851,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["claim", { _index: 1602, title: {}, body: { "license.html": {} } }],
      [
        "class",
        {
          _index: 106,
          title: {
            "classes/CrosshairSelected.html": {},
            "classes/Hitsound.html": {},
            "classes/Hud.html": {},
            "classes/HudList.html": {},
            "classes/QuestionAnswer.html": {},
            "classes/Settings.html": {},
            "classes/SnackBarMessage.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "classes/WeaponData.html": {},
            "classes/YesNo.html": {},
          },
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "modules/MaterialModule.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "classes",
        {
          _index: 133,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "classes/Hitsound.html": {},
            "classes/Hud.html": {},
            "classes/HudList.html": {},
            "classes/QuestionAnswer.html": {},
            "classes/Settings.html": {},
            "classes/SnackBarMessage.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "classes/WeaponData.html": {},
            "classes/YesNo.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "classic",
        {
          _index: 1962,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "classoverride",
        {
          _index: 999,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      ["clean", { _index: 1286, title: {}, body: { "changelog.html": {} } }],
      [
        "cleaner's",
        {
          _index: 1964,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["cleanup", { _index: 1265, title: {}, body: { "changelog.html": {} } }],
      ["cli", { _index: 1213, title: {}, body: { "changelog.html": {} } }],
      [
        "click",
        {
          _index: 970,
          title: {},
          body: { "components/SetupComponent.html": {}, "index.html": {} },
        },
      ],
      ["clicking", { _index: 1543, title: {}, body: { "index.html": {} } }],
      ["closed", { _index: 1369, title: {}, body: { "changelog.html": {} } }],
      ["closes", { _index: 1193, title: {}, body: { "changelog.html": {} } }],
      [
        "cluster_appmodule",
        {
          _index: 4,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_appmodule_bootstrap",
        {
          _index: 5,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_appmodule_declarations",
        {
          _index: 7,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_appmodule_imports",
        {
          _index: 6,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      ["code", { _index: 1325, title: {}, body: { "changelog.html": {} } }],
      ["codeql", { _index: 1449, title: {}, body: { "changelog.html": {} } }],
      [
        "cola",
        {
          _index: 1650,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["collection", { _index: 1540, title: {}, body: { "index.html": {} } }],
      [
        "color",
        {
          _index: 1001,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "combat",
        {
          _index: 1656,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["commit", { _index: 1478, title: {}, body: { "changelog.html": {} } }],
      [
        "common",
        {
          _index: 318,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "commonmodule",
        { _index: 130, title: {}, body: { "modules/CoreModule.html": {} } },
      ],
      [
        "comp",
        {
          _index: 2024,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["compiler", { _index: 1485, title: {}, body: { "changelog.html": {} } }],
      [
        "component",
        {
          _index: 116,
          title: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
          body: {
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "component_template",
        {
          _index: 192,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "components",
        {
          _index: 156,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "modules/MaterialModule.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "overview.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "compound",
        {
          _index: 1960,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "concheror",
        {
          _index: 1736,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "conditional",
        {
          _index: 262,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      ["conditions", { _index: 1580, title: {}, body: { "license.html": {} } }],
      [
        "config",
        {
          _index: 975,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "config.duration",
        {
          _index: 1003,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "config.horizontalposition",
        {
          _index: 1005,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "config.panelclass",
        {
          _index: 1007,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "config.verticalposition",
        {
          _index: 1004,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "configuration",
        {
          _index: 998,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      ["connection", { _index: 1609, title: {}, body: { "license.html": {} } }],
      [
        "conniver's",
        {
          _index: 2006,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "conscientious",
        {
          _index: 1679,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "const",
        {
          _index: 90,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "modules/MaterialModule.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
          },
        },
      ],
      [
        "constructor",
        {
          _index: 169,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "constructor(app",
        {
          _index: 170,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "constructor(data",
        {
          _index: 1101,
          title: {},
          body: { "components/YesNoComponent.html": {} },
        },
      ],
      [
        "constructor(dialogref",
        {
          _index: 821,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "constructor(electron",
        {
          _index: 333,
          title: {},
          body: {
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "constructor(snack",
        {
          _index: 1025,
          title: {},
          body: { "injectables/SnackService.html": {} },
        },
      ],
      [
        "context",
        {
          _index: 1521,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      ["contract", { _index: 1605, title: {}, body: { "license.html": {} } }],
      [
        "control",
        {
          _index: 434,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "injectables/ValidatorService.html": {},
          },
        },
      ],
      [
        "control.value).length",
        {
          _index: 1078,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "conventional",
        { _index: 1212, title: {}, body: { "changelog.html": {} } },
      ],
      ["copies", { _index: 1574, title: {}, body: { "license.html": {} } }],
      [
        "copy",
        {
          _index: 555,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/Settings.html": {},
            "changelog.html": {},
            "license.html": {},
          },
        },
      ],
      ["copyright", { _index: 1550, title: {}, body: { "license.html": {} } }],
      [
        "core/core.module",
        { _index: 61, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "core/services",
        {
          _index: 340,
          title: {},
          body: {
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "coremodule",
        {
          _index: 22,
          title: { "modules/CoreModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/CoreModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      ["cosmetic", { _index: 1309, title: {}, body: { "changelog.html": {} } }],
      [
        "counter",
        {
          _index: 1932,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "coverage",
        {
          _index: 1492,
          title: { "coverage.html": {} },
          body: { "coverage.html": {} },
        },
      ],
      [
        "cow",
        {
          _index: 1738,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["create", { _index: 1448, title: {}, body: { "changelog.html": {} } }],
      [
        "creates",
        {
          _index: 172,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "creator",
        { _index: 733, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "crit",
        {
          _index: 1649,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "crossahirselected",
        { _index: 1120, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "crossbow",
        {
          _index: 1936,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "crosshair",
        {
          _index: 136,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "classes/WeaponData.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "crosshairbackground",
        { _index: 851, title: {}, body: { "classes/Settings.html": {} } },
      ],
      [
        "crosshairs",
        {
          _index: 120,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
            "classes/Settings.html": {},
            "changelog.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "crosshairs'},{'name",
        {
          _index: 194,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "crosshairscomponent",
        {
          _index: 10,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "crosshairselected",
        {
          _index: 132,
          title: { "classes/CrosshairSelected.html": {} },
          body: { "classes/CrosshairSelected.html": {}, "coverage.html": {} },
        },
      ],
      [
        "crossing",
        {
          _index: 1692,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "crusader's",
        {
          _index: 1935,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "css",
        {
          _index: 1000,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "current",
        {
          _index: 628,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "currenthuds",
        {
          _index: 598,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "curtain",
        {
          _index: 1881,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "custom",
        {
          _index: 801,
          title: {},
          body: {
            "components/MultipleWarningComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "customfiles",
        {
          _index: 658,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "customizations",
        {
          _index: 926,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "custompath",
        { _index: 852, title: {}, body: { "classes/Settings.html": {} } },
      ],
      [
        "d",
        {
          _index: 688,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "d.question",
        {
          _index: 689,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "d.subquestion",
        {
          _index: 691,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      ["d041771", { _index: 1345, title: {}, body: { "changelog.html": {} } }],
      ["d06fca4", { _index: 1122, title: {}, body: { "changelog.html": {} } }],
      ["d09a9ad", { _index: 1407, title: {}, body: { "changelog.html": {} } }],
      ["d28d1f2", { _index: 1364, title: {}, body: { "changelog.html": {} } }],
      ["d452bf9", { _index: 1441, title: {}, body: { "changelog.html": {} } }],
      ["d476468", { _index: 1353, title: {}, body: { "changelog.html": {} } }],
      ["d5d3296", { _index: 1200, title: {}, body: { "changelog.html": {} } }],
      ["d7fd3e9", { _index: 1416, title: {}, body: { "changelog.html": {} } }],
      ["d833b4d", { _index: 1486, title: {}, body: { "changelog.html": {} } }],
      ["d860fb0", { _index: 1387, title: {}, body: { "changelog.html": {} } }],
      ["da2db06", { _index: 1396, title: {}, body: { "changelog.html": {} } }],
      ["dab433c", { _index: 1284, title: {}, body: { "changelog.html": {} } }],
      [
        "dalokohs",
        {
          _index: 1892,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["damages", { _index: 1603, title: {}, body: { "license.html": {} } }],
      [
        "dashboard",
        {
          _index: 115,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
          },
        },
      ],
      [
        "dashboard'},{'name",
        {
          _index: 195,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "dashboard.component.html",
        {
          _index: 167,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "dashboard.component.scss",
        {
          _index: 165,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "dashboard/crosshairs/crosshairs.component",
        {
          _index: 62,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "dashboard/dashboard.component",
        {
          _index: 63,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "dashboard/hitsound/hitsound.component",
        {
          _index: 64,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "dashboard/hitsound/multiple",
        { _index: 65, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "dashboard/hitsound/upload",
        { _index: 68, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "dashboard/hud/hud.component",
        {
          _index: 72,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "dashboard/settings/settings.component",
        {
          _index: 73,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "dashboard/weapons",
        {
          _index: 74,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "dashboardcomponent",
        {
          _index: 11,
          title: { "components/DashboardComponent.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "data",
        {
          _index: 227,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "classes/WeaponData.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "data.file.name",
        {
          _index: 1064,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "data.question",
        {
          _index: 845,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "data.subquestion",
        {
          _index: 1105,
          title: {},
          body: { "components/YesNoComponent.html": {} },
        },
      ],
      [
        "data.title",
        {
          _index: 1063,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "data[1",
        {
          _index: 666,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "data[5",
        {
          _index: 667,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      ["deal", { _index: 1561, title: {}, body: { "license.html": {} } }],
      ["dealings", { _index: 1610, title: {}, body: { "license.html": {} } }],
      [
        "declarations",
        {
          _index: 31,
          title: {},
          body: { "modules/AppModule.html": {}, "modules/CoreModule.html": {} },
        },
      ],
      [
        "decorators",
        {
          _index: 425,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "default",
        {
          _index: 146,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "changelog.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "defaultpath",
        {
          _index: 559,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "defaultpath}\\\\hitsound.wav",
        {
          _index: 562,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "defaultpath}\\\\killsound.wav",
        {
          _index: 568,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "defined",
        {
          _index: 148,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "degree",
        {
          _index: 1812,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "delete",
        {
          _index: 535,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
          },
        },
      ],
      [
        "demoman",
        {
          _index: 1821,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "dependabot.yml",
        { _index: 1452, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "dependencies",
        {
          _index: 3,
          title: { "dependencies.html": {} },
          body: {
            "modules/AppModule.html": {},
            "injectables/ElectronService.html": {},
            "dependencies.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "dependency",
        {
          _index: 284,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "deps",
        {
          _index: 100,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "injectables/ElectronService.html": {},
          },
        },
      ],
      [
        "description",
        {
          _index: 135,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "dest",
        {
          _index: 487,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "destroy",
        {
          _index: 878,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "determines",
        {
          _index: 989,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "detonator",
        {
          _index: 1790,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "dev",
        {
          _index: 1633,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "devkit/build",
        { _index: 1347, title: {}, body: { "changelog.html": {} } },
      ],
      ["df06c22", { _index: 1138, title: {}, body: { "changelog.html": {} } }],
      ["df4a695", { _index: 1140, title: {}, body: { "changelog.html": {} } }],
      [
        "dialog",
        {
          _index: 218,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "dialogref",
        {
          _index: 493,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "dialogref.afterclosed().subscribe(r",
        {
          _index: 517,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "dialogref.afterclosed().subscribe(result",
        {
          _index: 532,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      ["dialogs", { _index: 1367, title: {}, body: { "changelog.html": {} } }],
      [
        "dialogs/question",
        {
          _index: 77,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "dialogs/yes",
        {
          _index: 80,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "diamondback",
        {
          _index: 2021,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "direct",
        {
          _index: 1741,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "directive",
        {
          _index: 190,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "directives",
        {
          _index: 208,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "dirpath",
        {
          _index: 339,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      ["disable", { _index: 1256, title: {}, body: { "changelog.html": {} } }],
      [
        "disableoptioncentering",
        { _index: 103, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "disabling",
        { _index: 1454, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "disciplinary",
        {
          _index: 1752,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "discord",
        { _index: 734, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "discouraged",
        { _index: 1457, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "discussion",
        { _index: 735, title: {}, body: { "classes/HudList.html": {} } },
      ],
      ["distribute", { _index: 1570, title: {}, body: { "license.html": {} } }],
      ["doc", { _index: 1117, title: {}, body: { "changelog.html": {} } }],
      ["docs", { _index: 1155, title: {}, body: { "changelog.html": {} } }],
      [
        "documentation",
        {
          _index: 1493,
          title: {},
          body: { "coverage.html": {}, "license.html": {} },
        },
      ],
      [
        "dom",
        {
          _index: 159,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      ["don't", { _index: 1474, title: {}, body: { "changelog.html": {} } }],
      ["dont", { _index: 1459, title: {}, body: { "changelog.html": {} } }],
      [
        "download",
        {
          _index: 736,
          title: {},
          body: {
            "classes/HudList.html": {},
            "components/SettingsComponent.html": {},
            "changelog.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "dragon's",
        {
          _index: 1775,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "dresser",
        {
          _index: 2012,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "drive_file_rename_outline",
        {
          _index: 586,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "dropbox",
        {
          _index: 301,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "duration",
        {
          _index: 996,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "during",
        {
          _index: 302,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "dynamic",
        { _index: 1528, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "e",
        {
          _index: 916,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "e.preventdefault",
        {
          _index: 917,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      ["e0cd855", { _index: 1127, title: {}, body: { "changelog.html": {} } }],
      ["e102271", { _index: 1254, title: {}, body: { "changelog.html": {} } }],
      ["e19c1df", { _index: 1335, title: {}, body: { "changelog.html": {} } }],
      ["e2ef56b", { _index: 1270, title: {}, body: { "changelog.html": {} } }],
      ["e5faa98", { _index: 1145, title: {}, body: { "changelog.html": {} } }],
      ["e7d64be", { _index: 1285, title: {}, body: { "changelog.html": {} } }],
      ["ea75574", { _index: 1290, title: {}, body: { "changelog.html": {} } }],
      [
        "earner",
        {
          _index: 2008,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["easily", { _index: 1538, title: {}, body: { "index.html": {} } }],
      ["easy", { _index: 1236, title: {}, body: { "changelog.html": {} } }],
      ["ed7dd92", { _index: 1344, title: {}, body: { "changelog.html": {} } }],
      [
        "edits",
        {
          _index: 924,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      ["ee2c500", { _index: 1154, title: {}, body: { "changelog.html": {} } }],
      ["efe76f3", { _index: 1137, title: {}, body: { "changelog.html": {} } }],
      [
        "effect",
        {
          _index: 1913,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "electron",
        {
          _index: 214,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "electron's",
        {
          _index: 295,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "electron.opendialogoptions",
        {
          _index: 899,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "electronservice",
        {
          _index: 211,
          title: { "injectables/ElectronService.html": {} },
          body: {
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "element",
        {
          _index: 189,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "elementref",
        {
          _index: 424,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      ["empty", { _index: 1188, title: {}, body: { "changelog.html": {} } }],
      ["enable", { _index: 1311, title: {}, body: { "changelog.html": {} } }],
      ["enabled", { _index: 1314, title: {}, body: { "changelog.html": {} } }],
      [
        "encoding",
        {
          _index: 662,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "end",
        {
          _index: 549,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "enforcer",
        {
          _index: 2020,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "engineer",
        {
          _index: 1903,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "engineer's",
        {
          _index: 1916,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "environment",
        {
          _index: 1632,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "environments/environment",
        {
          _index: 886,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "equalizer",
        {
          _index: 1745,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["errors", { _index: 1198, title: {}, body: { "changelog.html": {} } }],
      ["eslint", { _index: 1178, title: {}, body: { "changelog.html": {} } }],
      [
        "eslint/builder",
        { _index: 1411, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "eslint/eslint",
        { _index: 1171, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "eslint/parser",
        { _index: 1176, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "eslint/schematics",
        { _index: 1418, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "eslint/template",
        { _index: 1420, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "eternal",
        {
          _index: 2004,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "eureka",
        {
          _index: 1912,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "event",
        {
          _index: 415,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "changelog.html": {},
            "license.html": {},
          },
        },
      ],
      [
        "event.preventdefault",
        {
          _index: 1060,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "event.target",
        {
          _index: 482,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "eviction",
        {
          _index: 1871,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "ex",
        {
          _index: 300,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "exclude",
        {
          _index: 381,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "exist",
        {
          _index: 489,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "exists",
        {
          _index: 847,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "export",
        {
          _index: 105,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "modules/MaterialModule.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "exported",
        {
          _index: 87,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "exports",
        {
          _index: 128,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "modules/MaterialModule.html": {},
          },
        },
      ],
      ["express", { _index: 1590, title: {}, body: { "license.html": {} } }],
      [
        "extra",
        {
          _index: 258,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "eyelander",
        {
          _index: 1844,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["f1e189c", { _index: 1182, title: {}, body: { "changelog.html": {} } }],
      ["f207f89", { _index: 1357, title: {}, body: { "changelog.html": {} } }],
      ["f874c1c", { _index: 1394, title: {}, body: { "changelog.html": {} } }],
      ["f9b4499", { _index: 1445, title: {}, body: { "changelog.html": {} } }],
      [
        "face's",
        {
          _index: 1641,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "factories",
        {
          _index: 89,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "false",
        {
          _index: 882,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "family",
        {
          _index: 1901,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "fan",
        {
          _index: 1669,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["favicon", { _index: 1490, title: {}, body: { "changelog.html": {} } }],
      ["fb57b4e", { _index: 1217, title: {}, body: { "changelog.html": {} } }],
      ["fd35609", { _index: 1150, title: {}, body: { "changelog.html": {} } }],
      ["fe4c95c", { _index: 1331, title: {}, body: { "changelog.html": {} } }],
      ["fee0dc2", { _index: 1131, title: {}, body: { "changelog.html": {} } }],
      ["few", { _index: 1196, title: {}, body: { "changelog.html": {} } }],
      ["ff53bdf", { _index: 1161, title: {}, body: { "changelog.html": {} } }],
      [
        "field",
        { _index: 767, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "file",
        {
          _index: 29,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "modules/MaterialModule.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "file).isdirectory",
        {
          _index: 345,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      [
        "file.split",
        {
          _index: 474,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "filehelpservice",
        {
          _index: 327,
          title: { "injectables/FileHelpService.html": {} },
          body: {
            "injectables/FileHelpService.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "filepaths",
        {
          _index: 902,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "files",
        {
          _index: 338,
          title: {},
          body: {
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
            "changelog.html": {},
            "index.html": {},
            "license.html": {},
          },
        },
      ],
      [
        "files.filter(i",
        {
          _index: 693,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "files.foreach(file",
        {
          _index: 343,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      [
        "files.length",
        {
          _index: 958,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "files[0].path",
        {
          _index: 959,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "filter",
        {
          _index: 385,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "filtered",
        {
          _index: 422,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "filteredoptions",
        {
          _index: 356,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "filtervalue",
        {
          _index: 569,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "final",
        {
          _index: 306,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "find",
        {
          _index: 711,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "fire",
        {
          _index: 1799,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "first",
        {
          _index: 640,
          title: {},
          body: { "components/HudComponent.html": {}, "changelog.html": {} },
        },
      ],
      [
        "firstvaluefrom",
        {
          _index: 437,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "firstvaluefrom(dialogref.afterclosed",
        {
          _index: 502,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "fishcake",
        {
          _index: 1895,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "fists",
        {
          _index: 1862,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["fitness", { _index: 1595, title: {}, body: { "license.html": {} } }],
      [
        "fix",
        {
          _index: 1186,
          title: {},
          body: { "changelog.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      ["fixed", { _index: 1195, title: {}, body: { "changelog.html": {} } }],
      [
        "flag",
        {
          _index: 664,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "flame",
        {
          _index: 1779,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "flamethrowers",
        {
          _index: 1778,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "flare",
        {
          _index: 1787,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "flying",
        {
          _index: 1724,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "folder",
        {
          _index: 290,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "foldername",
        {
          _index: 589,
          title: {},
          body: { "classes/Hud.html": {}, "components/HudComponent.html": {} },
        },
      ],
      [
        "folderupload",
        {
          _index: 357,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      ["following", { _index: 1579, title: {}, body: { "license.html": {} } }],
      [
        "font",
        {
          _index: 929,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "food",
        {
          _index: 1890,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "force",
        {
          _index: 1701,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "form",
        {
          _index: 956,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "formcontrol",
        {
          _index: 432,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "formsmodule",
        {
          _index: 40,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "fortified",
        {
          _index: 1959,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "fortress",
        {
          _index: 953,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "found",
        {
          _index: 496,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "fragment",
        {
          _index: 1807,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "frame",
        {
          _index: 240,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      ["free", { _index: 1555, title: {}, body: { "license.html": {} } }],
      [
        "freedom",
        {
          _index: 1681,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "frontier",
        {
          _index: 1926,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "frying",
        {
          _index: 1676,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "fs",
        {
          _index: 219,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "dependencies.html": {},
          },
        },
      ],
      ["full", { _index: 1332, title: {}, body: { "changelog.html": {} } }],
      ["fully", { _index: 1460, title: {}, body: { "changelog.html": {} } }],
      ["func", { _index: 1262, title: {}, body: { "changelog.html": {} } }],
      [
        "function",
        {
          _index: 88,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["furnished", { _index: 1577, title: {}, body: { "license.html": {} } }],
      [
        "fury",
        {
          _index: 1776,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "g",
        {
          _index: 1081,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      ["game", { _index: 1397, title: {}, body: { "changelog.html": {} } }],
      [
        "gardener",
        {
          _index: 1751,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "gas",
        {
          _index: 1818,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["generate", { _index: 1258, title: {}, body: { "changelog.html": {} } }],
      [
        "get_app",
        {
          _index: 587,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "getallfiles",
        {
          _index: 332,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      [
        "getallfiles(dirpath",
        {
          _index: 335,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      [
        "getappdatapath",
        {
          _index: 247,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "getfolder",
        {
          _index: 944,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "getfolder(event",
        {
          _index: 947,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "getiselectron",
        {
          _index: 241,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "getlog",
        {
          _index: 870,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "getnames",
        {
          _index: 362,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "getnames(exclude",
        {
          _index: 379,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "gets",
        {
          _index: 243,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "getting",
        {
          _index: 1106,
          title: { "changelog.html": {}, "index.html": {}, "license.html": {} },
          body: {},
        },
      ],
      [
        "giger",
        {
          _index: 1931,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "give",
        {
          _index: 497,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "gloves",
        {
          _index: 1864,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "gold",
        {
          _index: 1689,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "golden",
        {
          _index: 1910,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["granted", { _index: 1554, title: {}, body: { "license.html": {} } }],
      ["graph", { _index: 1616, title: {}, body: { "modules.html": {} } }],
      [
        "grenade",
        {
          _index: 1823,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["gris", { _index: 1613, title: {}, body: { "license.html": {} } }],
      [
        "group",
        { _index: 737, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "guard",
        {
          _index: 1693,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "guillotine",
        {
          _index: 1725,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "gun",
        {
          _index: 1789,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "guns",
        {
          _index: 1788,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "gunslinger",
        {
          _index: 1905,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "h",
        {
          _index: 476,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "half",
        {
          _index: 1748,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "ham",
        {
          _index: 1687,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "hand",
        {
          _index: 1795,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "handshake",
        {
          _index: 1835,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "headless",
        {
          _index: 1848,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "headtaker",
        {
          _index: 1850,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "heater",
        {
          _index: 1887,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "heatmaker",
        {
          _index: 1987,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "heavy",
        {
          _index: 1860,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "heavy's",
        {
          _index: 1900,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "hell",
        {
          _index: 1684,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "help",
        {
          _index: 330,
          title: {},
          body: { "injectables/FileHelpService.html": {}, "index.html": {} },
        },
      ],
      [
        "help.service.ts",
        {
          _index: 329,
          title: {},
          body: { "injectables/FileHelpService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "help.service.ts:10",
        {
          _index: 334,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      [
        "help.service.ts:28",
        {
          _index: 337,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      [
        "here",
        {
          _index: 294,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "components/HudComponent.html": {},
            "index.html": {},
          },
        },
      ],
      ["hereby", { _index: 1553, title: {}, body: { "license.html": {} } }],
      [
        "hit",
        {
          _index: 1742,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["hit/kill", { _index: 1539, title: {}, body: { "index.html": {} } }],
      [
        "hitman's",
        {
          _index: 1986,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "hitsound",
        {
          _index: 119,
          title: { "classes/Hitsound.html": {} },
          body: {
            "modules/AppRoutingModule.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "hitsound'},{'name",
        {
          _index: 196,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "hitsound.component.html",
        {
          _index: 355,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "hitsound.component.scss",
        {
          _index: 354,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "hitsoundcomponent",
        {
          _index: 12,
          title: { "components/HitsoundComponent.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "hitsoundfilter",
        {
          _index: 363,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "hitsoundfilter(value",
        {
          _index: 383,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "hitsounds",
        {
          _index: 358,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/Settings.html": {},
            "changelog.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "hitsound{{app.hitsounds.length",
        {
          _index: 578,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      ["holders", { _index: 1600, title: {}, body: { "license.html": {} } }],
      [
        "holiday",
        {
          _index: 1873,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "holy",
        {
          _index: 1652,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "homewrecker",
        {
          _index: 1802,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "horseless",
        {
          _index: 1847,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "horsemann's",
        {
          _index: 1849,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "hospitality",
        {
          _index: 1909,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "hot",
        {
          _index: 1794,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "hover",
        {
          _index: 935,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "html",
        {
          _index: 188,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "htmlinputelement",
        {
          _index: 483,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "http",
        {
          _index: 92,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "injectables/ElectronService.html": {},
            "components/SettingsComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "httpclient",
        {
          _index: 35,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/SettingsComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "httpclientmodule",
        { _index: 36, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "httploaderfactory",
        {
          _index: 91,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "https",
        {
          _index: 220,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "https://www.electronjs.org/docs/latest/api/ipc",
        {
          _index: 320,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "hud",
        {
          _index: 118,
          title: { "classes/Hud.html": {} },
          body: {
            "modules/AppRoutingModule.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "components/SettingsComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "hud'},{'name",
        {
          _index: 197,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "hud.component.html",
        {
          _index: 597,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hud.component.scss",
        {
          _index: 596,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hud.foldername",
        {
          _index: 725,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hud.name",
        {
          _index: 726,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hud.path.replace('\\\\info.vdf",
        {
          _index: 697,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hud.version",
        {
          _index: 727,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hudcomponent",
        {
          _index: 13,
          title: { "components/HudComponent.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "hudfilter",
        {
          _index: 602,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hudfilter(value",
        {
          _index: 611,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hudlist",
        {
          _index: 730,
          title: { "classes/HudList.html": {} },
          body: {
            "classes/HudList.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "huds",
        {
          _index: 179,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HudComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "changelog.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "hudsfound",
        {
          _index: 692,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hudsfound.foreach(hud",
        {
          _index: 696,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hudsfound.length",
        {
          _index: 695,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hudsinstalled",
        {
          _index: 599,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "hud{{hudsinstalled",
        {
          _index: 724,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "huntsman",
        {
          _index: 1958,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "huo",
        {
          _index: 1885,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "i.name",
        {
          _index: 694,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "identifier",
        { _index: 1494, title: {}, body: { "coverage.html": {} } },
      ],
      ["image", { _index: 1320, title: {}, body: { "changelog.html": {} } }],
      ["imgur", { _index: 1483, title: {}, body: { "changelog.html": {} } }],
      [
        "implements",
        {
          _index: 352,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      ["implied", { _index: 1591, title: {}, body: { "license.html": {} } }],
      [
        "import",
        {
          _index: 34,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "modules/MaterialModule.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "imported",
        {
          _index: 251,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "imports",
        {
          _index: 32,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "injectables/ElectronService.html": {},
            "modules/MaterialModule.html": {},
          },
        },
      ],
      ["included", { _index: 1584, title: {}, body: { "license.html": {} } }],
      ["including", { _index: 1564, title: {}, body: { "license.html": {} } }],
      [
        "index",
        {
          _index: 138,
          title: { "index.html": {} },
          body: {
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "info",
        {
          _index: 27,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "modules/MaterialModule.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "info.question",
        {
          _index: 527,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "info.subquestion",
        {
          _index: 528,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "info.vdf",
        {
          _index: 659,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "init",
        {
          _index: 397,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "inject",
        {
          _index: 833,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "inject(mat_dialog_data",
        {
          _index: 829,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "injectable",
        {
          _index: 210,
          title: {
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "injectables/SnackService.html": {},
            "injectables/ValidatorService.html": {},
          },
          body: {
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "injectables/ValidatorService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "injectables",
        {
          _index: 212,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "injectables/SnackService.html": {},
            "injectables/ValidatorService.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "input",
        {
          _index: 818,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "inside",
        {
          _index: 713,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "install",
        {
          _index: 729,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "installed",
        {
          _index: 461,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "installhitsound",
        {
          _index: 364,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "installhitsound(_hitsound",
        {
          _index: 386,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "installkillsound",
        {
          _index: 365,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "installkillsound(_killsound",
        {
          _index: 391,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "installs",
        {
          _index: 388,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "instance",
        {
          _index: 173,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      ["introduction", { _index: 1536, title: {}, body: { "index.html": {} } }],
      [
        "ipc",
        {
          _index: 235,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "ipcrenderer",
        {
          _index: 221,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "ipcrenderer.invoke",
        {
          _index: 315,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "iron",
        {
          _index: 1827,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "iselectron",
        {
          _index: 224,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "isinstancevisible",
        {
          _index: 991,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      ["issue", { _index: 1190, title: {}, body: { "changelog.html": {} } }],
      ["issues", { _index: 1402, title: {}, body: { "changelog.html": {} } }],
      [
        "jag",
        {
          _index: 1911,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "jarate",
        {
          _index: 1967,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "javascript",
        {
          _index: 256,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      ["jsdoc", { _index: 1179, title: {}, body: { "changelog.html": {} } }],
      [
        "json",
        {
          _index: 96,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "changelog.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "json.tag_name.replace('v",
        {
          _index: 889,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "jumper",
        {
          _index: 1760,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "justice",
        {
          _index: 1927,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "key",
        {
          _index: 1076,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "kill",
        {
          _index: 393,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "kill/hitsounds",
        {
          _index: 180,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "killing",
        {
          _index: 1863,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "killsound",
        {
          _index: 492,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "killsounds",
        {
          _index: 1376,
          title: {},
          body: { "changelog.html": {}, "index.html": {} },
        },
      ],
      [
        "killsound{{app.killsounds.length",
        {
          _index: 582,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      ["kind", { _index: 1589, title: {}, body: { "license.html": {} } }],
      [
        "knife",
        {
          _index: 2003,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "kritzkrieg",
        {
          _index: 1940,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "kukri",
        {
          _index: 1973,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "kunai",
        {
          _index: 2007,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "l",
        {
          _index: 673,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "l'etranger",
        {
          _index: 2019,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "label",
        {
          _index: 995,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      ["later", { _index: 1276, title: {}, body: { "changelog.html": {} } }],
      ["latest", { _index: 1547, title: {}, body: { "index.html": {} } }],
      [
        "launcher",
        {
          _index: 1758,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "launchers",
        {
          _index: 1824,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "left",
        {
          _index: 1006,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "legacy",
        {
          _index: 127,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "legend",
        {
          _index: 187,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      ["liability", { _index: 1604, title: {}, body: { "license.html": {} } }],
      ["liable", { _index: 1601, title: {}, body: { "license.html": {} } }],
      [
        "liberty",
        {
          _index: 1761,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "library",
        {
          _index: 359,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "librarypath",
        { _index: 853, title: {}, body: { "classes/Settings.html": {} } },
      ],
      ["license", { _index: 1549, title: { "license.html": {} }, body: {} }],
      ["liking", { _index: 1542, title: {}, body: { "index.html": {} } }],
      ["limitation", { _index: 1565, title: {}, body: { "license.html": {} } }],
      ["limited", { _index: 1592, title: {}, body: { "license.html": {} } }],
      ["lint", { _index: 1400, title: {}, body: { "changelog.html": {} } }],
      [
        "list",
        { _index: 732, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "listen",
        {
          _index: 1365,
          title: {},
          body: { "changelog.html": {}, "index.html": {} },
        },
      ],
      [
        "load",
        {
          _index: 1379,
          title: {},
          body: { "changelog.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "loaded",
        {
          _index: 297,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "loader",
        { _index: 57, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      ["loading", { _index: 1288, title: {}, body: { "changelog.html": {} } }],
      [
        "local",
        {
          _index: 431,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/Settings.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "localhitsounds",
        {
          _index: 360,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "localhuds",
        {
          _index: 600,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "locate",
        {
          _index: 966,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "location",
        {
          _index: 896,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "locationhuds",
        {
          _index: 940,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "loch",
        {
          _index: 1825,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["lock", { _index: 1222, title: {}, body: { "changelog.html": {} } }],
      [
        "lockfileversion",
        { _index: 1469, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "log",
        {
          _index: 868,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "logs",
        {
          _index: 890,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "logs.split('\\n",
        {
          _index: 892,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "lollichop",
        {
          _index: 1813,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "long",
        {
          _index: 1886,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "look",
        {
          _index: 257,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      ["looks", { _index: 1546, title: {}, body: { "index.html": {} } }],
      [
        "loose",
        {
          _index: 1830,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "lugermorph",
        {
          _index: 1714,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "machete",
        {
          _index: 1695,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "machina",
        {
          _index: 1985,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "mackerel",
        {
          _index: 1653,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["macos", { _index: 1462, title: {}, body: { "changelog.html": {} } }],
      [
        "mad",
        {
          _index: 1658,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["made", { _index: 1322, title: {}, body: { "changelog.html": {} } }],
      [
        "main",
        {
          _index: 310,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "maintainer",
        { _index: 738, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "make",
        {
          _index: 292,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "maker",
        {
          _index: 1686,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "mangler",
        {
          _index: 1739,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "manmelter",
        {
          _index: 1797,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "many",
        {
          _index: 317,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "map",
        {
          _index: 438,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "map(value",
        {
          _index: 470,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "margin",
        {
          _index: 184,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "mark",
        {
          _index: 1971,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "market",
        {
          _index: 1750,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "mat_dialog_data",
        {
          _index: 836,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "mat_select_config",
        { _index: 42, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "matautocompletemodule",
        {
          _index: 754,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matbadgemodule",
        {
          _index: 756,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matbuttonmodule",
        {
          _index: 758,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matcardmodule",
        {
          _index: 760,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matcher",
        {
          _index: 819,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "matching",
        {
          _index: 108,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "modules/MaterialModule.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "index.html": {},
            "license.html": {},
            "modules.html": {},
            "overview.html": {},
            "routes.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matdialog",
        {
          _index: 375,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "matdialogmodule",
        {
          _index: 762,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matdialogref",
        {
          _index: 822,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "material",
        {
          _index: 83,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "materialcomponents",
        {
          _index: 794,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "materialmodule",
        {
          _index: 23,
          title: { "modules/MaterialModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/MaterialModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "matexpansionmodule",
        {
          _index: 763,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matformfieldmodule",
        {
          _index: 765,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "maticonmodule",
        {
          _index: 768,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matinputmodule",
        {
          _index: 770,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matlistmodule",
        {
          _index: 772,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matprogressspinnermodule",
        {
          _index: 774,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matselectmodule",
        {
          _index: 777,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matsidenavmodule",
        {
          _index: 778,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matslidermodule",
        {
          _index: 783,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matslidetogglemodule",
        {
          _index: 780,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matsnackbar",
        {
          _index: 980,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "matsnackbarconfig",
        {
          _index: 977,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "matsnackbarmodule",
        {
          _index: 785,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "matsnackbarref",
        {
          _index: 981,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "mattabsmodule",
        {
          _index: 788,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "mattoolbarmodule",
        {
          _index: 790,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "mattooltipmodule",
        {
          _index: 792,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "maul",
        {
          _index: 1810,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["maxime", { _index: 1612, title: {}, body: { "license.html": {} } }],
      ["maximize", { _index: 1334, title: {}, body: { "changelog.html": {} } }],
      [
        "medi",
        {
          _index: 1939,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "medic",
        {
          _index: 1933,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "mediguns",
        {
          _index: 1938,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "melee",
        {
          _index: 1654,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "memory",
        {
          _index: 1685,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "merchantability",
        { _index: 1594, title: {}, body: { "license.html": {} } },
      ],
      ["merge", { _index: 1568, title: {}, body: { "license.html": {} } }],
      [
        "message",
        {
          _index: 973,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "message.action",
        {
          _index: 1022,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "message.config",
        {
          _index: 1023,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "message.message",
        {
          _index: 1021,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "messagequeue",
        {
          _index: 985,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "metadata",
        {
          _index: 162,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "methods",
        {
          _index: 331,
          title: {},
          body: {
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "milk",
        {
          _index: 1659,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "minigun",
        {
          _index: 1879,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "miniguns",
        {
          _index: 1878,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "miscellaneous",
        {
          _index: 1620,
          title: { "miscellaneous/variables.html": {} },
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["missing", { _index: 1303, title: {}, body: { "changelog.html": {} } }],
      [
        "models/hitsound",
        {
          _index: 441,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "models/hud",
        {
          _index: 636,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "models/questionanswer",
        {
          _index: 443,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
          },
        },
      ],
      [
        "models/uploadchangename",
        {
          _index: 445,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "models/yesno",
        {
          _index: 447,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      ["modify", { _index: 1567, title: {}, body: { "license.html": {} } }],
      [
        "module",
        {
          _index: 0,
          title: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "modules/MaterialModule.html": {},
          },
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "modules",
        {
          _index: 2,
          title: { "modules.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "modules/MaterialModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "moment",
        {
          _index: 1164,
          title: {},
          body: { "changelog.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "move",
        {
          _index: 643,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "moved",
        {
          _index: 655,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "moveorcopy",
        { _index: 854, title: {}, body: { "classes/Settings.html": {} } },
      ],
      [
        "multiple",
        {
          _index: 198,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "multiplewarningcomponent",
        {
          _index: 14,
          title: { "components/MultipleWarningComponent.html": {} },
          body: {
            "modules/AppModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "mutated",
        {
          _index: 1660,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "mvm",
        {
          _index: 1876,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "mycontrol",
        {
          _index: 361,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "myerrorstatematcher",
        { _index: 1135, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "mòr",
        {
          _index: 1852,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "n",
        {
          _index: 1826,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "name",
        {
          _index: 175,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "name'},{'name",
        {
          _index: 205,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "name.component",
        {
          _index: 71,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
          },
        },
      ],
      [
        "name.component.html",
        {
          _index: 1052,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "name.component.scss",
        {
          _index: 1051,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "name.component.ts",
        {
          _index: 1050,
          title: {},
          body: {
            "components/UploadChangeNameComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "name.component.ts:21",
        {
          _index: 1059,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "name.component.ts:25",
        {
          _index: 1053,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "name.component.ts:36",
        {
          _index: 1058,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "name.component.ts:43",
        {
          _index: 1054,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "name.component.ts:51",
        {
          _index: 1057,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "name.component.ts:63",
        {
          _index: 1056,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "name.pop",
        {
          _index: 475,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "name.tostring",
        {
          _index: 477,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "name/upload",
        {
          _index: 70,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "nameexists",
        {
          _index: 1079,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "nameregexp",
        {
          _index: 1080,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "nameregexp.test(control.value",
        {
          _index: 1082,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "names",
        {
          _index: 140,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "names.push(a.foldername",
        {
          _index: 723,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "names.push(a.name",
        {
          _index: 575,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "napalmer",
        {
          _index: 1785,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "natascha",
        {
          _index: 1880,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "nature",
        {
          _index: 1702,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["nav", { _index: 1301, title: {}, body: { "changelog.html": {} } }],
      [
        "navigation",
        {
          _index: 969,
          title: {},
          body: { "components/SetupComponent.html": {}, "changelog.html": {} },
        },
      ],
      [
        "necro",
        {
          _index: 1690,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "need",
        {
          _index: 305,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "nessie's",
        {
          _index: 1855,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "never",
        {
          _index: 249,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "new",
        {
          _index: 93,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "newname",
        {
          _index: 504,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "next",
        {
          _index: 1015,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      ["ng", { _index: 49, title: {}, body: { "modules/AppModule.html": {} } }],
      [
        "ngmodule",
        {
          _index: 38,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "modules/MaterialModule.html": {},
          },
        },
      ],
      [
        "ngondestroy",
        {
          _index: 871,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "ngoninit",
        {
          _index: 366,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "ngx",
        { _index: 53, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "nine",
        {
          _index: 1856,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "no.component",
        {
          _index: 82,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "no.component.html",
        {
          _index: 1100,
          title: {},
          body: { "components/YesNoComponent.html": {} },
        },
      ],
      [
        "no.component.scss",
        {
          _index: 1099,
          title: {},
          body: { "components/YesNoComponent.html": {} },
        },
      ],
      [
        "no.component.ts",
        {
          _index: 1098,
          title: {},
          body: { "components/YesNoComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "no.component.ts:13",
        {
          _index: 1102,
          title: {},
          body: { "components/YesNoComponent.html": {} },
        },
      ],
      [
        "no.component.ts:21",
        {
          _index: 1104,
          title: {},
          body: { "components/YesNoComponent.html": {} },
        },
      ],
      [
        "no.component.ts:27",
        {
          _index: 1103,
          title: {},
          body: { "components/YesNoComponent.html": {} },
        },
      ],
      [
        "no/yes",
        {
          _index: 81,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/YesNoComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["node", { _index: 1384, title: {}, body: { "changelog.html": {} } }],
      [
        "nodejs",
        {
          _index: 312,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "nodejs's",
        {
          _index: 283,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "noninfringement",
        { _index: 1598, title: {}, body: { "license.html": {} } },
      ],
      [
        "nostromo",
        {
          _index: 1784,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "notes",
        {
          _index: 282,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "notice",
        {
          _index: 1582,
          title: {},
          body: { "license.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "notinlibrary",
        {
          _index: 601,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "now",
        {
          _index: 922,
          title: {},
          body: { "components/SettingsComponent.html": {}, "index.html": {} },
        },
      ],
      ["npm", { _index: 1223, title: {}, body: { "changelog.html": {} } }],
      ["nsis", { _index: 1446, title: {}, body: { "changelog.html": {} } }],
      [
        "null",
        {
          _index: 382,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "injectables/ValidatorService.html": {},
          },
        },
      ],
      [
        "number",
        {
          _index: 630,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "classes/Settings.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/UploadChangeName.html": {},
          },
        },
      ],
      [
        "nutcracker",
        {
          _index: 1914,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "o'war",
        {
          _index: 1670,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "object",
        {
          _index: 1630,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "objector",
        {
          _index: 1680,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "observable",
        {
          _index: 421,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      ["obtaining", { _index: 1558, title: {}, body: { "license.html": {} } }],
      [
        "ok",
        {
          _index: 806,
          title: {},
          body: {
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "old",
        {
          _index: 644,
          title: {},
          body: { "components/HudComponent.html": {}, "changelog.html": {} },
        },
      ],
      [
        "oldpath",
        {
          _index: 646,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "ondestroy",
        {
          _index: 865,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "one",
        {
          _index: 805,
          title: {},
          body: { "components/MultipleWarningComponent.html": {} },
        },
      ],
      [
        "oninit",
        {
          _index: 353,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "open",
        {
          _index: 457,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "opendialog",
        { _index: 1278, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "opendirectory",
        {
          _index: 898,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      ["option", { _index: 1234, title: {}, body: { "changelog.html": {} } }],
      [
        "option.foldername",
        {
          _index: 728,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "option.foldername.tolowercase().includes(filtervalue",
        {
          _index: 721,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "option.name",
        {
          _index: 584,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "option.name.tolowercase().includes(filtervalue",
        {
          _index: 572,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "optional",
        {
          _index: 176,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "options",
        {
          _index: 423,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "order",
        {
          _index: 291,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "original",
        {
          _index: 1762,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["otherwise", { _index: 1607, title: {}, body: { "license.html": {} } }],
      [
        "out",
        {
          _index: 26,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "license.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "outta",
        {
          _index: 1683,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["over", { _index: 1306, title: {}, body: { "changelog.html": {} } }],
      [
        "overdose",
        {
          _index: 1954,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "overview",
        {
          _index: 1617,
          title: { "overview.html": {} },
          body: { "overview.html": {} },
        },
      ],
      [
        "overwrite",
        {
          _index: 557,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "p",
        {
          _index: 540,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "package",
        {
          _index: 1221,
          title: { "dependencies.html": {} },
          body: { "changelog.html": {} },
        },
      ],
      [
        "package.json",
        {
          _index: 289,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "padding",
        {
          _index: 932,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "page",
        { _index: 739, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "pain",
        {
          _index: 1746,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "pan",
        {
          _index: 1677,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "panic",
        {
          _index: 1771,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "param",
        {
          _index: 178,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "parameters",
        {
          _index: 174,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      ["parser", { _index: 1421, title: {}, body: { "changelog.html": {} } }],
      ["particular", { _index: 1596, title: {}, body: { "license.html": {} } }],
      [
        "party",
        {
          _index: 314,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "passer",
        {
          _index: 1819,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "path",
        {
          _index: 114,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "injectables/ElectronService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/WeaponData.html": {},
            "changelog.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "path.includes(this.s",
        {
          _index: 960,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "path.join('\\\\')}\\\\${result",
        {
          _index: 719,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "path.join('\\\\')}\\\\${r}.wav",
        {
          _index: 523,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "path.pop",
        {
          _index: 520,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "path.split('\\\\').pop",
        {
          _index: 698,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "path.split(this.s",
        {
          _index: 961,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "path}\\\\tf2tools\\\\library",
        {
          _index: 906,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      ["permission", { _index: 1552, title: {}, body: { "license.html": {} } }],
      ["permit", { _index: 1575, title: {}, body: { "license.html": {} } }],
      [
        "persian",
        {
          _index: 1853,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["person", { _index: 1557, title: {}, body: { "license.html": {} } }],
      ["persons", { _index: 1576, title: {}, body: { "license.html": {} } }],
      [
        "persuader",
        {
          _index: 1854,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "phase",
        {
          _index: 304,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "phlogistinator",
        {
          _index: 1782,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["phongguy", { _index: 1551, title: {}, body: { "license.html": {} } }],
      [
        "pistol",
        {
          _index: 1713,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "pistols",
        {
          _index: 1712,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "play",
        {
          _index: 367,
          title: {},
          body: { "components/HitsoundComponent.html": {}, "index.html": {} },
        },
      ],
      [
        "play(_hitsound",
        {
          _index: 398,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "play_arrow",
        {
          _index: 581,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "playfile",
        {
          _index: 368,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "playfile(event",
        {
          _index: 1055,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "playfile(file",
        {
          _index: 401,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "plays",
        {
          _index: 400,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "playwright",
        { _index: 1444, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "playwright/test",
        { _index: 1425, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "please",
        {
          _index: 967,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      ["plugin", { _index: 1172, title: {}, body: { "changelog.html": {} } }],
      [
        "pocket",
        {
          _index: 1719,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "popper",
        {
          _index: 1709,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["portions", { _index: 1586, title: {}, body: { "license.html": {} } }],
      [
        "postal",
        {
          _index: 1808,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "powerjack",
        {
          _index: 1803,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "preloading",
        { _index: 1404, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "presearching",
        { _index: 1405, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "present",
        {
          _index: 286,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "prick",
        {
          _index: 2010,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "primary",
        {
          _index: 1643,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "prinny",
        {
          _index: 1694,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "private",
        {
          _index: 341,
          title: {},
          body: {
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "process",
        {
          _index: 230,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "prod",
        {
          _index: 1634,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "production",
        {
          _index: 1631,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "properties",
        {
          _index: 139,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "classes/WeaponData.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      ["property", { _index: 1465, title: {}, body: { "changelog.html": {} } }],
      [
        "provide",
        { _index: 98, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      ["provided", { _index: 1587, title: {}, body: { "license.html": {} } }],
      [
        "providedin",
        {
          _index: 259,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "injectables/ValidatorService.html": {},
          },
        },
      ],
      [
        "providers",
        { _index: 101, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "public",
        {
          _index: 168,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      ["publish", { _index: 1569, title: {}, body: { "license.html": {} } }],
      [
        "pummeler",
        {
          _index: 1809,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "punch",
        {
          _index: 1647,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["purpose", { _index: 1597, title: {}, body: { "license.html": {} } }],
      [
        "pyro",
        {
          _index: 1773,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "pyro's",
        {
          _index: 1815,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "question",
        {
          _index: 200,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "questionanswer",
        {
          _index: 442,
          title: { "classes/QuestionAnswer.html": {} },
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "questionanswercomponent",
        {
          _index: 15,
          title: { "components/QuestionAnswerComponent.html": {} },
          body: {
            "modules/AppModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "queue",
        {
          _index: 984,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "quick",
        {
          _index: 1941,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "quickiebomb",
        {
          _index: 1841,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "r",
        {
          _index: 518,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "radius",
        {
          _index: 938,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "rainblower",
        {
          _index: 1783,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "ranger",
        {
          _index: 1919,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "reactiveformsmodule",
        {
          _index: 753,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "readme.md",
        { _index: 1327, title: {}, body: { "changelog.html": {} } },
      ],
      ["ready", { _index: 1475, title: {}, body: { "changelog.html": {} } }],
      [
        "recent",
        {
          _index: 925,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "recommend",
        {
          _index: 804,
          title: {},
          body: { "components/MultipleWarningComponent.html": {} },
        },
      ],
      [
        "recorder",
        {
          _index: 1999,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "red",
        {
          _index: 1997,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "ref",
        {
          _index: 987,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "reference",
        { _index: 1324, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "relativelinkresolution",
        {
          _index: 126,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "reminder",
        {
          _index: 308,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "remove",
        {
          _index: 369,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "remove(_hitsound",
        {
          _index: 403,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "remove(_hud",
        {
          _index: 614,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "removed",
        {
          _index: 537,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "removefile",
        {
          _index: 370,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "removefile(file",
        {
          _index: 406,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "removes",
        {
          _index: 405,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "rename",
        {
          _index: 371,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "rename(_hitsound",
        {
          _index: 409,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "rename(_hud",
        {
          _index: 616,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "renames",
        {
          _index: 411,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "renderer",
        {
          _index: 236,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "renderer#ipcrendererinvokechannel",
        {
          _index: 321,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "replace",
        {
          _index: 603,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "replace(_hud",
        {
          _index: 618,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "replaces",
        {
          _index: 620,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "repository",
        { _index: 740, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "require",
        {
          _index: 1522,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "require.context",
        {
          _index: 1636,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "required",
        {
          _index: 846,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "requires",
        {
          _index: 86,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "rescue",
        {
          _index: 1918,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "reserve",
        {
          _index: 1769,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "reset",
        {
          _index: 25,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/SetupComponent.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "resistance",
        {
          _index: 1840,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "resources\\\\app",
        {
          _index: 1635,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "restriction",
        { _index: 1563, title: {}, body: { "license.html": {} } },
      ],
      [
        "result",
        {
          _index: 533,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "resulting",
        {
          _index: 255,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "results",
        {
          _index: 107,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "modules/MaterialModule.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "index.html": {},
            "license.html": {},
            "modules.html": {},
            "overview.html": {},
            "routes.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "return",
        {
          _index: 323,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "injectables/ValidatorService.html": {},
          },
        },
      ],
      [
        "returning",
        { _index: 1368, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "returns",
        {
          _index: 245,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      ["revert", { _index: 1371, title: {}, body: { "changelog.html": {} } }],
      [
        "revolver",
        {
          _index: 2017,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "revolvers",
        {
          _index: 2016,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "reward",
        {
          _index: 2005,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["rewrote", { _index: 1487, title: {}, body: { "changelog.html": {} } }],
      [
        "rifle",
        {
          _index: 1980,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "rifles",
        {
          _index: 1979,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "right",
        {
          _index: 712,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "righteous",
        {
          _index: 1754,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["rights", { _index: 1566, title: {}, body: { "license.html": {} } }],
      [
        "robo",
        {
          _index: 1896,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "rocket",
        {
          _index: 1757,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "root",
        {
          _index: 260,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "injectables/ValidatorService.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "root'},{'name",
        {
          _index: 193,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "rose",
        {
          _index: 2014,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "router",
        {
          _index: 945,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "routermodule",
        {
          _index: 111,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "routermodule.forroot(routes",
        {
          _index: 125,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "routes",
        {
          _index: 112,
          title: { "routes.html": {} },
          body: {
            "modules/AppRoutingModule.html": {},
            "overview.html": {},
            "routes.html": {},
          },
        },
      ],
      [
        "routing.module",
        { _index: 59, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "routing.module.ts",
        {
          _index: 110,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "rune",
        {
          _index: 1673,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "running",
        {
          _index: 1866,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "runtime",
        {
          _index: 298,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "rxjs",
        {
          _index: 440,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "changelog.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "s",
        {
          _index: 579,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "sandman",
        {
          _index: 1697,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sandvich",
        {
          _index: 1891,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sandvich/other",
        {
          _index: 1889,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sap",
        {
          _index: 2001,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sapper",
        {
          _index: 2023,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sappers",
        {
          _index: 1996,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "save",
        {
          _index: 923,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "saw",
        {
          _index: 1947,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "saxxy",
        {
          _index: 1678,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sbmessage",
        {
          _index: 1008,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "sbmessage.action",
        {
          _index: 1010,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "sbmessage.config",
        {
          _index: 1011,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "sbmessage.message",
        {
          _index: 1009,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "scatter",
        {
          _index: 1704,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "scattergun",
        {
          _index: 1700,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "scatterguns",
        {
          _index: 1699,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "scorch",
        {
          _index: 1791,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "scotsman's",
        {
          _index: 1845,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "scottish",
        {
          _index: 1834,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "scout",
        {
          _index: 1638,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "scratcher",
        {
          _index: 1804,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["screen", { _index: 1333, title: {}, body: { "changelog.html": {} } }],
      [
        "screenshots",
        { _index: 741, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "script",
        { _index: 1036, title: {}, body: { "classes/TfWeapons.html": {} } },
      ],
      [
        "search",
        {
          _index: 583,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "second",
        {
          _index: 1897,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "secondary",
        {
          _index: 1648,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["see", { _index: 1545, title: {}, body: { "index.html": {} } }],
      [
        "select",
        {
          _index: 968,
          title: {},
          body: { "components/SetupComponent.html": {}, "changelog.html": {} },
        },
      ],
      [
        "selected",
        {
          _index: 137,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "components/HudComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "selector",
        {
          _index: 163,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "self",
        {
          _index: 1968,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["sell", { _index: 1573, title: {}, body: { "license.html": {} } }],
      [
        "serve",
        {
          _index: 316,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "service",
        {
          _index: 215,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "injectables/ValidatorService.html": {},
            "changelog.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "services/snack.service",
        {
          _index: 448,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "services/validators.service",
        {
          _index: 837,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "settimeout",
        {
          _index: 918,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      ["setting", { _index: 1207, title: {}, body: { "changelog.html": {} } }],
      [
        "settings",
        {
          _index: 123,
          title: { "classes/Settings.html": {} },
          body: {
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "settings'},{'name",
        {
          _index: 202,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "settings.component.html",
        {
          _index: 867,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "settings.component.scss",
        {
          _index: 866,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "settingscomponent",
        {
          _index: 16,
          title: { "components/SettingsComponent.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "setttings",
        { _index: 1219, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "setup",
        {
          _index: 124,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "components/SetupComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "setup'},{'name",
        {
          _index: 203,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "setup.component.html",
        {
          _index: 943,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "setup.component.scss",
        {
          _index: 942,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "setup/setup.component",
        {
          _index: 84,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "setupcomponent",
        {
          _index: 17,
          title: { "components/SetupComponent.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "shahanshah",
        {
          _index: 1977,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["shall", { _index: 1583, title: {}, body: { "license.html": {} } }],
      [
        "shank",
        {
          _index: 1688,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sharp",
        {
          _index: 2011,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sharpened",
        {
          _index: 1805,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "shit",
        {
          _index: 455,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "shiv",
        {
          _index: 1975,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "shooter",
        {
          _index: 1770,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "shooting",
        {
          _index: 1989,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "short",
        {
          _index: 1921,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "shortstop",
        {
          _index: 1706,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "shot",
        {
          _index: 1792,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "shotgun",
        {
          _index: 1768,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "shotguns",
        {
          _index: 1766,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "shovel",
        {
          _index: 1744,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "show",
        {
          _index: 928,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "show(message",
        {
          _index: 1028,
          title: {},
          body: { "injectables/SnackService.html": {} },
        },
      ],
      [
        "shownext",
        {
          _index: 1016,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "showondirtyerrorstatematcher",
        {
          _index: 832,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "shows",
        {
          _index: 993,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "simplesnackbar",
        {
          _index: 982,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "size",
        {
          _index: 930,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "skullcutter",
        {
          _index: 1846,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sleeper",
        {
          _index: 1982,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "slot",
        {
          _index: 1037,
          title: {},
          body: {
            "classes/TfWeapons.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "slots",
        {
          _index: 141,
          title: {},
          body: { "classes/CrosshairSelected.html": {} },
        },
      ],
      [
        "smasher",
        {
          _index: 1691,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "smg",
        {
          _index: 1992,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "snack",
        {
          _index: 376,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "snackbar",
        {
          _index: 994,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "snackbarmessage",
        {
          _index: 971,
          title: { "classes/SnackBarMessage.html": {} },
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "snackbarref",
        {
          _index: 988,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "snackservice",
        {
          _index: 377,
          title: { "injectables/SnackService.html": {} },
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "sniper",
        {
          _index: 1955,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "soda",
        {
          _index: 1708,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sof",
        {
          _index: 955,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      ["software", { _index: 1559, title: {}, body: { "license.html": {} } }],
      [
        "soldier",
        {
          _index: 1726,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "soldier's",
        {
          _index: 1767,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "solemn",
        {
          _index: 1949,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sound",
        {
          _index: 394,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/Settings.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "sound.name",
        {
          _index: 585,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "sound.name.includes('.wav",
        {
          _index: 485,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "sound.name.replace('.wav",
        {
          _index: 486,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "sounds",
        {
          _index: 122,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "changelog.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "sounds'},{'name",
        {
          _index: 206,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "sounds.component",
        {
          _index: 76,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "sounds.component.html",
        {
          _index: 1092,
          title: {},
          body: { "components/WeaponsSoundsComponent.html": {} },
        },
      ],
      [
        "sounds.component.scss",
        {
          _index: 1091,
          title: {},
          body: { "components/WeaponsSoundsComponent.html": {} },
        },
      ],
      [
        "sounds.component.ts",
        {
          _index: 1090,
          title: {},
          body: {
            "components/WeaponsSoundsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "sounds.component.ts:11",
        {
          _index: 1093,
          title: {},
          body: { "components/WeaponsSoundsComponent.html": {} },
        },
      ],
      [
        "sounds/weapons",
        {
          _index: 75,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "source",
        {
          _index: 28,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CoreModule.html": {},
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/ElectronService.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "modules/MaterialModule.html": {},
            "components/MultipleWarningComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "southern",
        {
          _index: 1908,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "spec\\.ts",
        {
          _index: 1637,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "special",
        {
          _index: 1067,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "specials",
        {
          _index: 1074,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      ["spelling", { _index: 1197, title: {}, body: { "changelog.html": {} } }],
      [
        "spinner",
        { _index: 776, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "spirit",
        {
          _index: 1869,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "split",
        {
          _index: 665,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "split[0]}\\\\${this.s",
        {
          _index: 962,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "spy",
        {
          _index: 1994,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src",
        {
          _index: 296,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/.../app.module.ts",
        {
          _index: 1627,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.dev.ts",
        {
          _index: 1622,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.prod.ts",
        {
          _index: 1623,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.ts",
        {
          _index: 1624,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.web.ts",
        {
          _index: 1625,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../material.ts",
        {
          _index: 1628,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../test.ts",
        {
          _index: 1626,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../tfweapons.ts",
        {
          _index: 1629,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/app",
        {
          _index: 109,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "src/app/app.component.ts",
        { _index: 1496, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "src/app/app.module.ts",
        {
          _index: 30,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/app/core/core.module.ts",
        { _index: 129, title: {}, body: { "modules/CoreModule.html": {} } },
      ],
      [
        "src/app/core/services/electron/electron.service.ts",
        {
          _index: 213,
          title: {},
          body: { "injectables/ElectronService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/core/services/electron/electron.service.ts:22",
        {
          _index: 234,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "src/app/core/services/electron/electron.service.ts:26",
        {
          _index: 238,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "src/app/core/services/electron/electron.service.ts:30",
        {
          _index: 228,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "src/app/core/services/electron/electron.service.ts:34",
        {
          _index: 232,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "src/app/core/services/electron/electron.service.ts:38",
        {
          _index: 226,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "src/app/core/services/electron/electron.service.ts:42",
        {
          _index: 237,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "src/app/core/services/electron/electron.service.ts:46",
        {
          _index: 231,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "src/app/core/services/electron/electron.service.ts:50",
        {
          _index: 233,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "src/app/core/services/electron/electron.service.ts:54",
        {
          _index: 225,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "src/app/core/services/electron/electron.service.ts:90",
        {
          _index: 242,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "src/app/dashboard/crosshairs/crosshairs.component.ts",
        { _index: 1501, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "src/app/dashboard/dashboard.component.ts",
        {
          _index: 161,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/dashboard/dashboard.component.ts:12",
        {
          _index: 171,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/dashboard.component.ts:20",
        {
          _index: 177,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts",
        {
          _index: 351,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:113",
        {
          _index: 416,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:166",
        {
          _index: 410,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:202",
        {
          _index: 404,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:236",
        {
          _index: 408,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:245",
        {
          _index: 402,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:254",
        {
          _index: 399,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:277",
        {
          _index: 418,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:286",
        {
          _index: 387,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:30",
        {
          _index: 427,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:319",
        {
          _index: 392,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:35",
        {
          _index: 430,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:351",
        {
          _index: 384,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:363",
        {
          _index: 380,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:39",
        {
          _index: 429,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:43",
        {
          _index: 428,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:48",
        {
          _index: 433,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:52",
        {
          _index: 378,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:64",
        {
          _index: 420,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:75",
        {
          _index: 396,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/hitsound.component.ts:97",
        {
          _index: 412,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hitsound/multiple",
        {
          _index: 795,
          title: {},
          body: {
            "components/MultipleWarningComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/dashboard/hitsound/upload",
        {
          _index: 1049,
          title: {},
          body: {
            "components/UploadChangeNameComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts",
        {
          _index: 595,
          title: {},
          body: { "components/HudComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:116",
        {
          _index: 625,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:157",
        {
          _index: 607,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:172",
        {
          _index: 623,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:198",
        {
          _index: 615,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:228",
        {
          _index: 626,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:266",
        {
          _index: 617,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:27",
        {
          _index: 629,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:299",
        {
          _index: 619,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:309",
        {
          _index: 612,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:32",
        {
          _index: 627,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:327",
        {
          _index: 610,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:36",
        {
          _index: 631,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:40",
        {
          _index: 632,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:44",
        {
          _index: 633,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:48",
        {
          _index: 635,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:53",
        {
          _index: 634,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:57",
        {
          _index: 605,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/hud/hud.component.ts:82",
        {
          _index: 613,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/settings/settings.component.ts",
        {
          _index: 864,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/dashboard/settings/settings.component.ts:111",
        {
          _index: 880,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/settings/settings.component.ts:118",
        {
          _index: 877,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/settings/settings.component.ts:21",
        {
          _index: 883,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/settings/settings.component.ts:23",
        {
          _index: 873,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/settings/settings.component.ts:35",
        {
          _index: 881,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/settings/settings.component.ts:45",
        {
          _index: 879,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/settings/settings.component.ts:53",
        {
          _index: 876,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/settings/settings.component.ts:61",
        {
          _index: 874,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "src/app/dashboard/weapons",
        {
          _index: 1089,
          title: {},
          body: {
            "components/WeaponsSoundsComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/dialogs/question",
        {
          _index: 814,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/dialogs/yes",
        {
          _index: 1097,
          title: {},
          body: { "components/YesNoComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/material.ts",
        {
          _index: 752,
          title: {},
          body: {
            "modules/MaterialModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/app/mock/tfweapons.ts",
        {
          _index: 1512,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/models/crosshairselected.ts",
        {
          _index: 134,
          title: {},
          body: { "classes/CrosshairSelected.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/models/crosshairselected.ts:15",
        {
          _index: 152,
          title: {},
          body: { "classes/CrosshairSelected.html": {} },
        },
      ],
      [
        "src/app/models/crosshairselected.ts:19",
        {
          _index: 150,
          title: {},
          body: { "classes/CrosshairSelected.html": {} },
        },
      ],
      [
        "src/app/models/crosshairselected.ts:23",
        {
          _index: 151,
          title: {},
          body: { "classes/CrosshairSelected.html": {} },
        },
      ],
      [
        "src/app/models/crosshairselected.ts:27",
        {
          _index: 153,
          title: {},
          body: { "classes/CrosshairSelected.html": {} },
        },
      ],
      [
        "src/app/models/crosshairselected.ts:8",
        {
          _index: 149,
          title: {},
          body: { "classes/CrosshairSelected.html": {} },
        },
      ],
      [
        "src/app/models/hitsound.ts",
        {
          _index: 348,
          title: {},
          body: { "classes/Hitsound.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/models/hitsound.ts:12",
        { _index: 350, title: {}, body: { "classes/Hitsound.html": {} } },
      ],
      [
        "src/app/models/hitsound.ts:8",
        { _index: 349, title: {}, body: { "classes/Hitsound.html": {} } },
      ],
      [
        "src/app/models/hud.ts",
        {
          _index: 588,
          title: {},
          body: { "classes/Hud.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/models/hud.ts:12",
        { _index: 591, title: {}, body: { "classes/Hud.html": {} } },
      ],
      [
        "src/app/models/hud.ts:16",
        { _index: 594, title: {}, body: { "classes/Hud.html": {} } },
      ],
      [
        "src/app/models/hud.ts:20",
        { _index: 593, title: {}, body: { "classes/Hud.html": {} } },
      ],
      [
        "src/app/models/hud.ts:8",
        { _index: 592, title: {}, body: { "classes/Hud.html": {} } },
      ],
      [
        "src/app/models/hudlist.ts",
        {
          _index: 731,
          title: {},
          body: { "classes/HudList.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/models/hudlist.ts:12",
        { _index: 742, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "src/app/models/hudlist.ts:16",
        { _index: 747, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "src/app/models/hudlist.ts:20",
        { _index: 751, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "src/app/models/hudlist.ts:24",
        { _index: 749, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "src/app/models/hudlist.ts:28",
        { _index: 750, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "src/app/models/hudlist.ts:32",
        { _index: 746, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "src/app/models/hudlist.ts:36",
        { _index: 744, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "src/app/models/hudlist.ts:40",
        { _index: 745, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "src/app/models/hudlist.ts:44",
        { _index: 743, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "src/app/models/hudlist.ts:8",
        { _index: 748, title: {}, body: { "classes/HudList.html": {} } },
      ],
      [
        "src/app/models/questionanswer.ts",
        {
          _index: 808,
          title: {},
          body: { "classes/QuestionAnswer.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/models/questionanswer.ts:12",
        { _index: 812, title: {}, body: { "classes/QuestionAnswer.html": {} } },
      ],
      [
        "src/app/models/questionanswer.ts:16",
        { _index: 810, title: {}, body: { "classes/QuestionAnswer.html": {} } },
      ],
      [
        "src/app/models/questionanswer.ts:8",
        { _index: 811, title: {}, body: { "classes/QuestionAnswer.html": {} } },
      ],
      [
        "src/app/models/settings.ts",
        {
          _index: 849,
          title: {},
          body: { "classes/Settings.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/models/settings.ts:10",
        { _index: 859, title: {}, body: { "classes/Settings.html": {} } },
      ],
      [
        "src/app/models/settings.ts:12",
        { _index: 860, title: {}, body: { "classes/Settings.html": {} } },
      ],
      [
        "src/app/models/settings.ts:4",
        { _index: 858, title: {}, body: { "classes/Settings.html": {} } },
      ],
      [
        "src/app/models/settings.ts:6",
        { _index: 862, title: {}, body: { "classes/Settings.html": {} } },
      ],
      [
        "src/app/models/settings.ts:8",
        { _index: 855, title: {}, body: { "classes/Settings.html": {} } },
      ],
      [
        "src/app/models/tf_weapons.ts",
        {
          _index: 1035,
          title: {},
          body: { "classes/TfWeapons.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/models/tf_weapons.ts:12",
        { _index: 1042, title: {}, body: { "classes/TfWeapons.html": {} } },
      ],
      [
        "src/app/models/tf_weapons.ts:16",
        { _index: 1040, title: {}, body: { "classes/TfWeapons.html": {} } },
      ],
      [
        "src/app/models/tf_weapons.ts:20",
        { _index: 1041, title: {}, body: { "classes/TfWeapons.html": {} } },
      ],
      [
        "src/app/models/tf_weapons.ts:24",
        { _index: 1043, title: {}, body: { "classes/TfWeapons.html": {} } },
      ],
      [
        "src/app/models/tf_weapons.ts:8",
        { _index: 1039, title: {}, body: { "classes/TfWeapons.html": {} } },
      ],
      [
        "src/app/models/uploadchangename.ts",
        {
          _index: 1044,
          title: {},
          body: { "classes/UploadChangeName.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/models/uploadchangename.ts:12",
        {
          _index: 1045,
          title: {},
          body: { "classes/UploadChangeName.html": {} },
        },
      ],
      [
        "src/app/models/uploadchangename.ts:16",
        {
          _index: 1046,
          title: {},
          body: { "classes/UploadChangeName.html": {} },
        },
      ],
      [
        "src/app/models/uploadchangename.ts:20",
        {
          _index: 1048,
          title: {},
          body: { "classes/UploadChangeName.html": {} },
        },
      ],
      [
        "src/app/models/uploadchangename.ts:8",
        {
          _index: 1047,
          title: {},
          body: { "classes/UploadChangeName.html": {} },
        },
      ],
      [
        "src/app/models/weapondata.ts",
        {
          _index: 1084,
          title: {},
          body: { "classes/WeaponData.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/models/weapondata.ts:13",
        { _index: 1085, title: {}, body: { "classes/WeaponData.html": {} } },
      ],
      [
        "src/app/models/weapondata.ts:17",
        { _index: 1087, title: {}, body: { "classes/WeaponData.html": {} } },
      ],
      [
        "src/app/models/weapondata.ts:9",
        { _index: 1086, title: {}, body: { "classes/WeaponData.html": {} } },
      ],
      [
        "src/app/models/yesno.ts",
        {
          _index: 1094,
          title: {},
          body: { "classes/YesNo.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/models/yesno.ts:12",
        { _index: 1096, title: {}, body: { "classes/YesNo.html": {} } },
      ],
      [
        "src/app/models/yesno.ts:8",
        { _index: 1095, title: {}, body: { "classes/YesNo.html": {} } },
      ],
      [
        "src/app/services/file",
        {
          _index: 328,
          title: {},
          body: { "injectables/FileHelpService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/services/snack.service.ts",
        {
          _index: 972,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/services/snack.service.ts:101",
        {
          _index: 1030,
          title: {},
          body: { "injectables/SnackService.html": {} },
        },
      ],
      [
        "src/app/services/snack.service.ts:12",
        {
          _index: 979,
          title: {},
          body: { "classes/SnackBarMessage.html": {} },
        },
      ],
      [
        "src/app/services/snack.service.ts:16",
        {
          _index: 976,
          title: {},
          body: { "classes/SnackBarMessage.html": {} },
        },
      ],
      [
        "src/app/services/snack.service.ts:20",
        {
          _index: 978,
          title: {},
          body: { "classes/SnackBarMessage.html": {} },
        },
      ],
      [
        "src/app/services/snack.service.ts:34",
        {
          _index: 1031,
          title: {},
          body: { "injectables/SnackService.html": {} },
        },
      ],
      [
        "src/app/services/snack.service.ts:38",
        {
          _index: 1033,
          title: {},
          body: { "injectables/SnackService.html": {} },
        },
      ],
      [
        "src/app/services/snack.service.ts:42",
        {
          _index: 1032,
          title: {},
          body: { "injectables/SnackService.html": {} },
        },
      ],
      [
        "src/app/services/snack.service.ts:46",
        {
          _index: 1026,
          title: {},
          body: { "injectables/SnackService.html": {} },
        },
      ],
      [
        "src/app/services/snack.service.ts:60",
        {
          _index: 1027,
          title: {},
          body: { "injectables/SnackService.html": {} },
        },
      ],
      [
        "src/app/services/snack.service.ts:72",
        {
          _index: 1029,
          title: {},
          body: { "injectables/SnackService.html": {} },
        },
      ],
      [
        "src/app/services/validators.service.ts",
        {
          _index: 1065,
          title: {},
          body: {
            "injectables/ValidatorService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/services/validators.service.ts:10",
        {
          _index: 1068,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "src/app/services/validators.service.ts:23",
        {
          _index: 1070,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "src/app/services/validators.service.ts:37",
        {
          _index: 1073,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "src/app/setup/setup.component.ts",
        {
          _index: 941,
          title: {},
          body: { "components/SetupComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/setup/setup.component.ts:20",
        {
          _index: 951,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "src/app/setup/setup.component.ts:24",
        {
          _index: 946,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "src/app/setup/setup.component.ts:44",
        {
          _index: 949,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "src/app/setup/setup.component.ts:52",
        {
          _index: 948,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "src/environments/environment.dev.ts",
        {
          _index: 1516,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/environments/environment.prod.ts",
        {
          _index: 1517,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/environments/environment.ts",
        {
          _index: 1518,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/environments/environment.web.ts",
        {
          _index: 1519,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/test.ts",
        {
          _index: 1520,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src\\app\\app.component.scss",
        { _index: 1191, title: {}, body: { "changelog.html": {} } },
      ],
      ["stable", { _index: 1548, title: {}, body: { "index.html": {} } }],
      [
        "staff",
        {
          _index: 1682,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "star",
        {
          _index: 1990,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "started",
        {
          _index: 1107,
          title: { "changelog.html": {}, "index.html": {}, "license.html": {} },
          body: {},
        },
      ],
      [
        "startwith",
        {
          _index: 439,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "statements",
        { _index: 1495, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "steak",
        {
          _index: 1894,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "steel",
        {
          _index: 1870,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "stick",
        {
          _index: 1668,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sticky",
        {
          _index: 1838,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "stickybomb",
        {
          _index: 1839,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "stock",
        {
          _index: 1711,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "strike",
        {
          _index: 1729,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "string",
        {
          _index: 145,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "classes/QuestionAnswer.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "classes/YesNo.html": {},
          },
        },
      ],
      ["strongly", { _index: 1456, title: {}, body: { "changelog.html": {} } }],
      [
        "styles",
        {
          _index: 158,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "styleurls",
        {
          _index: 164,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "sub",
        {
          _index: 813,
          title: {},
          body: { "classes/QuestionAnswer.html": {}, "classes/YesNo.html": {} },
        },
      ],
      ["subject", { _index: 1578, title: {}, body: { "license.html": {} } }],
      ["sublicense", { _index: 1571, title: {}, body: { "license.html": {} } }],
      [
        "submit",
        {
          _index: 820,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "submits",
        {
          _index: 828,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "subquestion",
        {
          _index: 515,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "classes/YesNo.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "subscription",
        {
          _index: 983,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "substantial",
        { _index: 1585, title: {}, body: { "license.html": {} } },
      ],
      [
        "sun",
        {
          _index: 1667,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "support",
        {
          _index: 1461,
          title: {},
          body: { "changelog.html": {}, "modules.html": {} },
        },
      ],
      [
        "sure",
        {
          _index: 529,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
          },
        },
      ],
      ["svg", { _index: 1614, title: {}, body: { "modules.html": {} } }],
      ["switch", { _index: 1537, title: {}, body: { "index.html": {} } }],
      [
        "swords",
        {
          _index: 1843,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "sydney",
        {
          _index: 1981,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "syringe",
        {
          _index: 1952,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["tab", { _index: 1312, title: {}, body: { "changelog.html": {} } }],
      ["table", { _index: 1524, title: {}, body: { "coverage.html": {} } }],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 1523, title: {}, body: { "coverage.html": {} } },
      ],
      ["tabs", { _index: 1392, title: {}, body: { "changelog.html": {} } }],
      [
        "take",
        {
          _index: 908,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "tape",
        {
          _index: 1998,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "target",
        {
          _index: 481,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "team",
        {
          _index: 952,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "temp",
        {
          _index: 642,
          title: {},
          body: { "components/HudComponent.html": {}, "changelog.html": {} },
        },
      ],
      [
        "template",
        {
          _index: 157,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "templates",
        { _index: 1269, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "templateurl",
        {
          _index: 166,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "test",
        {
          _index: 863,
          title: {},
          body: { "classes/Settings.html": {}, "changelog.html": {} },
        },
      ],
      ["tests", { _index: 1381, title: {}, body: { "changelog.html": {} } }],
      ["text", { _index: 1264, title: {}, body: { "changelog.html": {} } }],
      [
        "tf2",
        {
          _index: 965,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "tf2tools",
        {
          _index: 456,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "tf_weapon_bat",
        {
          _index: 1661,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_bat_fish",
        {
          _index: 1651,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_bat_giftwrap",
        {
          _index: 1720,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_bat_wood",
        {
          _index: 1696,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_bonesaw",
        {
          _index: 1943,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_bottle",
        {
          _index: 1832,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_buff_item",
        {
          _index: 1730,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_builder",
        {
          _index: 2022,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_cannon",
        {
          _index: 1829,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_charged_smg",
        {
          _index: 1963,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_cleaver",
        {
          _index: 1723,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_club",
        {
          _index: 1972,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_compound_bow",
        {
          _index: 1956,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_crossbow",
        {
          _index: 1934,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_fireaxe",
        {
          _index: 1798,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_fists",
        {
          _index: 1861,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_flamethrower",
        {
          _index: 1777,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_flaregun",
        {
          _index: 1786,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_flaregun_revenge",
        {
          _index: 1796,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_grenadelauncher",
        {
          _index: 1822,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_handgun_scout_primary",
        {
          _index: 1705,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_handgun_scout_secondary",
        {
          _index: 1716,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_jar",
        {
          _index: 1966,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_jar_milk",
        {
          _index: 1657,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_katana",
        {
          _index: 1836,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_knife",
        {
          _index: 2002,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_laser_pointer",
        {
          _index: 1928,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_lunchbox",
        {
          _index: 1888,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_lunchbox_drink",
        {
          _index: 1644,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_mechanical_arm",
        {
          _index: 1920,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_medigun",
        {
          _index: 1937,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_minigun",
        {
          _index: 1877,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_particle_cannon",
        {
          _index: 1737,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_pep_brawler_blaster",
        {
          _index: 1639,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_pipebomblauncher",
        {
          _index: 1837,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_pistol",
        {
          _index: 1915,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_pistol_scout",
        {
          _index: 1710,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_raygun",
        {
          _index: 1753,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_revolver",
        {
          _index: 2015,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_robot_arm",
        {
          _index: 1904,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_rocketlauncher",
        {
          _index: 1756,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_rocketlauncher_airstrike",
        {
          _index: 1727,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_rocketlauncher_directhit",
        {
          _index: 1740,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_rocketlauncher_fireball",
        {
          _index: 1774,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_rocketpack",
        {
          _index: 1820,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_sapper",
        {
          _index: 1995,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_scattergun",
        {
          _index: 1698,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_sentry_revenge",
        {
          _index: 1925,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_shotgun_building_rescue",
        {
          _index: 1917,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_shotgun_hwg",
        {
          _index: 1899,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_shotgun_primary",
        {
          _index: 1923,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_shotgun_pyro",
        {
          _index: 1814,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_shotgun_soldier",
        {
          _index: 1765,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_shovel",
        {
          _index: 1743,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_slap",
        {
          _index: 1793,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_smg",
        {
          _index: 1991,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_sniperrifle",
        {
          _index: 1978,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_sniperrifle_classic",
        {
          _index: 1961,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_sniperrifle_decap",
        {
          _index: 1993,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_soda_popper",
        {
          _index: 1707,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_stickbomb",
        {
          _index: 1857,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_sword",
        {
          _index: 1842,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_syringegun_medic",
        {
          _index: 1951,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapon_wrench",
        {
          _index: 1906,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "tf_weapons",
        { _index: 1088, title: {}, body: { "classes/WeaponData.html": {} } },
      ],
      [
        "tfweapons",
        {
          _index: 1034,
          title: { "classes/TfWeapons.html": {} },
          body: {
            "classes/TfWeapons.html": {},
            "classes/WeaponData.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "then((newname",
        {
          _index: 503,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "thermal",
        {
          _index: 1816,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "third",
        {
          _index: 1811,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "this.app.apptemp}\\\\${this.app.generaterandomstring(8)}.wav",
        {
          _index: 541,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.app.error(err",
        {
          _index: 510,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "this.app.hitsounds",
        {
          _index: 467,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.app.hitsounds.length",
        {
          _index: 463,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.app.hitsounds[0",
        {
          _index: 552,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.app.killsounds[0",
        {
          _index: 563,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.app.loading",
        {
          _index: 893,
          title: {},
          body: {
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "this.app.log.next(`failed",
        {
          _index: 913,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "this.app.log.next(`installing",
        {
          _index: 554,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.app.log.next(`remove",
        {
          _index: 534,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.app.log.next(`renaming",
        {
          _index: 521,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.app.log.next(`successfully",
        {
          _index: 702,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "this.app.log.next(`trying",
        {
          _index: 651,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "this.app.log.next(`uninstalling",
        {
          _index: 683,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.app.log.next(`uploading",
        {
          _index: 700,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.app.settings.custompath",
        {
          _index: 672,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "this.app.settings.custompath}\\\\${_hud.foldername",
        {
          _index: 678,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.app.settings.custompath}\\\\mycustomstuff\\\\sound\\\\ui",
        {
          _index: 560,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.app.settings.librarypath",
        {
          _index: 897,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "this.app.settings.librarypath}\\\\hitsounds",
        {
          _index: 450,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.app.settings.librarypath}\\\\huds",
        {
          _index: 638,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.app.settings.moveorcopy",
        {
          _index: 682,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.app.settings.volume",
        {
          _index: 501,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.app.settingsupdate.next(this.app.settings",
        {
          _index: 551,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "this.app.update('hitsounds",
        {
          _index: 458,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.appdata",
        {
          _index: 278,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "this.childprocess",
        {
          _index: 270,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "this.currenthuds",
        {
          _index: 669,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.currenthuds.push(h",
        {
          _index: 674,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.data.volume",
        {
          _index: 1062,
          title: {},
          body: { "components/UploadChangeNameComponent.html": {} },
        },
      ],
      [
        "this.dialog",
        {
          _index: 268,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "this.dialog.open(multiplewarningcomponent",
        {
          _index: 465,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.dialog.open(questionanswercomponent",
        {
          _index: 513,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.dialog.open(uploadchangenamecomponent",
        {
          _index: 494,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.dialog.open(yesnocomponent",
        {
          _index: 531,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.dialogref.close(this.input.value",
        {
          _index: 844,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "this.electron.appdata('tf2tools\\\\hitsounds",
        {
          _index: 653,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.appdata('tf2tools\\\\huds",
        {
          _index: 647,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.copy(_hitsound.path",
        {
          _index: 556,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.copy(_hud.path",
        {
          _index: 679,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.copy(_killsound.path",
        {
          _index: 565,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.copy(path",
        {
          _index: 701,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.copy(sound.path",
        {
          _index: 505,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.copysync(p",
        {
          _index: 542,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.ensuredir(defaultpath",
        {
          _index: 561,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.ensuredir(this.localhitsounds",
        {
          _index: 451,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.ensuredir(this.localhuds",
        {
          _index: 639,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.ensuredirsync(path",
        {
          _index: 907,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.existssync(_hitsound.path",
        {
          _index: 512,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.existssync(_hud.path",
        {
          _index: 681,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.existssync(dest",
        {
          _index: 490,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.electron.fs.existssync(info",
        {
          _index: 660,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.existssync(l.path",
        {
          _index: 675,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.existssync(oldpath",
        {
          _index: 648,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.existssync(path",
        {
          _index: 905,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.move(_hud.path",
        {
          _index: 685,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.move(oldpath",
        {
          _index: 652,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.move(this.app.settings.librarypath",
        {
          _index: 911,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.readdirsync(dirpath",
        {
          _index: 342,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      [
        "this.electron.fs.readdirsync(this.app.settings.custompath).foreach(customfiles",
        {
          _index: 671,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.readdirsync(this.localhitsounds).foreach(file",
        {
          _index: 473,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.readdirsync(this.localhuds).foreach(customfiles",
        {
          _index: 657,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.readfilesync(hud.path",
        {
          _index: 708,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.readfilesync(info",
        {
          _index: 661,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.readfilesync(this.electron.appdata('tf2tools\\\\log.txt",
        {
          _index: 891,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.remove(_hitsound.path",
        {
          _index: 536,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.remove(_hud.path",
        {
          _index: 687,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.removesync(_hitsound.path",
        {
          _index: 550,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.rename(_hitsound.path",
        {
          _index: 524,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.rename(_hud.path",
        {
          _index: 718,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.electron.fs.statsync(dirpath",
        {
          _index: 344,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      [
        "this.electron.ipcrenderer.once('opendialogresponse",
        {
          _index: 900,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "this.electron.ipcrenderer.send('opendialog",
        {
          _index: 894,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "this.filteredoptions",
        {
          _index: 468,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.folderupload.nativeelement.value",
        {
          _index: 511,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.fs",
        {
          _index: 272,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "this.getallfiles(dirpath",
        {
          _index: 346,
          title: {},
          body: { "injectables/FileHelpService.html": {} },
        },
      ],
      [
        "this.getnames",
        {
          _index: 499,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.getnames(_hitsound.name",
        {
          _index: 516,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.getnames(_hud.foldername",
        {
          _index: 716,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.hitsoundfilter(value",
        {
          _index: 471,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.http",
        {
          _index: 274,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "this.http.get('https://api.github.com/repos/phongguy/tf2tools/releases/latest').subscribe((json",
        {
          _index: 887,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "this.https",
        {
          _index: 276,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "this.hudfilter(value",
        {
          _index: 656,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.hudsinstalled",
        {
          _index: 668,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.input",
        {
          _index: 839,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "this.input.invalid",
        {
          _index: 843,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "this.ipcrenderer",
        {
          _index: 264,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "this.iselectron",
        {
          _index: 263,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "this.isinstancevisible",
        {
          _index: 1013,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "this.library",
        {
          _index: 472,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.library.filter(option",
        {
          _index: 571,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.library.foreach(a",
        {
          _index: 573,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.library.length",
        {
          _index: 645,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.library.push(h",
        {
          _index: 479,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.library.push(l",
        {
          _index: 709,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.localhitsounds",
        {
          _index: 449,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.localhitsounds}\\\\${name}.wav",
        {
          _index: 478,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.localhitsounds}\\\\${newname}.wav",
        {
          _index: 506,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.localhitsounds}\\\\${sound.name",
        {
          _index: 488,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.localhuds",
        {
          _index: 637,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.localhuds}\\\\${_hud.foldername",
        {
          _index: 684,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.localhuds}\\\\${name",
        {
          _index: 699,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.matcher",
        {
          _index: 838,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "this.messagequeue.length",
        {
          _index: 1017,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "this.messagequeue.push(sbmessage",
        {
          _index: 1012,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "this.messagequeue.shift",
        {
          _index: 1018,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "this.mycontrol.setvalue",
        {
          _index: 480,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.mycontrol.valuechanges.pipe",
        {
          _index: 469,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.notinlibrary",
        {
          _index: 670,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.notinlibrary.push(h",
        {
          _index: 676,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.path",
        {
          _index: 280,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "this.path.nativeelement.value",
        {
          _index: 957,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "this.play",
        {
          _index: 539,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.remove",
        {
          _index: 538,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.router.navigate(['dashboard/hud",
        {
          _index: 963,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "this.shownext",
        {
          _index: 1014,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "this.snack.open",
        {
          _index: 1020,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "this.snack.show('files",
        {
          _index: 654,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.snack.show('moving",
        {
          _index: 649,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "this.snack.show('that",
        {
          _index: 914,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "this.snack.show('this",
        {
          _index: 964,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "this.snack.show('your",
        {
          _index: 912,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "this.snack.show(`${_hitsound.name",
        {
          _index: 526,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.snack.show(`${_hud.foldername",
        {
          _index: 680,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.snack.show(`${name",
        {
          _index: 507,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "this.snack.show(`added",
        {
          _index: 704,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.snack.show(`hitsound",
        {
          _index: 558,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.snack.show(`killsound",
        {
          _index: 566,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.snack.show(`renamed",
        {
          _index: 525,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "this.snack.show(`updated",
        {
          _index: 720,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.snack.show(s",
        {
          _index: 714,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "this.snackbarref",
        {
          _index: 1019,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "this.snackbarref.afterdismissed().subscribe",
        {
          _index: 1024,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "this.subscription.unsubscribe",
        {
          _index: 992,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      [
        "this.update",
        {
          _index: 459,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "this.validator.checkname(this.data.cant",
        {
          _index: 841,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "this.validator.special",
        {
          _index: 842,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "this.webframe",
        {
          _index: 266,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "three",
        {
          _index: 1672,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "throughout",
        { _index: 850, title: {}, body: { "classes/Settings.html": {} } },
      ],
      [
        "thrower",
        {
          _index: 1780,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "thruster",
        {
          _index: 1817,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "time",
        {
          _index: 909,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "title",
        {
          _index: 495,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/SettingsComponent.html": {},
            "classes/UploadChangeName.html": {},
          },
        },
      ],
      [
        "todo",
        {
          _index: 621,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "toggle",
        { _index: 782, title: {}, body: { "modules/MaterialModule.html": {} } },
      ],
      [
        "tomislav",
        {
          _index: 1884,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["tooltip", { _index: 1238, title: {}, body: { "changelog.html": {} } }],
      ["top", { _index: 1307, title: {}, body: { "changelog.html": {} } }],
      ["tort", { _index: 1606, title: {}, body: { "license.html": {} } }],
      [
        "train",
        {
          _index: 1747,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "translate",
        { _index: 50, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "translate/core",
        { _index: 54, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "translate/http",
        { _index: 56, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "translatehttploader",
        {
          _index: 55,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "translatehttploader(http",
        {
          _index: 94,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "translateloader",
        { _index: 51, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "translatemodule",
        { _index: 52, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "translatemodule.forroot",
        { _index: 97, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "tree",
        {
          _index: 160,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "tribalman's",
        {
          _index: 1974,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "true",
        {
          _index: 104,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "injectables/ValidatorService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ts",
        {
          _index: 299,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      ["tslib", { _index: 1533, title: {}, body: { "dependencies.html": {} } }],
      [
        "type",
        {
          _index: 144,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "injectables/FileHelpService.html": {},
            "classes/Hitsound.html": {},
            "components/HitsoundComponent.html": {},
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "classes/HudList.html": {},
            "classes/QuestionAnswer.html": {},
            "components/QuestionAnswerComponent.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "classes/TfWeapons.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "classes/WeaponData.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "typeof",
        {
          _index: 261,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "types",
        {
          _index: 254,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "types/node",
        { _index: 1167, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "typescript",
        {
          _index: 253,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "ubersaw",
        {
          _index: 1945,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["ubuntu", { _index: 1463, title: {}, body: { "changelog.html": {} } }],
      [
        "ullapool",
        {
          _index: 1858,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "unarmed",
        {
          _index: 1655,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "undefined",
        {
          _index: 553,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "undone",
        {
          _index: 530,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "unexpected",
        { _index: 1187, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "uninstall",
        {
          _index: 604,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "uninstall(_hud",
        {
          _index: 622,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "uninstalled",
        {
          _index: 686,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "uninstalling",
        {
          _index: 927,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "uninstalls",
        {
          _index: 624,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "update",
        {
          _index: 373,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      ["updated", { _index: 1202, title: {}, body: { "changelog.html": {} } }],
      [
        "updates",
        {
          _index: 413,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "updatesettings",
        {
          _index: 872,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "upload",
        {
          _index: 204,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "upload(event",
        {
          _index: 414,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "uploadchangename",
        {
          _index: 444,
          title: { "classes/UploadChangeName.html": {} },
          body: {
            "components/HitsoundComponent.html": {},
            "classes/UploadChangeName.html": {},
            "components/UploadChangeNameComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "uploadchangenamecomponent",
        {
          _index: 18,
          title: { "components/UploadChangeNameComponent.html": {} },
          body: {
            "modules/AppModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "uploaded",
        {
          _index: 703,
          title: {},
          body: { "components/HudComponent.html": {} },
        },
      ],
      [
        "uploads",
        {
          _index: 417,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "urgently",
        {
          _index: 1867,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "use",
        {
          _index: 250,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "changelog.html": {},
            "license.html": {},
          },
        },
      ],
      [
        "used",
        {
          _index: 309,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "classes/Settings.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "usefactory",
        { _index: 99, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "user",
        {
          _index: 453,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "usevalue",
        { _index: 102, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "utf8",
        {
          _index: 663,
          title: {},
          body: {
            "components/HudComponent.html": {},
            "components/SettingsComponent.html": {},
          },
        },
      ],
      [
        "vaccinator",
        {
          _index: 1942,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "validator",
        {
          _index: 823,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
          },
        },
      ],
      [
        "validatorfn",
        {
          _index: 1072,
          title: {},
          body: { "injectables/ValidatorService.html": {} },
        },
      ],
      [
        "validators",
        {
          _index: 834,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "validators.required",
        {
          _index: 840,
          title: {},
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
          },
        },
      ],
      [
        "validatorservice",
        {
          _index: 824,
          title: { "injectables/ValidatorService.html": {} },
          body: {
            "components/QuestionAnswerComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "injectables/ValidatorService.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "value",
        {
          _index: 147,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "injectables/FileHelpService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/QuestionAnswer.html": {},
            "classes/Settings.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "value.tolowercase",
        {
          _index: 570,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "values",
        {
          _index: 252,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "var",
        {
          _index: 191,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      ["variable", { _index: 1498, title: {}, body: { "coverage.html": {} } }],
      [
        "variables",
        {
          _index: 1621,
          title: { "miscellaneous/variables.html": {} },
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "version",
        {
          _index: 590,
          title: {},
          body: {
            "classes/Hud.html": {},
            "components/HudComponent.html": {},
            "changelog.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["view", { _index: 1162, title: {}, body: { "changelog.html": {} } }],
      [
        "viewchild",
        {
          _index: 435,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/SetupComponent.html": {},
          },
        },
      ],
      [
        "viewchild('folderupload",
        {
          _index: 426,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "viewchild('path",
        {
          _index: 950,
          title: {},
          body: { "components/SetupComponent.html": {} },
        },
      ],
      [
        "visible",
        {
          _index: 990,
          title: {},
          body: {
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
          },
        },
      ],
      ["visual", { _index: 1316, title: {}, body: { "changelog.html": {} } }],
      [
        "vita",
        {
          _index: 1946,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "void",
        {
          _index: 390,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "volcano",
        {
          _index: 1806,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "volume",
        {
          _index: 500,
          title: {},
          body: {
            "components/HitsoundComponent.html": {},
            "classes/Settings.html": {},
            "classes/UploadChangeName.html": {},
          },
        },
      ],
      [
        "volumechange",
        {
          _index: 374,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "volumes",
        {
          _index: 419,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "vow",
        {
          _index: 1950,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "vtf",
        {
          _index: 857,
          title: {},
          body: {
            "classes/Settings.html": {},
            "classes/TfWeapons.html": {},
            "changelog.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "wanga",
        {
          _index: 2009,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "want",
        {
          _index: 311,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "warn",
        {
          _index: 462,
          title: {},
          body: { "components/HitsoundComponent.html": {} },
        },
      ],
      [
        "warning",
        {
          _index: 797,
          title: {},
          body: { "components/MultipleWarningComponent.html": {} },
        },
      ],
      [
        "warning'},{'name",
        {
          _index: 199,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "warning.component",
        {
          _index: 67,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
          },
        },
      ],
      [
        "warning.component.html",
        {
          _index: 799,
          title: {},
          body: { "components/MultipleWarningComponent.html": {} },
        },
      ],
      [
        "warning.component.scss",
        {
          _index: 798,
          title: {},
          body: { "components/MultipleWarningComponent.html": {} },
        },
      ],
      [
        "warning.component.ts",
        {
          _index: 796,
          title: {},
          body: {
            "components/MultipleWarningComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "warning.component.ts:11",
        {
          _index: 800,
          title: {},
          body: { "components/MultipleWarningComponent.html": {} },
        },
      ],
      [
        "warning/multiple",
        {
          _index: 66,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/HitsoundComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["warranties", { _index: 1593, title: {}, body: { "license.html": {} } }],
      ["warranty", { _index: 1588, title: {}, body: { "license.html": {} } }],
      [
        "warrior's",
        {
          _index: 1868,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["wav", { _index: 1541, title: {}, body: { "index.html": {} } }],
      ["way", { _index: 1338, title: {}, body: { "changelog.html": {} } }],
      [
        "weapon",
        {
          _index: 121,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "classes/TfWeapons.html": {},
            "classes/WeaponData.html": {},
          },
        },
      ],
      [
        "weaponclass",
        {
          _index: 1038,
          title: {},
          body: {
            "classes/TfWeapons.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "weaponclasses",
        {
          _index: 142,
          title: {},
          body: { "classes/CrosshairSelected.html": {} },
        },
      ],
      [
        "weapondata",
        {
          _index: 1083,
          title: { "classes/WeaponData.html": {} },
          body: {
            "classes/WeaponData.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "weapons",
        {
          _index: 154,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "classes/TfWeapons.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "weaponsaffected",
        {
          _index: 143,
          title: {},
          body: {
            "classes/CrosshairSelected.html": {},
            "classes/TfWeapons.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "weaponssoundscomponent",
        {
          _index: 19,
          title: { "components/WeaponsSoundsComponent.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "web",
        {
          _index: 239,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "changelog.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "webframe",
        {
          _index: 222,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "websecurity",
        { _index: 1455, title: {}, body: { "changelog.html": {} } },
      ],
      [
        "whether",
        {
          _index: 244,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "classes/SnackBarMessage.html": {},
            "injectables/SnackService.html": {},
            "license.html": {},
          },
        },
      ],
      [
        "widowmaker",
        {
          _index: 1924,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "width",
        {
          _index: 182,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
          },
        },
      ],
      [
        "win",
        {
          _index: 803,
          title: {},
          body: {
            "components/MultipleWarningComponent.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "window",
        {
          _index: 324,
          title: {},
          body: {
            "injectables/ElectronService.html": {},
            "changelog.html": {},
          },
        },
      ],
      [
        "window.addeventlistener('focus",
        {
          _index: 915,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "window.focus",
        {
          _index: 919,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "window.process",
        {
          _index: 325,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "window.process.type",
        {
          _index: 326,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "window.removealllisteners",
        {
          _index: 920,
          title: {},
          body: { "components/SettingsComponent.html": {} },
        },
      ],
      [
        "window.require",
        {
          _index: 285,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "window.require('appdata",
        {
          _index: 279,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "window.require('child_process",
        {
          _index: 271,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "window.require('electron').dialog",
        {
          _index: 269,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "window.require('electron').ipcrenderer",
        {
          _index: 265,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "window.require('electron').webframe",
        {
          _index: 267,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "window.require('fs",
        {
          _index: 273,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "window.require('http",
        {
          _index: 275,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "window.require('https",
        {
          _index: 277,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "window.require('path",
        {
          _index: 281,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      [
        "winger",
        {
          _index: 1718,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "winger/pocket",
        {
          _index: 1717,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["without", { _index: 1562, title: {}, body: { "license.html": {} } }],
      ["wont", { _index: 1383, title: {}, body: { "changelog.html": {} } }],
      ["wording", { _index: 1218, title: {}, body: { "changelog.html": {} } }],
      [
        "work",
        {
          _index: 293,
          title: {},
          body: { "injectables/ElectronService.html": {} },
        },
      ],
      ["workflow", { _index: 1467, title: {}, body: { "changelog.html": {} } }],
      [
        "workflows",
        { _index: 1386, title: {}, body: { "changelog.html": {} } },
      ],
      ["works", { _index: 1339, title: {}, body: { "changelog.html": {} } }],
      [
        "wrangler",
        {
          _index: 1930,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "wranglers",
        {
          _index: 1929,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "wrap",
        {
          _index: 1721,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "wrench",
        {
          _index: 1907,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "yes",
        {
          _index: 207,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "injectables/SnackService.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
          },
        },
      ],
      [
        "yesno",
        {
          _index: 446,
          title: { "classes/YesNo.html": {} },
          body: {
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "classes/YesNo.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "yesnocomponent",
        {
          _index: 20,
          title: { "components/YesNoComponent.html": {} },
          body: {
            "modules/AppModule.html": {},
            "components/DashboardComponent.html": {},
            "components/HitsoundComponent.html": {},
            "components/HudComponent.html": {},
            "components/MultipleWarningComponent.html": {},
            "components/QuestionAnswerComponent.html": {},
            "components/SettingsComponent.html": {},
            "components/SetupComponent.html": {},
            "components/UploadChangeNameComponent.html": {},
            "components/WeaponsSoundsComponent.html": {},
            "components/YesNoComponent.html": {},
            "changelog.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "zatoichi",
        {
          _index: 1749,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "zone.js",
        { _index: 1534, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "zoom",
        {
          _index: 24,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
    ],
    pipeline: ["stemmer"],
  },
  store: {
    "modules/AppModule.html": {
      url: "modules/AppModule.html",
      title: "module - AppModule",
      body: "\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCrosshairsComponent\n\nCrosshairsComponent\n\nAppModule -->\n\nCrosshairsComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nHitsoundComponent\n\nHitsoundComponent\n\nAppModule -->\n\nHitsoundComponent->AppModule\n\n\n\n\n\nHudComponent\n\nHudComponent\n\nAppModule -->\n\nHudComponent->AppModule\n\n\n\n\n\nMultipleWarningComponent\n\nMultipleWarningComponent\n\nAppModule -->\n\nMultipleWarningComponent->AppModule\n\n\n\n\n\nQuestionAnswerComponent\n\nQuestionAnswerComponent\n\nAppModule -->\n\nQuestionAnswerComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nSetupComponent\n\nSetupComponent\n\nAppModule -->\n\nSetupComponent->AppModule\n\n\n\n\n\nUploadChangeNameComponent\n\nUploadChangeNameComponent\n\nAppModule -->\n\nUploadChangeNameComponent->AppModule\n\n\n\n\n\nWeaponsSoundsComponent\n\nWeaponsSoundsComponent\n\nAppModule -->\n\nWeaponsSoundsComponent->AppModule\n\n\n\n\n\nYesNoComponent\n\nYesNoComponent\n\nAppModule -->\n\nYesNoComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CrosshairsComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            HitsoundComponent\n                        \n                        \n                            HudComponent\n                        \n                        \n                            MultipleWarningComponent\n                        \n                        \n                            QuestionAnswerComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            SetupComponent\n                        \n                        \n                            UploadChangeNameComponent\n                        \n                        \n                            WeaponsSoundsComponent\n                        \n                        \n                            YesNoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_SELECT_CONFIG } from '@angular/material/select';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// NG Translate\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { CrosshairsComponent } from './dashboard/crosshairs/crosshairs.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HitsoundComponent } from './dashboard/hitsound/hitsound.component';\nimport { MultipleWarningComponent } from './dashboard/hitsound/multiple-warning/multiple-warning.component';\nimport { UploadChangeNameComponent } from './dashboard/hitsound/upload-change-name/upload-change-name.component';\nimport { HudComponent } from './dashboard/hud/hud.component';\nimport { SettingsComponent } from './dashboard/settings/settings.component';\nimport { WeaponsSoundsComponent } from './dashboard/weapons-sounds/weapons-sounds.component';\nimport { QuestionAnswerComponent } from './dialogs/question-answer/question-answer.component';\nimport { YesNoComponent } from './dialogs/yes-no/yes-no.component';\nimport { MaterialModule } from './material';\nimport { SetupComponent } from './setup/setup.component';\n\n/** AoT requires an exported function for factories */\nconst httpLoaderFactory = (http: HttpClient): TranslateHttpLoader => new TranslateHttpLoader(http, './assets/i18n/', '.json');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HudComponent,\n    HitsoundComponent,\n    QuestionAnswerComponent,\n    YesNoComponent,\n    CrosshairsComponent,\n    WeaponsSoundsComponent,\n    MultipleWarningComponent,\n    SetupComponent,\n    UploadChangeNameComponent,\n    SettingsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    CoreModule,\n    MaterialModule,\n    AppRoutingModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: MAT_SELECT_CONFIG, useValue: { disableOptionCentering: true }\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/AppRoutingModule.html": {
      url: "modules/AppRoutingModule.html",
      title: "module - AppRoutingModule",
      body: "\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CrosshairsComponent } from './dashboard/crosshairs/crosshairs.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HitsoundComponent } from './dashboard/hitsound/hitsound.component';\nimport { HudComponent } from './dashboard/hud/hud.component';\nimport { SettingsComponent } from './dashboard/settings/settings.component';\nimport { WeaponsSoundsComponent } from './dashboard/weapons-sounds/weapons-sounds.component';\nimport { SetupComponent } from './setup/setup.component';\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    children: [\n      {\n        path: 'hud',\n        component: HudComponent\n      },\n      {\n        path: 'hitsound',\n        component: HitsoundComponent\n      },\n      {\n        path: 'crosshairs',\n        component: CrosshairsComponent\n      },\n      {\n        path: 'weapon-sounds',\n        component: WeaponsSoundsComponent\n      },\n      {\n        path: 'settings',\n        component: SettingsComponent\n      }\n    ]\n  },\n  {\n    path: 'setup',\n    component: SetupComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }),\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/CoreModule.html": {
      url: "modules/CoreModule.html",
      title: "module - CoreModule",
      body: "\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/CrosshairSelected.html": {
      url: "classes/CrosshairSelected.html",
      title: "class - CrosshairSelected",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrosshairSelected\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/crosshairSelected.ts\n        \n\n\n            \n                Description\n            \n            \n                Crosshair selected\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classes\n                            \n                            \n                                names\n                            \n                            \n                                slots\n                            \n                            \n                                weaponClasses\n                            \n                            \n                                weaponsAffected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/crosshairSelected.ts:8\n                        \n                    \n\n            \n                \n                    Classes  of crosshair selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        names\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/crosshairSelected.ts:19\n                        \n                    \n\n            \n                \n                    Names  of crosshair selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slots\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/crosshairSelected.ts:23\n                        \n                    \n\n            \n                \n                    Slots  of crosshair selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weaponClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/crosshairSelected.ts:15\n                        \n                    \n\n            \n                \n                    Weapon classes of crosshair selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weaponsAffected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/crosshairSelected.ts:27\n                        \n                    \n\n            \n                \n                    Weapons affected of crosshair selected\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CrosshairSelected {\n    /**\n     * Classes  of crosshair selected\n     */\n    classes: string[] = [];\n    /**\n     * Weapon classes of crosshair selected\n     */\n    /**\n     * Weapon classes of crosshair selected\n     */\n    weaponClasses: string[] = [];\n    /**\n     * Names  of crosshair selected\n     */\n    names: string[] = [];\n    /**\n     * Slots  of crosshair selected\n     */\n    slots: string[] = [];\n    /**\n     * Weapons affected of crosshair selected\n     */\n    weaponsAffected: string[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/DashboardComponent.html": {
      url: "components/DashboardComponent.html",
      title: "component - DashboardComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dashboard component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                app\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:12\n                            \n                        \n\n                \n                    \n                            Creates an instance of dashboard component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AppComponent\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:20\n                        \n                    \n\n            \n                \n                    AppComponent\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppComponent } from '../app.component';\n\n/**\n * Dashboard component\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n\n  /**\n   * Creates an instance of dashboard component.\n   *\n   * @param app AppComponent\n   */\n  constructor(\n    public app: AppComponent\n  ) { }\n}\n\n    \n\n    \n        \n    \n        \n            \n                Huds\n                Kill/hitsounds\n                Crosshairs\n                Weapon\n                    sounds\n                \n                Settings\n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                button {\n  width: 100%;\n  margin-bottom: .5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Huds                Kill/hitsounds                Crosshairs                Weapon                    sounds                                Settings                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrosshairsComponent', 'selector': 'app-crosshairs'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HitsoundComponent', 'selector': 'app-hitsound'},{'name': 'HudComponent', 'selector': 'app-hud'},{'name': 'MultipleWarningComponent', 'selector': 'app-multiple-warning'},{'name': 'QuestionAnswerComponent', 'selector': 'app-question-answer'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SetupComponent', 'selector': 'app-setup'},{'name': 'UploadChangeNameComponent', 'selector': 'app-upload-change-name'},{'name': 'WeaponsSoundsComponent', 'selector': 'app-weapons-sounds'},{'name': 'YesNoComponent', 'selector': 'app-yes-no'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/ElectronService.html": {
      url: "injectables/ElectronService.html",
      title: "injectable - ElectronService",
      body: "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ElectronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/electron/electron.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Electron service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appData\n                            \n                            \n                                childProcess\n                            \n                            \n                                dialog\n                            \n                            \n                                fs\n                            \n                            \n                                http\n                            \n                            \n                                https\n                            \n                            \n                                ipcRenderer\n                            \n                            \n                                path\n                            \n                            \n                                webFrame\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isElectron\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/electron/electron.service.ts:54\n                            \n                        \n\n                \n                    \n                            Creates an instance of electron service.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appData\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/electron/electron.service.ts:38\n                        \n                    \n\n            \n                \n                    App data of electron service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        childProcess\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/electron/electron.service.ts:30\n                        \n                    \n\n            \n                \n                    Child process of electron service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialog\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/electron/electron.service.ts:46\n                        \n                    \n\n            \n                \n                    Dialog electron service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fs\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/electron/electron.service.ts:34\n                        \n                    \n\n            \n                \n                    Fs of electron service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        http\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/electron/electron.service.ts:50\n                        \n                    \n\n            \n                \n                    Http of electron service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        https\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/electron/electron.service.ts:54\n                        \n                    \n\n            \n                \n                    Https of electron service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ipcRenderer\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/electron/electron.service.ts:22\n                        \n                    \n\n            \n                \n                    Ipc renderer of electron service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/electron/electron.service.ts:42\n                        \n                    \n\n            \n                \n                    Path of electron service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webFrame\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/electron/electron.service.ts:26\n                        \n                    \n\n            \n                \n                    Web frame of electron service\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isElectron\n                    \n                \n\n                \n                    \n                        getisElectron()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/electron/electron.service.ts:90\n                                \n                            \n                    \n                        \n                                Gets whether is electron\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { getAppDataPath } from 'appdata-path';\nimport * as childProcess from 'child_process';\n// If you import a module but never use any of the imported values other than as TypeScript types,\n// the resulting javascript file will look as if you never imported the module at all.\nimport { dialog, ipcRenderer, webFrame } from 'electron';\nimport * as fs from 'fs-extra';\nimport * as http from 'http';\nimport * as https from 'https';\nimport * as path from 'path';\n\n/**\n * Electron service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ElectronService {\n  /**\n   * Ipc renderer of electron service\n   */\n  ipcRenderer: typeof ipcRenderer;\n  /**\n   * Web frame of electron service\n   */\n  webFrame: typeof webFrame;\n  /**\n   * Child process of electron service\n   */\n  childProcess: typeof childProcess;\n  /**\n   * Fs of electron service\n   */\n  fs: typeof fs;\n  /**\n   * App data of electron service\n   */\n  appData: typeof getAppDataPath;\n  /**\n   * Path of electron service\n   */\n  path: typeof path;\n  /**\n   * Dialog electron service\n   */\n  dialog: typeof dialog;\n  /**\n   * Http of electron service\n   */\n  http: typeof http;\n  /**\n   * Https of electron service\n   */\n  https: typeof https;\n\n  /**\n   * Creates an instance of electron service.\n   */\n  constructor() {\n    // Conditional imports\n    if (this.isElectron) {\n      this.ipcRenderer = window.require('electron').ipcRenderer;\n      this.webFrame = window.require('electron').webFrame;\n      this.dialog = window.require('electron').dialog;\n\n      this.childProcess = window.require('child_process');\n      this.fs = window.require('fs-extra');\n      this.http = window.require('http');\n      this.https = window.require('https');\n      this.appData = window.require('appdata-path');\n      this.path = window.require('path');\n\n      // Notes :\n      // * A NodeJS's dependency imported with 'window.require' MUST BE present in `dependencies` of both `app/package.json`\n      // and `package.json (root folder)` in order to make it work here in Electron's Renderer process (src folder)\n      // because it will loaded at runtime by Electron.\n      // * A NodeJS's dependency imported with TS module import (ex: import { Dropbox } from 'dropbox') CAN only be present\n      // in `dependencies` of `package.json (root folder)` because it is loaded during build phase and does not need to be\n      // in the final bundle. Reminder : only if not used in Electron's Main process (app folder)\n\n      // If you want to use a NodeJS 3rd party deps in Renderer process,\n      // ipcRenderer.invoke can serve many common use cases.\n      // https://www.electronjs.org/docs/latest/api/ipc-renderer#ipcrendererinvokechannel-args\n    }\n  }\n\n  /**\n   * Gets whether is electron\n   */\n  get isElectron(): boolean {\n    return !!(window && window.process && window.process.type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/FileHelpService.html": {
      url: "injectables/FileHelpService.html",
      title: "injectable - FileHelpService",
      body: "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileHelpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/file-help.service.ts\n        \n\n\n            \n                Description\n            \n            \n                File Help Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(electron: ElectronService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/file-help.service.ts:10\n                            \n                        \n\n                \n                    \n                            Creates an instance of file help service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        electron\n                                                  \n                                                        \n                                                                        ElectronService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllFiles\n                        \n                    \n                \n            \n            \n                \ngetAllFiles(dirPath, arrayOfFiles: [])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/file-help.service.ts:28\n                \n            \n\n\n            \n                \n                    Gets all files\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    dirPath\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    arrayOfFiles\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        all files\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ElectronService } from '../core/services';\n\n/**\n * File Help Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileHelpService {\n\n  /**\n   * Creates an instance of file help service.\n   *\n   * @param electron\n   */\n  constructor(\n    private electron: ElectronService\n  ) { }\n\n  /**\n   * Gets all files\n   *\n   * @param dirPath\n   * @param [arrayOfFiles]\n   * @returns all files\n   */\n  getAllFiles(dirPath, arrayOfFiles = []): string[] {\n    const files = this.electron.fs.readdirSync(dirPath);\n\n    files.forEach(file => {\n      if (this.electron.fs.statSync(dirPath + '/' + file).isDirectory()) {\n        arrayOfFiles = this.getAllFiles(dirPath + '/' + file, arrayOfFiles);\n      } else {\n        arrayOfFiles.push(this.electron.path.join(dirPath, '/', file));\n      }\n    });\n\n    return arrayOfFiles;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/Hitsound.html": {
      url: "classes/Hitsound.html",
      title: "class - Hitsound",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hitsound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/hitsound.ts\n        \n\n\n            \n                Description\n            \n            \n                Hitsound\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hitsound.ts:8\n                        \n                    \n\n            \n                \n                    Name of hitsound\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hitsound.ts:12\n                        \n                    \n\n            \n                \n                    Path of hitsound\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Hitsound {\n    /**\n     * Name of hitsound\n     */\n    name: string;\n    /**\n     * Path of hitsound\n     */\n    path: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/HitsoundComponent.html": {
      url: "components/HitsoundComponent.html",
      title: "component - HitsoundComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  HitsoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/hitsound/hitsound.component.ts\n\n\n\n    \n        Description\n    \n    \n        Hitsound component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hitsound\n            \n\n            \n                styleUrls\n                ./hitsound.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./hitsound.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                app\n                            \n                            \n                                filteredOptions\n                            \n                            \n                                folderUpload\n                            \n                            \n                                hitsounds\n                            \n                            \n                                library\n                            \n                            \n                                localHitsounds\n                            \n                            \n                                myControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getNames\n                            \n                            \n                                    Private\n                                hitsoundFilter\n                            \n                            \n                                installHitsound\n                            \n                            \n                                installKillSound\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                play\n                            \n                            \n                                playFile\n                            \n                            \n                                remove\n                            \n                            \n                                removeFile\n                            \n                            \n                                rename\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                upload\n                            \n                            \n                                volumeChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(electron: ElectronService, app: AppComponent, dialog: MatDialog, snack: SnackService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/hitsound/hitsound.component.ts:52\n                            \n                        \n\n                \n                    \n                            Creates an instance of hitsound component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        electron\n                                                  \n                                                        \n                                                                        ElectronService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AppComponent\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                        SnackService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNames(exclude: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:363\n                \n            \n\n\n            \n                \n                    Gets names\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        names\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hitsoundFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    hitsoundFilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:351\n                \n            \n\n\n            \n                \n                    Hitsounds filter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Hitsound[]\n\n                    \n                    \n                        filter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        installHitsound\n                        \n                    \n                \n            \n            \n                \ninstallHitsound(_hitsound: Hitsound)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:286\n                \n            \n\n\n            \n                \n                    Installs hitsound\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _hitsound\n                                    \n                                                Hitsound\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        installKillSound\n                        \n                    \n                \n            \n            \n                \ninstallKillSound(_killsound: Hitsound)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:319\n                \n            \n\n\n            \n                \n                    Installs kill sound\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _killsound\n                                    \n                                                Hitsound\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:75\n                \n            \n\n\n            \n                \n                    on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay(_hitsound: Hitsound)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:254\n                \n            \n\n\n            \n                \n                    Plays hitsound\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _hitsound\n                                    \n                                                Hitsound\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playFile\n                        \n                    \n                \n            \n            \n                \nplayFile(file: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:245\n                \n            \n\n\n            \n                \n                    Plays file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(_hitsound: Hitsound)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:202\n                \n            \n\n\n            \n                \n                    Removes hitsound\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _hitsound\n                                    \n                                                Hitsound\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile(file: string, _name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:236\n                \n            \n\n\n            \n                \n                    Removes file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rename\n                        \n                    \n                \n            \n            \n                \nrename(_hitsound: Hitsound)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:166\n                \n            \n\n\n            \n                \n                    Renames hitsound\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _hitsound\n                                    \n                                                Hitsound\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:97\n                \n            \n\n\n            \n                \n                    Updates hitsound component\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:113\n                \n            \n\n\n            \n                \n                    Uploads hitsound component\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volumeChange\n                        \n                    \n                \n            \n            \n                \nvolumeChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/hitsound.component.ts:277\n                \n            \n\n\n            \n                \n                    Volumes change\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hitsound/hitsound.component.ts:64\n                        \n                    \n\n            \n                \n                    AppComponent\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hitsound/hitsound.component.ts:52\n                        \n                    \n\n            \n                \n                    Filtered options of hitsound component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        folderUpload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('folderUpload')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hitsound/hitsound.component.ts:30\n                        \n                    \n\n            \n                \n                    folder upload ElementRef\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hitsounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Hitsound[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hitsound/hitsound.component.ts:43\n                        \n                    \n\n            \n                \n                    Hitsounds  of hitsound component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        library\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Hitsound[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hitsound/hitsound.component.ts:39\n                        \n                    \n\n            \n                \n                    Library  of hitsound component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localHitsounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hitsound/hitsound.component.ts:35\n                        \n                    \n\n            \n                \n                    Local hitsounds of hitsound component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hitsound/hitsound.component.ts:48\n                        \n                    \n\n            \n                \n                    My control of hitsound component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { firstValueFrom, map, Observable, startWith } from 'rxjs';\nimport { AppComponent } from '../../app.component';\nimport { ElectronService } from '../../core/services';\nimport { QuestionAnswerComponent } from '../../dialogs/question-answer/question-answer.component';\nimport { YesNoComponent } from '../../dialogs/yes-no/yes-no.component';\nimport { Hitsound } from '../../models/hitsound';\nimport { QuestionAnswer } from '../../models/questionAnswer';\nimport { UploadChangeName } from '../../models/uploadChangeName';\nimport { YesNo } from '../../models/yesNo';\nimport { SnackService } from '../../services/snack.service';\nimport { MultipleWarningComponent } from './multiple-warning/multiple-warning.component';\nimport { UploadChangeNameComponent } from './upload-change-name/upload-change-name.component';\n\n/**\n * Hitsound component\n */\n@Component({\n  selector: 'app-hitsound',\n  templateUrl: './hitsound.component.html',\n  styleUrls: ['./hitsound.component.scss']\n})\nexport class HitsoundComponent implements OnInit {\n\n  /**\n   * folder upload `ElementRef`\n   */\n  @ViewChild('folderUpload') folderUpload: ElementRef;\n\n  /**\n   * Local hitsounds of hitsound component\n   */\n  localHitsounds: string;\n  /**\n   * Library  of hitsound component\n   */\n  library: Hitsound[];\n  /**\n   * Hitsounds  of hitsound component\n   */\n  hitsounds: Hitsound[];\n\n  /**\n   * My control of hitsound component\n   */\n  myControl = new FormControl();\n  /**\n   * Filtered options of hitsound component\n   */\n  filteredOptions: Observable;\n\n  /**\n   * Creates an instance of hitsound component.\n   *\n   * @param electron\n   * @param app AppComponent\n   * @param dialog\n   * @param snack\n   */\n  constructor(\n    private electron: ElectronService,\n    public app: AppComponent,\n    private dialog: MatDialog,\n    private snack: SnackService\n  ) {\n    this.localHitsounds = `${this.app.settings.libraryPath}\\\\hitsounds`;\n    this.electron.fs.ensureDir(this.localHitsounds);\n  }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n    // update info in case user changed shit when TF2Tools was open\n    this.app.update('hitsounds');\n    this.update();\n\n    // check if there is multiple hitsounds installed and warn user\n    if (this.app.hitsounds.length > 1) {\n      this.dialog.open(MultipleWarningComponent, {\n        width: '450px',\n        data: this.app.hitsounds\n      });\n    }\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this.hitsoundFilter(value)),\n    );\n  }\n\n  /**\n   * Updates hitsound component\n   */\n  async update() {\n    this.library = [];\n    this.electron.fs.readdirSync(this.localHitsounds).forEach(file => {\n      const name = file.split('.');\n      name.pop();\n      const h = { name: name.toString(), path: `${this.localHitsounds}\\\\${name}.wav` };\n      this.library.push(h);\n    });\n    this.myControl.setValue('');\n  }\n\n  /**\n   * Uploads hitsound component\n   *\n   * @param event\n   */\n  async upload(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const files: File[] = Array.from(target.files);\n\n    for (const sound of files) {\n      if (sound.name.includes('.wav')) {\n        const name = sound.name.replace('.wav', '');\n        const dest = `${this.localHitsounds}\\\\${sound.name}`;\n        const exist = this.electron.fs.existsSync(dest);\n        await this.update();\n\n        if (name === 'hitsound' || name === 'killsound' || exist) {\n          const dialogRef = this.dialog.open(UploadChangeNameComponent, {\n            width: '450px',\n            data: {\n              title: exist ? 'We found a sound by that name' : 'Give the sound a name',\n              cant: this.getNames(),\n              file: sound,\n              volume: this.app.settings.volume\n            } as UploadChangeName\n          });\n\n          await firstValueFrom(dialogRef.afterClosed())\n            .then((newName) => {\n              if (typeof newName === 'string') {\n                this.electron.fs.copy(sound.path, `${this.localHitsounds}\\\\${newName}.wav`)\n                  .then(() => {\n                    this.snack.show(`${name} was added`);\n                    this.update();\n                  })\n                  .catch(err => this.app.error(err));\n              }\n            });\n        } else {\n          this.electron.fs.copy(sound.path, dest)\n            .then(() => {\n              this.snack.show(`${name} was added`);\n              this.update();\n            })\n            .catch(err => this.app.error(err));\n        }\n\n      }\n    }\n\n    this.folderUpload.nativeElement.value = null;\n  }\n\n  /**\n   * Renames hitsound\n   *\n   * @param _hitsound\n   */\n  rename(_hitsound: Hitsound) {\n    if (this.electron.fs.existsSync(_hitsound.path)) {\n\n      const dialogRef = this.dialog.open(QuestionAnswerComponent, {\n        width: '450px',\n        data: {\n          question: `Rename ${_hitsound.name}`,\n          subQuestion: '',\n          cant: this.getNames(_hitsound.name)\n        } as QuestionAnswer\n      });\n\n      dialogRef.afterClosed().subscribe(r => {\n        if (typeof r === 'string') {\n          const path = _hitsound.path.split('\\\\');\n          path.pop();\n          this.app.log.next(`Renaming hitsound: *RENAME* \"${_hitsound.path}\" => \"${path.join('\\\\')}\\\\${r}.wav\"`);\n          this.electron.fs.rename(_hitsound.path, `${path.join('\\\\')}\\\\${r}.wav`)\n            .then(() => {\n              this.snack.show(`Renamed \"${_hitsound.name}\" to \"${r}\"`);\n              this.update();\n            })\n            .catch(err => this.app.error(err));\n        }\n      });\n\n    } else {\n      this.snack.show(`${_hitsound.name} could not be found?`);\n    }\n  }\n\n  /**\n   * Removes hitsound\n   *\n   * @param _hitsound\n   */\n  remove(_hitsound: Hitsound) {\n\n    const info = new YesNo();\n    info.question = `Remove ${_hitsound.name}?`;\n    info.subQuestion = `Are you sure you want to remove ${_hitsound.name}? This cannot be undone!`;\n\n    const dialogRef = this.dialog.open(YesNoComponent, {\n      width: '450px',\n      data: info\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.app.log.next(`Remove hitsound *DELETE* \"${_hitsound.path}\"`);\n        this.electron.fs.remove(_hitsound.path)\n          .then(() => {\n            this.snack.show(`${_hitsound.name} was removed`);\n            if (_hitsound.name === 'hitsound' || _hitsound.name === 'killsound') {\n              this.app.update('hitsounds');\n            } else {\n              this.update();\n            }\n          })\n          .catch(err => this.app.error(err));\n      }\n    });\n  }\n\n  /**\n   * Removes file\n   *\n   * @param file\n   * @param _name\n   */\n  removeFile(file: string, _name: string): void {\n    this.remove({ name: _name, path: file });\n  }\n\n  /**\n   * Plays file\n   *\n   * @param file\n   */\n  playFile(file: string): void {\n    this.play({ name: 'hitsound', path: file });\n  }\n\n  /**\n   * Plays hitsound\n   *\n   * @param _hitsound\n   */\n  play(_hitsound: Hitsound): void {\n\n    if (_hitsound.name === 'hitsound') {\n      const p = _hitsound.path;\n      _hitsound.path = `${this.app.appTemp}\\\\${this.app.generateRandomString(8)}.wav`;\n      this.electron.fs.copySync(p, _hitsound.path);\n    }\n\n    const audio = new Audio(_hitsound.path);\n    audio.volume = this.app.settings.volume / 100;\n    audio.load();\n    audio.play();\n\n    if (_hitsound.name === 'hitsound') {\n      audio.addEventListener('ended', end => {\n        this.electron.fs.removeSync(_hitsound.path);\n      });\n    }\n  }\n\n  /**\n   * Volumes change\n   */\n  volumeChange() {\n    this.app.settingsUpdate.next(this.app.settings);\n  }\n\n  /**\n   * Installs hitsound\n   *\n   * @param _hitsound\n   */\n  installHitsound(_hitsound: Hitsound): void {\n    const path = this.app.hitsounds[0];\n    if (path !== undefined) {\n      this.app.log.next(`Installing hitsound: *COPY* \"${_hitsound.path}\" => \"${path}\"`);\n      this.electron.fs.copy(_hitsound.path, path, { overwrite: true })\n        .then(() => {\n          this.snack.show(`Hitsound ${_hitsound.name} was installed`);\n          this.app.update('hitsounds');\n        })\n        .catch(err => {\n          this.app.error(err);\n        });\n    } else {\n      const defaultPath = `${this.app.settings.customPath}\\\\mycustomstuff\\\\sound\\\\ui`;\n      this.electron.fs.ensureDir(defaultPath)\n        .then(() => {\n          this.app.log.next(`Installing hitsound: *COPY* \"${_hitsound.path}\" => \"${defaultPath}\\\\hitsound.wav\"`);\n          this.electron.fs.copy(_hitsound.path, `${defaultPath}\\\\hitsound.wav`)\n            .then(() => {\n              this.snack.show(`Hitsound ${_hitsound.name} was installed`);\n              this.app.update('hitsounds');\n            })\n            .catch(err => this.app.error(err));\n        })\n        .catch(err => this.app.error(err));\n    }\n  }\n\n  /**\n   * Installs kill sound\n   *\n   * @param _killsound\n   */\n  installKillSound(_killsound: Hitsound): void {\n    const path = this.app.killsounds[0];\n    if (path !== undefined) {\n      this.app.log.next(`Installing killsound: *COPY* \"${_killsound.path}\" => \"${path}\"`);\n      this.electron.fs.copy(_killsound.path, path, { overwrite: true })\n        .then(() => {\n          this.snack.show(`Killsound ${_killsound.name} was installed`);\n          this.app.update('hitsounds');\n        })\n        .catch(err => this.app.error(err));\n    } else {\n      const defaultPath = `${this.app.settings.customPath}\\\\mycustomstuff\\\\sound\\\\ui`;\n      this.electron.fs.ensureDir(defaultPath)\n        .then(() => {\n          this.app.log.next(`Installing killsound: *COPY* \"${_killsound.path}\" => \"${defaultPath}\\\\killsound.wav\"`);\n          this.electron.fs.copy(_killsound.path, `${defaultPath}\\\\killsound.wav`)\n            .then(() => {\n              this.snack.show(`Killsound ${_killsound.name} was installed`);\n              this.app.update('hitsounds');\n            })\n            .catch(err => this.app.error(err));\n        })\n        .catch(err => this.app.error(err));\n    }\n  }\n\n  /**\n   * Hitsounds filter\n   *\n   * @param value\n   * @returns filter\n   */\n  private hitsoundFilter(value: string): Hitsound[] {\n    const filterValue = value.toLowerCase();\n\n    return this.library.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n  /**\n   * Gets names\n   *\n   * @param [exclude]\n   * @returns names\n   */\n  private getNames(exclude: string = null): string[] {\n    const names: string[] = [];\n    this.library.forEach(a => {\n      if (a.name !== exclude) {\n        names.push(a.name);\n      }\n    });\n    return names;\n  }\n\n}\n\n    \n\n    \n        \n    Hitsounds\n    \n        Volume: {{app.settings.volume}}\n\n        \n        \n\n    \n    \n        Add sounds to your library\n        \n    \n\n\nInstalled hitsound{{app.hitsounds.length > 1 ? 's' : ''}}\n 0\">\n    \n        \n            hitsound\n            \n                delete\n            \n            \n                play_arrow\n            \n        \n    \n\n\nInstalled killsound{{app.killsounds.length > 1 ? 's' : ''}}\n 0\">\n    \n        \n            killsound\n            \n                delete\n            \n            \n                play_arrow\n            \n        \n    \n\n\nLibrary\n\n\n    Search\n    \n    \n        \n            {{option.name}}\n        \n    \n\n\n\n    \n        \n            {{ sound.name }}\n            \n                delete\n            \n            \n                drive_file_rename_outline\n            \n            \n                play_arrow\n            \n            \n                get_app\n            \n            \n                get_app\n            \n        \n    \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./hitsound.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Hitsounds            Volume: {{app.settings.volume}}                                Add sounds to your library            Installed hitsound{{app.hitsounds.length > 1 ? \\'s\\' : \\'\\'}} 0\">                        hitsound                            delete                                        play_arrow                        Installed killsound{{app.killsounds.length > 1 ? \\'s\\' : \\'\\'}} 0\">                        killsound                            delete                                        play_arrow                        Library    Search                            {{option.name}}                                    {{ sound.name }}                            delete                                        drive_file_rename_outline                                        play_arrow                                        get_app                                        get_app                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrosshairsComponent', 'selector': 'app-crosshairs'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HitsoundComponent', 'selector': 'app-hitsound'},{'name': 'HudComponent', 'selector': 'app-hud'},{'name': 'MultipleWarningComponent', 'selector': 'app-multiple-warning'},{'name': 'QuestionAnswerComponent', 'selector': 'app-question-answer'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SetupComponent', 'selector': 'app-setup'},{'name': 'UploadChangeNameComponent', 'selector': 'app-upload-change-name'},{'name': 'WeaponsSoundsComponent', 'selector': 'app-weapons-sounds'},{'name': 'YesNoComponent', 'selector': 'app-yes-no'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HitsoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/Hud.html": {
      url: "classes/Hud.html",
      title: "class - Hud",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hud\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/hud.ts\n        \n\n\n            \n                Description\n            \n            \n                Hud\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                folderName\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        folderName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hud.ts:12\n                        \n                    \n\n            \n                \n                    Folder name of hud\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hud.ts:8\n                        \n                    \n\n            \n                \n                    Name  of hud\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hud.ts:20\n                        \n                    \n\n            \n                \n                    Path  of hud\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hud.ts:16\n                        \n                    \n\n            \n                \n                    Version  of hud\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Hud {\n    /**\n     * Name  of hud\n     */\n    name: string;\n    /**\n     * Folder name of hud\n     */\n    folderName: string;\n    /**\n     * Version  of hud\n     */\n    version: string;\n    /**\n     * Path  of hud\n     */\n    path: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/HudComponent.html": {
      url: "components/HudComponent.html",
      title: "component - HudComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  HudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/hud/hud.component.ts\n\n\n\n    \n        Description\n    \n    \n        Hud\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hud\n            \n\n            \n                styleUrls\n                ./hud.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./hud.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentHuds\n                            \n                            \n                                filteredOptions\n                            \n                            \n                                folderUpload\n                            \n                            \n                                hudsInstalled\n                            \n                            \n                                library\n                            \n                            \n                                localHuds\n                            \n                            \n                                myControl\n                            \n                            \n                                notInLibrary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                    Private\n                                getNames\n                            \n                            \n                                    Private\n                                hudFilter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                            \n                                rename\n                            \n                            \n                                replace\n                            \n                            \n                                uninstall\n                            \n                            \n                                update\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(electron: ElectronService, app: AppComponent, dialog: MatDialog, snack: SnackService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/hud/hud.component.ts:57\n                            \n                        \n\n                \n                    \n                            Creates an instance of hud component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        electron\n                                                  \n                                                        \n                                                                        ElectronService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                        SnackService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(_hud: Hud)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hud/hud.component.ts:157\n                \n            \n\n\n            \n                \n                    Adds hud\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _hud\n                                    \n                                                Hud\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNames(exclude: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hud/hud.component.ts:327\n                \n            \n\n\n            \n                \n                    Gets names\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        names\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hudFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    hudFilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hud/hud.component.ts:309\n                \n            \n\n\n            \n                \n                    Huds filter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Hud[]\n\n                    \n                    \n                        filter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hud/hud.component.ts:82\n                \n            \n\n\n            \n                \n                    on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(_hud: Hud)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hud/hud.component.ts:198\n                \n            \n\n\n            \n                \n                    Removes hud\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _hud\n                                    \n                                                Hud\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rename\n                        \n                    \n                \n            \n            \n                \nrename(_hud: Hud)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hud/hud.component.ts:266\n                \n            \n\n\n            \n                \n                    Renames hud\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _hud\n                                    \n                                                Hud\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replace\n                        \n                    \n                \n            \n            \n                \nreplace(_hud: Hud)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hud/hud.component.ts:299\n                \n            \n\n\n            \n                \n                    Replaces hud component\nTODO: replace the installed hud with _hud\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _hud\n                                    \n                                                Hud\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uninstall\n                        \n                    \n                \n            \n            \n                \nuninstall(_hud: Hud)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hud/hud.component.ts:172\n                \n            \n\n\n            \n                \n                    Uninstalls hud\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _hud\n                                    \n                                                Hud\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hud/hud.component.ts:116\n                \n            \n\n\n            \n                \n                    Updates hud component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hud/hud.component.ts:228\n                \n            \n\n\n            \n                \n                    Uploads huds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentHuds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Hud[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hud/hud.component.ts:32\n                        \n                    \n\n            \n                \n                    Current huds of hud component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hud/hud.component.ts:57\n                        \n                    \n\n            \n                \n                    Filtered options of hud component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        folderUpload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('folderUpload')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hud/hud.component.ts:27\n                        \n                    \n\n            \n                \n                    Folder upload ElementRef\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hudsInstalled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hud/hud.component.ts:36\n                        \n                    \n\n            \n                \n                    Huds installed of hud component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        library\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Hud[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hud/hud.component.ts:40\n                        \n                    \n\n            \n                \n                    Library  of hud component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localHuds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hud/hud.component.ts:44\n                        \n                    \n\n            \n                \n                    Local huds of hud component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hud/hud.component.ts:53\n                        \n                    \n\n            \n                \n                    My control of hud component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notInLibrary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Hud[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hud/hud.component.ts:48\n                        \n                    \n\n            \n                \n                    Not in library of hud component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { map, Observable, startWith } from 'rxjs';\nimport { AppComponent } from '../../app.component';\nimport { ElectronService } from '../../core/services';\nimport { QuestionAnswerComponent } from '../../dialogs/question-answer/question-answer.component';\nimport { YesNoComponent } from '../../dialogs/yes-no/yes-no.component';\nimport { Hud } from '../../models/hud';\nimport { QuestionAnswer } from '../../models/questionAnswer';\nimport { YesNo } from '../../models/yesNo';\nimport { SnackService } from '../../services/snack.service';\n\n/**\n * Hud\n */\n@Component({\n  selector: 'app-hud',\n  templateUrl: './hud.component.html',\n  styleUrls: ['./hud.component.scss']\n})\nexport class HudComponent implements OnInit {\n\n  /**\n   * Folder upload `ElementRef`\n   */\n  @ViewChild('folderUpload') folderUpload: ElementRef;\n\n  /**\n   * Current huds of hud component\n   */\n  currentHuds: Hud[];\n  /**\n   * Huds installed of hud component\n   */\n  hudsInstalled: number;\n  /**\n   * Library  of hud component\n   */\n  library: Hud[];\n  /**\n   * Local huds of hud component\n   */\n  localHuds: string;\n  /**\n   * Not in library of hud component\n   */\n  notInLibrary: Hud[];\n\n  /**\n   * My control of hud component\n   */\n  myControl = new FormControl();\n  /**\n   * Filtered options of hud component\n   */\n  filteredOptions: Observable;\n\n  /**\n   * Creates an instance of hud component.\n   *\n   * @param electron\n   * @param app\n   * @param dialog\n   * @param snack\n   */\n  constructor(\n    private electron: ElectronService,\n    private app: AppComponent,\n    private dialog: MatDialog,\n    private snack: SnackService\n  ) {\n    this.localHuds = `${this.app.settings.libraryPath}\\\\huds`;\n    this.electron.fs.ensureDir(this.localHuds);\n  }\n\n  /**\n   * on init\n   *\n   * @description first we need to look for a folder with info file in, we will assume that is the current hud.\n   */\n  ngOnInit(): void {\n    this.update();\n\n    // temp, to move old files\n    if (this.library.length === 0) {\n      let oldPath = this.electron.appData('TF2Tools\\\\huds');\n      if (this.electron.fs.existsSync(oldPath)) {\n        this.snack.show('Moving your files to new library...', null, 5000);\n        this.app.log.next(`Trying to move files from \"${oldPath}\" => \"${this.localHuds}\"`);\n        this.electron.fs.move(oldPath, this.localHuds, { overwrite: true })\n          .then(() => {\n            oldPath = this.electron.appData('TF2Tools\\\\hitsounds');\n            if (this.electron.fs.existsSync(oldPath)) {\n              this.app.log.next(`Trying to move your hitsounds from \"${oldPath}\" => \"${this.app.settings.libraryPath}\\\\hitsounds\"`);\n              this.electron.fs.move(oldPath, `${this.app.settings.libraryPath}\\\\hitsounds`, { overwrite: true })\n                .then(() => {\n                  this.snack.show('Files was moved to new library');\n                  this.update();\n                });\n            }\n          });\n      }\n    }\n\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this.hudFilter(value)),\n    );\n  }\n\n  /**\n   * Updates hud component\n   */\n  update() {\n    this.library = [];\n    this.electron.fs.ensureDir(this.localHuds);\n\n    this.electron.fs.readdirSync(this.localHuds).forEach(customFiles => {\n      const info = this.localHuds + '/' + customFiles + '/info.vdf';\n      if (this.electron.fs.existsSync(info)) {\n        const data = this.electron.fs.readFileSync(info, { encoding: 'utf8', flag: 'r' }).split('\"');\n        const h = { name: data[1], folderName: customFiles, version: data[5], path: this.localHuds + '\\\\' + customFiles };\n        this.library.push(h);\n      }\n    });\n\n    this.hudsInstalled = 0;\n    this.currentHuds = [];\n    this.notInLibrary = [];\n    this.electron.fs.readdirSync(this.app.settings.customPath).forEach(customFiles => {\n      const info = this.app.settings.customPath + '/' + customFiles + '/info.vdf';\n      if (this.electron.fs.existsSync(info)) {\n        this.hudsInstalled++;\n\n        const data = this.electron.fs.readFileSync(info, { encoding: 'utf8', flag: 'r' }).split('\"');\n        const h = { name: data[1], folderName: customFiles, version: data[5], path: this.app.settings.customPath + '\\\\' + customFiles };\n        const l = { name: data[1], folderName: customFiles, version: data[5], path: this.localHuds + '\\\\' + customFiles };\n\n        this.currentHuds.push(h);\n\n        if (!this.electron.fs.existsSync(l.path)) {\n          this.notInLibrary.push(h);\n        }\n      }\n    });\n\n    this.myControl.setValue('');\n  }\n\n  /**\n   * Adds hud\n   *\n   * @param _hud\n   */\n  add(_hud: Hud) {\n    this.app.log.next(`Installing hud: *COPY* \"${_hud.path}\" => \"${this.app.settings.customPath}\\\\${_hud.folderName}\"`);\n    this.electron.fs.copy(_hud.path, `${this.app.settings.customPath}\\\\${_hud.folderName}`)\n      .then(() => {\n        this.snack.show(`${_hud.folderName} was installed`);\n        this.update();\n      })\n      .catch(err => this.app.error(err));\n  }\n\n  /**\n   * Uninstalls hud\n   *\n   * @param _hud\n   */\n  uninstall(_hud: Hud) {\n    if (this.electron.fs.existsSync(_hud.path)) {\n      if (this.app.settings.moveOrCopy) {\n        this.app.log.next(`Uninstalling hud: *MOVE* \"${_hud.path}\" => \"${this.localHuds}\\\\${_hud.folderName}\"`);\n        this.electron.fs.move(_hud.path, `${this.localHuds}\\\\${_hud.folderName}`, { overwrite: true })\n          .then(() => {\n            this.snack.show(`${_hud.folderName} was uninstalled`);\n            this.update();\n          })\n          .catch(err => this.app.error(err));\n      } else {\n        this.app.log.next(`Uninstalling hud: *DELETE* \"${_hud.path}\"`);\n        this.electron.fs.remove(_hud.path)\n          .then(() => {\n            this.snack.show(`${_hud.folderName} was uninstalled`);\n            this.update();\n          });\n      }\n    }\n  }\n\n  /**\n   * Removes hud\n   *\n   * @param _hud\n   */\n  remove(_hud: Hud) {\n    if (this.electron.fs.existsSync(_hud.path)) {\n      const d: YesNo = new YesNo();\n      d.question = `Remove ${_hud.folderName}?`;\n      d.subQuestion = `Are you sure you want to remove ${_hud.folderName}? This cannot be undone!`;\n\n      const dialogRef = this.dialog.open(YesNoComponent, {\n        width: '450px',\n        data: d\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.app.log.next(`Remove hud: *DELETE* \"${_hud.path}\"`);\n          this.electron.fs.remove(_hud.path)\n            .then(() => {\n              this.snack.show(`${_hud.folderName} was removed`);\n              this.update();\n            })\n            .catch(err => this.app.error(err));\n        }\n      });\n    }\n  }\n\n  /**\n   * Uploads huds\n   *\n   * @param event\n   */\n  upload(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const files: File[] = Array.from(target.files);\n    const hudsFound = files.filter(i => i.name === 'info.vdf');\n    if (hudsFound.length > 0) {\n      hudsFound.forEach(hud => {\n        const path = hud.path.replace('\\\\info.vdf', '');\n        const name = path.split('\\\\').pop();\n        const dest = `${this.localHuds}\\\\${name}`;\n\n        if (!this.electron.fs.existsSync(dest)) {\n          this.app.log.next(`Uploading hud: *COPY* \"${path}\" => \"${dest}\"`);\n          this.electron.fs.copy(path, dest)\n            .then(() => {\n              this.app.log.next(`Successfully uploaded ${name}`);\n              this.snack.show(`Added \"${name}\" to library`, null, hudsFound.length > 2 ? 1000 : 3000);\n              const data = this.electron.fs.readFileSync(hud.path, { encoding: 'utf8', flag: 'r' }).split('\"');\n              const l = { name: data[1], folderName: name, version: data[5], path: this.localHuds + '\\\\' + name };\n              this.library.push(l);\n              this.myControl.setValue('');\n            }).catch(err => this.app.error(err));\n        } else {\n          this.snack.show(`${name} is already in library`);\n        }\n      });\n    } else {\n      const s = 'We could not find any hud here. Are you sure you selected the right folder and it has the info.vdf file inside.';\n      this.snack.show(s, null, 6000);\n    }\n\n    this.folderUpload.nativeElement.value = null;\n  }\n\n  /**\n   * Renames hud\n   *\n   * @param _hud\n   */\n  rename(_hud: Hud): void {\n    const dialogRef = this.dialog.open(QuestionAnswerComponent, {\n      width: '450px',\n      data: {\n        question: `Rename ${_hud.folderName}`,\n        subQuestion: '',\n        cant: this.getNames(_hud.folderName)\n      } as QuestionAnswer\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (typeof result === 'string') {\n        const path = _hud.path.split('\\\\');\n        const name = path.pop();\n        this.app.log.next(`Renaming hud: *RENAME* \"${_hud.folderName}\" => \"${name}\"`);\n        this.electron.fs.rename(_hud.path, `${path.join('\\\\')}\\\\${result}`)\n          .then(() => {\n            this.snack.show(`Updated \"${name}\" to \"${result}\"`);\n            this.update();\n          })\n          .catch(err => this.app.error(err));\n      }\n    });\n  }\n\n  /**\n   * Replaces hud component\n   *\n   * TODO: replace the installed hud with `_hud`\n   *\n   * @param _hud\n   *\n   */\n  replace(_hud: Hud): void {\n\n  }\n\n  /**\n   * Huds filter\n   *\n   * @param value\n   * @returns filter\n   */\n  private hudFilter(value: string): Hud[] {\n    const filterValue = value.toLowerCase();\n\n    return this.library.filter(option => {\n      if (option.folderName.toLowerCase().includes(filterValue)) {\n        return true;\n      } else if (option.name.toLowerCase().includes(filterValue)) {\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Gets names\n   *\n   * @param exclude\n   * @returns names\n   */\n  private getNames(exclude: string): string[] {\n    const names: string[] = [];\n    this.library.forEach(a => {\n      if (a.folderName !== exclude) {\n        names.push(a.folderName);\n      }\n    });\n    return names;\n  }\n}\n\n    \n\n    \n        \n    Huds\n    \n        Add huds to your library\n        \n    \n\n\nInstalled hud{{hudsInstalled > 1 ? 's' : ''}}\n\n    \n        \n            \n                {{hud.folderName}}\n            \n            \n                {{hud.name}}\n            \n        \n        Version: {{hud.version}}\n        \n            Uninstall\n        \n    \n\n\nLibrary\n\n\n    Search\n    \n    \n        \n            {{option.folderName}}\n        \n    \n\n\n\n    \n        \n            \n                {{hud.folderName}}\n            \n            \n                {{hud.name}}\n            \n        \n        Version: {{hud.version}}\n        \n            Remove\n            Rename\n            \n            Install\n            Replace\n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./hud.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Huds            Add huds to your library            Installed hud{{hudsInstalled > 1 ? \\'s\\' : \\'\\'}}                                        {{hud.folderName}}                                        {{hud.name}}                            Version: {{hud.version}}                    Uninstall            Library    Search                            {{option.folderName}}                                                    {{hud.folderName}}                                        {{hud.name}}                            Version: {{hud.version}}                    Remove            Rename                        Install            Replace            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrosshairsComponent', 'selector': 'app-crosshairs'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HitsoundComponent', 'selector': 'app-hitsound'},{'name': 'HudComponent', 'selector': 'app-hud'},{'name': 'MultipleWarningComponent', 'selector': 'app-multiple-warning'},{'name': 'QuestionAnswerComponent', 'selector': 'app-question-answer'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SetupComponent', 'selector': 'app-setup'},{'name': 'UploadChangeNameComponent', 'selector': 'app-upload-change-name'},{'name': 'WeaponsSoundsComponent', 'selector': 'app-weapons-sounds'},{'name': 'YesNoComponent', 'selector': 'app-yes-no'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/HudList.html": {
      url: "classes/HudList.html",
      title: "class - HudList",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HudList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/hudList.ts\n        \n\n\n            \n                Description\n            \n            \n                Hud list\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                discord\n                            \n                            \n                                discussion\n                            \n                            \n                                download\n                            \n                            \n                                group\n                            \n                            \n                                maintainer\n                            \n                            \n                                name\n                            \n                            \n                                page\n                            \n                            \n                                repository\n                            \n                            \n                                screenshots\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hudList.ts:12\n                        \n                    \n\n            \n                \n                    Creator of hud list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discord\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hudList.ts:44\n                        \n                    \n\n            \n                \n                    Discord of hud list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discussion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hudList.ts:36\n                        \n                    \n\n            \n                \n                    Discussion of hud list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        download\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hudList.ts:40\n                        \n                    \n\n            \n                \n                    Download of hud list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hudList.ts:32\n                        \n                    \n\n            \n                \n                    Group of hud list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maintainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hudList.ts:16\n                        \n                    \n\n            \n                \n                    Maintainer of hud list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hudList.ts:8\n                        \n                    \n\n            \n                \n                    Name of hud list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hudList.ts:24\n                        \n                    \n\n            \n                \n                    Page of hud list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hudList.ts:28\n                        \n                    \n\n            \n                \n                    Repository of hud list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenshots\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/hudList.ts:20\n                        \n                    \n\n            \n                \n                    Screenshots of hud list\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HudList {\n    /**\n     * Name of hud list\n     */\n    name: string;\n    /**\n     * Creator of hud list\n     */\n    creator: string;\n    /**\n     * Maintainer of hud list\n     */\n    maintainer: string;\n    /**\n     * Screenshots of hud list\n     */\n    screenshots: string;\n    /**\n     * Page of hud list\n     */\n    page: string;\n    /**\n     * Repository of hud list\n     */\n    repository: string;\n    /**\n     * Group of hud list\n     */\n    group: string;\n    /**\n     * Discussion of hud list\n     */\n    discussion: string;\n    /**\n     * Download of hud list\n     */\n    download: string;\n    /**\n     * Discord of hud list\n     */\n    discord: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules/MaterialModule.html": {
      url: "modules/MaterialModule.html",
      title: "module - MaterialModule",
      body: "\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n/**\n * Export and Import material components\n */\nconst materialcomponents = [\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatListModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatAutocompleteModule,\n    MatTooltipModule,\n    MatSliderModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatBadgeModule,\n    MatSlideToggleModule\n];\n\n@NgModule({\n    imports: [materialcomponents],\n    exports: [materialcomponents],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/MultipleWarningComponent.html": {
      url: "components/MultipleWarningComponent.html",
      title: "component - MultipleWarningComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  MultipleWarningComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/hitsound/multiple-warning/multiple-warning.component.ts\n\n\n\n    \n        Description\n    \n    \n        Multiple warning component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-multiple-warning\n            \n\n            \n                styleUrls\n                ./multiple-warning.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./multiple-warning.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/hitsound/multiple-warning/multiple-warning.component.ts:11\n                            \n                        \n\n                \n                    \n                            Creates an instance of multiple warning component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Multiple warning component\n */\n@Component({\n  selector: 'app-multiple-warning',\n  templateUrl: './multiple-warning.component.html',\n  styleUrls: ['./multiple-warning.component.scss']\n})\nexport class MultipleWarningComponent {\n  /**\n   * Creates an instance of multiple warning component.\n   */\n  constructor() { }\n}\n\n    \n\n    \n        Multiple sounds found\n\n    When there are multiple hitsounds and kill sounds in your custom folder. You can't be sure of which sound will win.\n    We recommend you delete one of them\n\n\n    Ok\n\n\n    \n\n    \n                \n                    ./multiple-warning.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Multiple sounds found    When there are multiple hitsounds and kill sounds in your custom folder. You can\\'t be sure of which sound will win.    We recommend you delete one of them    Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrosshairsComponent', 'selector': 'app-crosshairs'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HitsoundComponent', 'selector': 'app-hitsound'},{'name': 'HudComponent', 'selector': 'app-hud'},{'name': 'MultipleWarningComponent', 'selector': 'app-multiple-warning'},{'name': 'QuestionAnswerComponent', 'selector': 'app-question-answer'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SetupComponent', 'selector': 'app-setup'},{'name': 'UploadChangeNameComponent', 'selector': 'app-upload-change-name'},{'name': 'WeaponsSoundsComponent', 'selector': 'app-weapons-sounds'},{'name': 'YesNoComponent', 'selector': 'app-yes-no'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MultipleWarningComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/QuestionAnswer.html": {
      url: "classes/QuestionAnswer.html",
      title: "class - QuestionAnswer",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/questionAnswer.ts\n        \n\n\n            \n                Description\n            \n            \n                Question answer\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cant\n                            \n                            \n                                question\n                            \n                            \n                                subQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cant\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/questionAnswer.ts:16\n                        \n                    \n\n            \n                \n                    Cant of question answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/questionAnswer.ts:8\n                        \n                    \n\n            \n                \n                    Question of question answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/questionAnswer.ts:12\n                        \n                    \n\n            \n                \n                    Sub question of question answer\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class QuestionAnswer {\n    /**\n     * Question of question answer\n     */\n    question: string;\n    /**\n     * Sub question of question answer\n     */\n    subQuestion: string;\n    /**\n     * Cant of question answer\n     */\n    cant: string[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/QuestionAnswerComponent.html": {
      url: "components/QuestionAnswerComponent.html",
      title: "component - QuestionAnswerComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  QuestionAnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/question-answer/question-answer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component QuestionAnswerComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-answer\n            \n\n            \n                styleUrls\n                ./question-answer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question-answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                input\n                            \n                            \n                                matcher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: QuestionAnswer, validator: ValidatorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/question-answer/question-answer.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of question answer component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        QuestionAnswer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                QuestionAnswer\n\n                                                        \n                                                \n                                                \n                                                        validator\n                                                  \n                                                        \n                                                                        ValidatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/question-answer/question-answer.component.ts:43\n                \n            \n\n\n            \n                \n                    on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/question-answer/question-answer.component.ts:51\n                \n            \n\n\n            \n                \n                    Submits question answer component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QuestionAnswer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/question-answer/question-answer.component.ts:36\n                        \n                    \n\n            \n                \n                    `QuestionAnswer`\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/question-answer/question-answer.component.ts:21\n                        \n                    \n\n            \n                \n                    Input answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matcher\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ShowOnDirtyErrorStateMatcher\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/question-answer/question-answer.component.ts:25\n                        \n                    \n\n            \n                \n                    Matcher of question answer component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ShowOnDirtyErrorStateMatcher } from '@angular/material/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { QuestionAnswer } from '../../models/questionAnswer';\nimport { ValidatorService } from '../../services/validators.service';\n\n/**\n * Component QuestionAnswerComponent\n */\n@Component({\n  selector: 'app-question-answer',\n  templateUrl: './question-answer.component.html',\n  styleUrls: ['./question-answer.component.scss']\n})\nexport class QuestionAnswerComponent implements OnInit {\n\n  /**\n   * Input answer\n   */\n  input: FormControl;\n  /**\n   * Matcher of question answer component\n   */\n  matcher: ShowOnDirtyErrorStateMatcher;\n\n  /**\n   * Creates an instance of question answer component.\n   *\n   * @param dialogRef\n   * @param data `QuestionAnswer`\n   * @param validator\n   */\n  constructor(\n    private dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: QuestionAnswer,\n    private validator: ValidatorService\n  ) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n    this.matcher = new ShowOnDirtyErrorStateMatcher();\n    this.input = new FormControl('', [Validators.required, this.validator.checkName(this.data.cant), this.validator.special()]);\n  }\n\n  /**\n   * Submits question answer component\n   */\n  submit() {\n    if (!this.input.invalid) {\n      this.dialogRef.close(this.input.value);\n    }\n  }\n}\n\n    \n\n    \n        {{data.question}}\n\n    \n        \n            Name\n            \n            \n                Name is required\n            \n            \n                That name already exists\n            \n            \n                Can't use: \\/:*?\"<>|\n            \n        \n    \n\n\n    Cancel\n    Ok\n\n\n    \n\n    \n                \n                    ./question-answer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.question}}                        Name                                        Name is required                                        That name already exists                                        Can\\'t use: \\/:*?\"<>|                            Cancel    Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrosshairsComponent', 'selector': 'app-crosshairs'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HitsoundComponent', 'selector': 'app-hitsound'},{'name': 'HudComponent', 'selector': 'app-hud'},{'name': 'MultipleWarningComponent', 'selector': 'app-multiple-warning'},{'name': 'QuestionAnswerComponent', 'selector': 'app-question-answer'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SetupComponent', 'selector': 'app-setup'},{'name': 'UploadChangeNameComponent', 'selector': 'app-upload-change-name'},{'name': 'WeaponsSoundsComponent', 'selector': 'app-weapons-sounds'},{'name': 'YesNoComponent', 'selector': 'app-yes-no'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionAnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/Settings.html": {
      url: "classes/Settings.html",
      title: "class - Settings",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/settings.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the app settings used throughout the app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                crosshairBackground\n                            \n                            \n                                customPath\n                            \n                            \n                                libraryPath\n                            \n                            \n                                moveOrCopy\n                            \n                            \n                                volume\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        crosshairBackground\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/models/settings.ts:8\n                        \n                    \n\n            \n                \n                    background for vtf crosshairs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/settings.ts:4\n                        \n                    \n\n            \n                \n                    path to custom folder\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        libraryPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/settings.ts:10\n                        \n                    \n\n            \n                \n                    path to local library\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveOrCopy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/settings.ts:12\n                        \n                    \n\n            \n                \n                    Move or copy huds\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/models/settings.ts:6\n                        \n                    \n\n            \n                \n                    sound volume to test hitsounds\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Settings {\n    /** path to custom folder */\n    customPath: string = null;\n    /** sound volume to test hitsounds */\n    volume = 5;\n    /** background for vtf crosshairs */\n    crosshairBackground = '';\n    /** path to local library */\n    libraryPath: string = null;\n    /** Move or copy huds */\n    moveOrCopy = true;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/SettingsComponent.html": {
      url: "components/SettingsComponent.html",
      title: "component - SettingsComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/settings/settings.component.ts\n\n\n\n    \n        Description\n    \n    \n        Settings\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                app\n                            \n                            \n                                log\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeLibrary\n                            \n                            \n                                getLog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppComponent, electron: ElectronService, snack: SnackService, dialog: MatDialog, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/settings/settings.component.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of settings component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AppComponent\n\n                                                        \n                                                \n                                                \n                                                        electron\n                                                  \n                                                        \n                                                                        ElectronService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                        SnackService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changeLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLibrary()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/settings/settings.component.ts:61\n                \n            \n\n\n            \n                \n                    Changes library\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLog\n                        \n                    \n                \n            \n            \n                \ngetLog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/settings/settings.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/settings/settings.component.ts:118\n                \n            \n\n\n            \n                \n                    on destroy\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/settings/settings.component.ts:45\n                \n            \n\n\n            \n                \n                    on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSettings\n                        \n                    \n                \n            \n            \n                \nupdateSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/settings/settings.component.ts:111\n                \n            \n\n\n            \n                \n                    Updates settings\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/settings/settings.component.ts:35\n                        \n                    \n\n            \n                \n                    AppComponent\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/settings/settings.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/settings/settings.component.ts:21\n                        \n                    \n\n            \n                \n                    If update available\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { APP_CONFIG } from '../../../environments/environment';\nimport { AppComponent } from '../../app.component';\nimport { ElectronService } from '../../core/services';\nimport { SnackService } from '../../services/snack.service';\n\n/**\n * Settings\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  /**\n   * If update available\n   */\n  update = false;\n\n  log: string[] = [];\n\n  /**\n   * Creates an instance of settings component.\n   *\n   * @param app AppComponent\n   * @param electron\n   * @param snack\n   * @param dialog\n   * @param http\n   */\n  constructor(\n    public app: AppComponent,\n    private electron: ElectronService,\n    private snack: SnackService,\n    private dialog: MatDialog,\n    private http: HttpClient\n  ) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n    this.http.get('https://api.github.com/repos/PhongGuy/TF2Tools/releases/latest').subscribe((json: any) => {\n      if (APP_CONFIG.version !== json.tag_name.replace('v', '')) {\n        this.update = true;\n      }\n    });\n  }\n\n  getLog() {\n    const logs = this.electron.fs.readFileSync(this.electron.appData('TF2Tools\\\\log.txt'), { encoding: 'utf8', flag: 'r' });\n    return logs.split('\\n');\n  }\n\n  /**\n   * Changes library\n   */\n  async changeLibrary() {\n    this.app.loading = true;\n    this.electron.ipcRenderer.send('openDialog', {\n      title: 'Chose location',\n      defaultPath: this.app.settings.libraryPath,\n      properties: ['openDirectory']\n    } as Electron.OpenDialogOptions);\n\n    this.electron.ipcRenderer.once('openDialogResponse', (event, args: { canceled: boolean; filePaths: string[] }) => {\n      if (!args.canceled) {\n        let path = args.filePaths[0];\n\n        if (this.electron.fs.existsSync(path)) {\n\n          path = `${path}\\\\TF2Tools\\\\Library`;\n          this.electron.fs.ensureDirSync(path);\n          this.snack.show('Moving your library. This can take some time if you have a big library.', null, 6000);\n          this.app.log.next(`Trying to move your library. ${this.app.settings.libraryPath} => ${path}`);\n          this.electron.fs.move(this.app.settings.libraryPath, path, { overwrite: true })\n            .then(() => {\n              this.app.log.next(`Successfully moved your library`);\n              this.app.settings.libraryPath = path;\n              this.app.settingsUpdate.next(this.app.settings);\n              this.snack.show('Your library was moved!');\n              this.app.loading = false;\n            })\n            .catch(err => this.app.error(err));\n\n        } else {\n          this.app.loading = false;\n          this.app.log.next(`Failed to moved your library`);\n          this.snack.show('That is not a location we can use');\n        }\n      } else {\n        this.app.loading = false;\n      }\n    });\n\n    window.addEventListener('focus', e => {\n      e.preventDefault();\n      setTimeout(() => {\n        window.focus();\n        window.removeAllListeners();\n      }, 75);\n    });\n  }\n\n  /**\n   * Updates settings\n   */\n  updateSettings() {\n    this.app.settingsUpdate.next(this.app.settings);\n  }\n\n  /**\n   * on destroy\n   */\n  ngOnDestroy(): void {\n    window.removeAllListeners();\n  }\n}\n\n    \n\n    \n        Settings\n\n\n    Update available\n    A new TF2Tools update is now available\n    \n        Download\n    \n\n\nCustom folder\n\n    Location\n    \n\n\nLibrary location\n\n    Location\n    \n\n\n    Change\n        location\n\n\nHuds\n\n\n    \n        \n            Save hud edits on uninstall\n            Save recent customizations edits on hud when uninstalling\n        \n        \n        \n    \n\n\n\nLog\n\n    \n        \n            Show logs\n        \n\n        \n            {{ i }}\n        \n\n    \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                .log-info {\n  font-size: 12px;\n  margin: 0;\n  padding: 3px 2px;\n\n  &:hover {\n    background: #8f8f8f2b;\n    border-radius: 5px;\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Settings    Update available    A new TF2Tools update is now available            Download    Custom folder    Location    Library location    Location        Change        locationHuds                        Save hud edits on uninstall            Save recent customizations edits on hud when uninstalling                            Log                        Show logs                            {{ i }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrosshairsComponent', 'selector': 'app-crosshairs'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HitsoundComponent', 'selector': 'app-hitsound'},{'name': 'HudComponent', 'selector': 'app-hud'},{'name': 'MultipleWarningComponent', 'selector': 'app-multiple-warning'},{'name': 'QuestionAnswerComponent', 'selector': 'app-question-answer'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SetupComponent', 'selector': 'app-setup'},{'name': 'UploadChangeNameComponent', 'selector': 'app-upload-change-name'},{'name': 'WeaponsSoundsComponent', 'selector': 'app-weapons-sounds'},{'name': 'YesNoComponent', 'selector': 'app-yes-no'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/SetupComponent.html": {
      url: "components/SetupComponent.html",
      title: "component - SetupComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  SetupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/setup/setup.component.ts\n\n\n\n    \n        Description\n    \n    \n        Setup\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setup\n            \n\n            \n                styleUrls\n                ./setup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./setup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                            \n                                    Private\n                                s\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFolder\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(electron: ElectronService, app: AppComponent, snack: SnackService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/setup/setup.component.ts:24\n                            \n                        \n\n                \n                    \n                            Creates an instance of setup component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        electron\n                                                  \n                                                        \n                                                                        ElectronService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                        SnackService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFolder\n                        \n                    \n                \n            \n            \n                \ngetFolder(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/setup/setup.component.ts:52\n                \n            \n\n\n            \n                \n                    Gets folder\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/setup/setup.component.ts:44\n                \n            \n\n\n            \n                \n                    on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('path')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/setup/setup.component.ts:20\n                        \n                    \n\n            \n                \n                    path ElementRef\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        s\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Team Fortress 2\\\\tf\\\\custom'\n                    \n                \n                    \n                        \n                                Defined in src/app/setup/setup.component.ts:24\n                        \n                    \n\n            \n                \n                    Sof setup component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\nimport { ElectronService } from '../core/services';\nimport { SnackService } from '../services/snack.service';\n\n/**\n * Setup\n */\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss']\n})\nexport class SetupComponent implements OnInit {\n\n  /**\n   * path `ElementRef`\n   */\n  @ViewChild('path') path: ElementRef;\n  /**\n   * Sof setup component\n   */\n  private s = 'Team Fortress 2\\\\tf\\\\custom';\n\n  /**\n   * Creates an instance of setup component.\n   *\n   * @param electron\n   * @param app\n   * @param snack\n   * @param router\n   */\n  constructor(\n    private electron: ElectronService,\n    private app: AppComponent,\n    private snack: SnackService,\n    private router: Router\n  ) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Gets folder\n   *\n   * @param event\n   */\n  getFolder(event: Event): void {\n    // reset form\n    this.app.loading = true;\n    this.path.nativeElement.value = null;\n    const target = event.target as HTMLInputElement;\n    const files: File[] = Array.from(target.files);\n    if (files.length > 0) {\n      let path = files[0].path;\n      if (path.includes(this.s)) {\n        this.app.loading = false;\n        const split = path.split(this.s);\n        path = `${split[0]}\\\\${this.s}`;\n        this.path.nativeElement.value = `${split[0]}\\\\${this.s}`;\n        this.app.settings.customPath = path;\n        this.app.settingsUpdate.next(this.app.settings);\n        this.router.navigate(['dashboard/hud']);\n      } else {\n        this.snack.show('This is not a tf2 custom folder', null, 5000);\n      }\n    }\n    this.app.loading = false;\n  }\n}\n\n    \n\n    \n        \n    \n        Setup\n        TF2tools could not locate your custom folder. Please select the navigation\n        \n            Click to find your custom folder\n            \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./setup.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Setup        TF2tools could not locate your custom folder. Please select the navigation                    Click to find your custom folder                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrosshairsComponent', 'selector': 'app-crosshairs'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HitsoundComponent', 'selector': 'app-hitsound'},{'name': 'HudComponent', 'selector': 'app-hud'},{'name': 'MultipleWarningComponent', 'selector': 'app-multiple-warning'},{'name': 'QuestionAnswerComponent', 'selector': 'app-question-answer'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SetupComponent', 'selector': 'app-setup'},{'name': 'UploadChangeNameComponent', 'selector': 'app-upload-change-name'},{'name': 'WeaponsSoundsComponent', 'selector': 'app-weapons-sounds'},{'name': 'YesNoComponent', 'selector': 'app-yes-no'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SetupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/SnackBarMessage.html": {
      url: "classes/SnackBarMessage.html",
      title: "class - SnackBarMessage",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnackBarMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/snack.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Snack bar message\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                config\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/snack.service.ts:16\n                        \n                    \n\n            \n                \n                    Action  of snack bar message\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBarConfig\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/snack.service.ts:20\n                        \n                    \n\n            \n                \n                    Config  of snack bar message\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/snack.service.ts:12\n                        \n                    \n\n            \n                \n                    Message  of snack bar message\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig, MatSnackBarRef, SimpleSnackBar } from '@angular/material/snack-bar';\nimport { Subscription } from 'rxjs';\n\n/**\n * Snack bar message\n */\nexport class SnackBarMessage {\n  /**\n   * Message  of snack bar message\n   */\n  message: string;\n  /**\n   * Action  of snack bar message\n   */\n  action: string = null;\n  /**\n   * Config  of snack bar message\n   */\n  config: MatSnackBarConfig = null;\n}\n\n/**\n * Snack service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackService implements OnDestroy {\n\n  /**\n   * Message queue of snack service\n   */\n  private messageQueue: Array = Array();\n  /**\n   * Subscription  of snack service\n   */\n  private subscription: Subscription;\n  /**\n   * Snack bar ref of snack service\n   */\n  private snackBarRef: MatSnackBarRef;\n  /**\n   * Determines whether instance visible is\n   */\n  private isInstanceVisible = false;\n\n  /**\n   * Creates an instance of snack service.\n   *\n   * @param snack\n   */\n  constructor(\n    private snack: MatSnackBar\n  ) { }\n\n  /**\n   * on destroy\n   */\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Shows snack service\n   *\n   * @param message The message to show in the snackbar.\n   * @param [action] The label for the snackbar action.\n   * @param [duration] Additional configuration options for the snackbar.\n   * @param [classOverride] Adds a css class on the snackbar so you can add color.\n   */\n  show(\n    message: string,\n    action?: string,\n    duration?: number,\n    classOverride: string = 'blue-snackbar'\n  ): void {\n    const config = new MatSnackBarConfig();\n    config.duration = (duration ? duration : 3000);\n    config.verticalPosition = 'bottom';\n    config.horizontalPosition = 'left';\n    config.panelClass = [classOverride];\n\n    const sbMessage = new SnackBarMessage();\n    sbMessage.message = message;\n    sbMessage.action = action;\n    sbMessage.config = config;\n\n    this.messageQueue.push(sbMessage);\n\n    if (!this.isInstanceVisible) {\n      this.showNext();\n    }\n  }\n\n  /**\n   * Shows next\n   *\n   * @returns\n   */\n  private showNext() {\n    if (this.messageQueue.length === 0) {\n      return;\n    }\n\n    const message = this.messageQueue.shift();\n    this.isInstanceVisible = true;\n\n    this.snackBarRef = this.snack.open(\n      message.message,\n      message.action,\n      message.config\n    );\n\n    this.snackBarRef.afterDismissed().subscribe(() => {\n      this.isInstanceVisible = false;\n      this.showNext();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/SnackService.html": {
      url: "injectables/SnackService.html",
      title: "injectable - SnackService",
      body: "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SnackService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/snack.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Snack service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isInstanceVisible\n                            \n                            \n                                    Private\n                                messageQueue\n                            \n                            \n                                    Private\n                                snackBarRef\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                show\n                            \n                            \n                                    Private\n                                showNext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snack: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/snack.service.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of snack service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snack.service.ts:60\n                \n            \n\n\n            \n                \n                    on destroy\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, action?: string, duration?: number, classOverride: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snack.service.ts:72\n                \n            \n\n\n            \n                \n                    Shows snack service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The message to show in the snackbar.\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The label for the snackbar action.\n\n                                    \n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Additional configuration options for the snackbar.\n\n                                    \n                                \n                                \n                                    classOverride\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'blue-snackbar'\n                                    \n\n                                    \n                                        Adds a css class on the snackbar so you can add color.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        showNext\n                        \n                    \n                \n            \n            \n                \n                    \n                    showNext()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snack.service.ts:101\n                \n            \n\n\n            \n                \n                    Shows next\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isInstanceVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/snack.service.ts:46\n                        \n                    \n\n            \n                \n                    Determines whether instance visible is\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/snack.service.ts:34\n                        \n                    \n\n            \n                \n                    Message queue of snack service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        snackBarRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBarRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/snack.service.ts:42\n                        \n                    \n\n            \n                \n                    Snack bar ref of snack service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/snack.service.ts:38\n                        \n                    \n\n            \n                \n                    Subscription  of snack service\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig, MatSnackBarRef, SimpleSnackBar } from '@angular/material/snack-bar';\nimport { Subscription } from 'rxjs';\n\n/**\n * Snack bar message\n */\nexport class SnackBarMessage {\n  /**\n   * Message  of snack bar message\n   */\n  message: string;\n  /**\n   * Action  of snack bar message\n   */\n  action: string = null;\n  /**\n   * Config  of snack bar message\n   */\n  config: MatSnackBarConfig = null;\n}\n\n/**\n * Snack service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackService implements OnDestroy {\n\n  /**\n   * Message queue of snack service\n   */\n  private messageQueue: Array = Array();\n  /**\n   * Subscription  of snack service\n   */\n  private subscription: Subscription;\n  /**\n   * Snack bar ref of snack service\n   */\n  private snackBarRef: MatSnackBarRef;\n  /**\n   * Determines whether instance visible is\n   */\n  private isInstanceVisible = false;\n\n  /**\n   * Creates an instance of snack service.\n   *\n   * @param snack\n   */\n  constructor(\n    private snack: MatSnackBar\n  ) { }\n\n  /**\n   * on destroy\n   */\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Shows snack service\n   *\n   * @param message The message to show in the snackbar.\n   * @param [action] The label for the snackbar action.\n   * @param [duration] Additional configuration options for the snackbar.\n   * @param [classOverride] Adds a css class on the snackbar so you can add color.\n   */\n  show(\n    message: string,\n    action?: string,\n    duration?: number,\n    classOverride: string = 'blue-snackbar'\n  ): void {\n    const config = new MatSnackBarConfig();\n    config.duration = (duration ? duration : 3000);\n    config.verticalPosition = 'bottom';\n    config.horizontalPosition = 'left';\n    config.panelClass = [classOverride];\n\n    const sbMessage = new SnackBarMessage();\n    sbMessage.message = message;\n    sbMessage.action = action;\n    sbMessage.config = config;\n\n    this.messageQueue.push(sbMessage);\n\n    if (!this.isInstanceVisible) {\n      this.showNext();\n    }\n  }\n\n  /**\n   * Shows next\n   *\n   * @returns\n   */\n  private showNext() {\n    if (this.messageQueue.length === 0) {\n      return;\n    }\n\n    const message = this.messageQueue.shift();\n    this.isInstanceVisible = true;\n\n    this.snackBarRef = this.snack.open(\n      message.message,\n      message.action,\n      message.config\n    );\n\n    this.snackBarRef.afterDismissed().subscribe(() => {\n      this.isInstanceVisible = false;\n      this.showNext();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/TfWeapons.html": {
      url: "classes/TfWeapons.html",
      title: "class - TfWeapons",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TfWeapons\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tf_weapons.ts\n        \n\n\n            \n                Description\n            \n            \n                vtf script info\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                name\n                            \n                            \n                                slot\n                            \n                            \n                                weaponClass\n                            \n                            \n                                weaponsAffected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tf_weapons.ts:8\n                        \n                    \n\n            \n                \n                    Class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tf_weapons.ts:16\n                        \n                    \n\n            \n                \n                    Name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slot\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tf_weapons.ts:20\n                        \n                    \n\n            \n                \n                    Slot\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weaponClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tf_weapons.ts:12\n                        \n                    \n\n            \n                \n                    Weapon class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weaponsAffected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tf_weapons.ts:24\n                        \n                    \n\n            \n                \n                    Weapons affected\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TfWeapons {\n    /**\n     * Class\n     */\n    class: string;\n    /**\n     * Weapon class\n     */\n    weaponClass: string;\n    /**\n     * Name\n     */\n    name: string;\n    /**\n     * Slot\n     */\n    slot: string;\n    /**\n     * Weapons affected\n     */\n    weaponsAffected: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/UploadChangeName.html": {
      url: "classes/UploadChangeName.html",
      title: "class - UploadChangeName",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadChangeName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/uploadChangeName.ts\n        \n\n\n            \n                Description\n            \n            \n                Upload change name\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cant\n                            \n                            \n                                file\n                            \n                            \n                                title\n                            \n                            \n                                volume\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cant\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/uploadChangeName.ts:12\n                        \n                    \n\n            \n                \n                    Cant of upload change name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/uploadChangeName.ts:16\n                        \n                    \n\n            \n                \n                    File of upload change name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/uploadChangeName.ts:8\n                        \n                    \n\n            \n                \n                    Title of upload change name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/uploadChangeName.ts:20\n                        \n                    \n\n            \n                \n                    Volume of upload change name\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UploadChangeName {\n    /**\n     * Title of upload change name\n     */\n    title: string;\n    /**\n     * Cant of upload change name\n     */\n    cant: string[];\n    /**\n     * File of upload change name\n     */\n    file: File;\n    /**\n     * Volume of upload change name\n     */\n    volume: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/UploadChangeNameComponent.html": {
      url: "components/UploadChangeNameComponent.html",
      title: "component - UploadChangeNameComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  UploadChangeNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/hitsound/upload-change-name/upload-change-name.component.ts\n\n\n\n    \n        Description\n    \n    \n        Upload change name\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-upload-change-name\n            \n\n            \n                styleUrls\n                ./upload-change-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./upload-change-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                input\n                            \n                            \n                                matcher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                playFile\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: UploadChangeName, validator: ValidatorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/hitsound/upload-change-name/upload-change-name.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of upload change name component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        UploadChangeName\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                UploadChangeName\n\n                                                        \n                                                \n                                                \n                                                        validator\n                                                  \n                                                        \n                                                                        ValidatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/upload-change-name/upload-change-name.component.ts:43\n                \n            \n\n\n            \n                \n                    on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playFile\n                        \n                    \n                \n            \n            \n                \nplayFile(event: Event, file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/upload-change-name/upload-change-name.component.ts:63\n                \n            \n\n\n            \n                \n                    Plays file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/hitsound/upload-change-name/upload-change-name.component.ts:51\n                \n            \n\n\n            \n                \n                    Submits upload change name component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UploadChangeName\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hitsound/upload-change-name/upload-change-name.component.ts:36\n                        \n                    \n\n            \n                \n                    UploadChangeName\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hitsound/upload-change-name/upload-change-name.component.ts:21\n                        \n                    \n\n            \n                \n                    Input answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matcher\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ShowOnDirtyErrorStateMatcher\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/hitsound/upload-change-name/upload-change-name.component.ts:25\n                        \n                    \n\n            \n                \n                    Matcher of upload change name component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ShowOnDirtyErrorStateMatcher } from '@angular/material/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UploadChangeName } from '../../../models/uploadChangeName';\nimport { ValidatorService } from '../../../services/validators.service';\n\n/**\n * Upload change name\n */\n@Component({\n  selector: 'app-upload-change-name',\n  templateUrl: './upload-change-name.component.html',\n  styleUrls: ['./upload-change-name.component.scss']\n})\nexport class UploadChangeNameComponent implements OnInit {\n\n  /**\n   * Input answer\n   */\n  input: FormControl;\n  /**\n   * Matcher of upload change name component\n   */\n  matcher: ShowOnDirtyErrorStateMatcher;\n\n  /**\n   * Creates an instance of upload change name component.\n   *\n   * @param dialogRef\n   * @param data UploadChangeName\n   * @param validator\n   */\n  constructor(\n    private dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: UploadChangeName,\n    private validator: ValidatorService\n  ) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n    this.matcher = new ShowOnDirtyErrorStateMatcher();\n    this.input = new FormControl('', [Validators.required, this.validator.checkName(this.data.cant), this.validator.special()]);\n  }\n\n  /**\n   * Submits upload change name component\n   */\n  submit() {\n    if (!this.input.invalid) {\n      this.dialogRef.close(this.input.value);\n    }\n  }\n\n  /**\n   * Plays file\n   *\n   * @param event\n   * @param file\n   */\n  playFile(event: Event, file: File) {\n    event.preventDefault();\n    const audio = new Audio(file.path);\n    audio.volume = this.data.volume / 100;\n    audio.load();\n    audio.play();\n  }\n}\n\n    \n\n    \n        {{data.title}}\n\n    \n        \n            Name {{data.file.name}}\n            \n            \n                play_arrow\n            \n            \n                Name is required\n            \n            \n                That name already exists\n            \n            \n                Can't use: \\/:*?\"<>|\n            \n        \n    \n\n\n    \n    Cancel\n    Ok\n\n\n    \n\n    \n                \n                    ./upload-change-name.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.title}}                        Name {{data.file.name}}                                        play_arrow                                        Name is required                                        That name already exists                                        Can\\'t use: \\/:*?\"<>|                                Cancel    Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrosshairsComponent', 'selector': 'app-crosshairs'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HitsoundComponent', 'selector': 'app-hitsound'},{'name': 'HudComponent', 'selector': 'app-hud'},{'name': 'MultipleWarningComponent', 'selector': 'app-multiple-warning'},{'name': 'QuestionAnswerComponent', 'selector': 'app-question-answer'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SetupComponent', 'selector': 'app-setup'},{'name': 'UploadChangeNameComponent', 'selector': 'app-upload-change-name'},{'name': 'WeaponsSoundsComponent', 'selector': 'app-weapons-sounds'},{'name': 'YesNoComponent', 'selector': 'app-yes-no'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UploadChangeNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/ValidatorService.html": {
      url: "injectables/ValidatorService.html",
      title: "injectable - ValidatorService",
      body: "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/validators.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Validator service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkName\n                            \n                            \n                                special\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/validators.service.ts:10\n                            \n                        \n\n                \n                    \n                            Creates an instance of validator service.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkName\n                        \n                    \n                \n            \n            \n                \ncheckName(cant: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/validators.service.ts:23\n                \n            \n\n\n            \n                \n                    Checks name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cant\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        special\n                        \n                    \n                \n            \n            \n                \nspecial()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/validators.service.ts:37\n                \n            \n\n\n            \n                \n                    Specials validator service\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        special\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\n\n/**\n * Validator service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorService {\n\n  /**\n   * Creates an instance of validator service.\n   */\n  constructor() { }\n\n  /**\n   * Checks name\n   *\n   * @param cant\n   * @returns name\n   */\n  checkName(cant: string[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (cant.filter(a => a === control.value).length !== 0) {\n        return { nameExists: true };\n      }\n      return null;\n    };\n  }\n\n  /**\n   * Specials validator service\n   *\n   * @returns special\n   */\n  special(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      const nameRegexp = /[\\\\/:*?\"<>|]+/g;\n      if (nameRegexp.test(control.value)) {\n        return { special: true };\n      }\n      return null;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/WeaponData.html": {
      url: "classes/WeaponData.html",
      title: "class - WeaponData",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeaponData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/weaponData.ts\n        \n\n\n            \n                Description\n            \n            \n                Weapon data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                crosshair\n                            \n                            \n                                info\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        crosshair\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weaponData.ts:13\n                        \n                    \n\n            \n                \n                    Crosshair of weapon data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TfWeapons\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weaponData.ts:9\n                        \n                    \n\n            \n                \n                    Info of weapon data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weaponData.ts:17\n                        \n                    \n\n            \n                \n                    Path of weapon data\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TfWeapons } from \'./tf_weapons\';\n/**\n * Weapon data\n */\nexport class WeaponData {\n    /**\n     * Info of weapon data\n     */\n    info: TfWeapons;\n    /**\n     * Crosshair of weapon data\n     */\n    crosshair: string;\n    /**\n     * Path of weapon data\n     */\n    path: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/WeaponsSoundsComponent.html": {
      url: "components/WeaponsSoundsComponent.html",
      title: "component - WeaponsSoundsComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  WeaponsSoundsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/weapons-sounds/weapons-sounds.component.ts\n\n\n\n    \n        Description\n    \n    \n        Weapons sounds\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weapons-sounds\n            \n\n            \n                styleUrls\n                ./weapons-sounds.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weapons-sounds.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/weapons-sounds/weapons-sounds.component.ts:11\n                            \n                        \n\n                \n                    \n                            Creates an instance of weapons sounds component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Weapons sounds\n */\n@Component({\n  selector: 'app-weapons-sounds',\n  templateUrl: './weapons-sounds.component.html',\n  styleUrls: ['./weapons-sounds.component.scss']\n})\nexport class WeaponsSoundsComponent {\n\n  /**\n   * Creates an instance of weapons sounds component.\n   */\n  constructor() { }\n\n}\n\n    \n\n    \n        no weapons sounds yet :(\n\n    \n\n    \n                \n                    ./weapons-sounds.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'no weapons sounds yet :('\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrosshairsComponent', 'selector': 'app-crosshairs'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HitsoundComponent', 'selector': 'app-hitsound'},{'name': 'HudComponent', 'selector': 'app-hud'},{'name': 'MultipleWarningComponent', 'selector': 'app-multiple-warning'},{'name': 'QuestionAnswerComponent', 'selector': 'app-question-answer'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SetupComponent', 'selector': 'app-setup'},{'name': 'UploadChangeNameComponent', 'selector': 'app-upload-change-name'},{'name': 'WeaponsSoundsComponent', 'selector': 'app-weapons-sounds'},{'name': 'YesNoComponent', 'selector': 'app-yes-no'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeaponsSoundsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/YesNo.html": {
      url: "classes/YesNo.html",
      title: "class - YesNo",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  YesNo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/yesNo.ts\n        \n\n\n            \n                Description\n            \n            \n                Yes no\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                question\n                            \n                            \n                                subQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/yesNo.ts:8\n                        \n                    \n\n            \n                \n                    Question of yes no\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/yesNo.ts:12\n                        \n                    \n\n            \n                \n                    Sub question of yes no\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class YesNo {\n    /**\n     * Question of yes no\n     */\n    question: string;\n    /**\n     * Sub question of yes no\n     */\n    subQuestion: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/YesNoComponent.html": {
      url: "components/YesNoComponent.html",
      title: "component - YesNoComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  YesNoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/yes-no/yes-no.component.ts\n\n\n\n    \n        Description\n    \n    \n        Yes No\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-yes-no\n            \n\n            \n                styleUrls\n                ./yes-no.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./yes-no.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: YesNo)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/yes-no/yes-no.component.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of yes no component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        YesNo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                YesNo\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/yes-no/yes-no.component.ts:27\n                \n            \n\n\n            \n                \n                    on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         YesNo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/yes-no/yes-no.component.ts:21\n                        \n                    \n\n            \n                \n                    YesNo\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { YesNo } from '../../models/yesNo';\n\n/**\n * Yes No\n */\n@Component({\n  selector: 'app-yes-no',\n  templateUrl: './yes-no.component.html',\n  styleUrls: ['./yes-no.component.scss']\n})\nexport class YesNoComponent implements OnInit {\n\n  /**\n   * Creates an instance of yes no component.\n   *\n   * @param data YesNo\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: YesNo\n  ) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{data.question}}\n\n    {{data.subQuestion}}\n\n\n    No\n    Yes\n\n\n    \n\n    \n                \n                    ./yes-no.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.question}}    {{data.subQuestion}}    No    Yes'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrosshairsComponent', 'selector': 'app-crosshairs'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HitsoundComponent', 'selector': 'app-hitsound'},{'name': 'HudComponent', 'selector': 'app-hud'},{'name': 'MultipleWarningComponent', 'selector': 'app-multiple-warning'},{'name': 'QuestionAnswerComponent', 'selector': 'app-question-answer'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SetupComponent', 'selector': 'app-setup'},{'name': 'UploadChangeNameComponent', 'selector': 'app-upload-change-name'},{'name': 'WeaponsSoundsComponent', 'selector': 'app-weapons-sounds'},{'name': 'YesNoComponent', 'selector': 'app-yes-no'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'YesNoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "changelog.html": {
      url: "changelog.html",
      title: "getting-started - changelog",
      body: '\n                   \n\n4.4.0 (2021-12-30)\n\n[Bumped Version] 4.4.0 (c5fa067)\nadd CHANGELOG.md (672d0d2)\nadded doc to APP_CONFIG (7e4f58c)\nadded doc to AppComponent (916db5e)\nadded doc to CrossahirSelected (93efb40)\nadded doc to CrosshairsComponent (d06fca4)\nadded doc to DashboardComponent (2969808)\nadded doc to ElectronService (16fac3e)\nadded doc to FileHelpService (69b28f4)\nadded doc to Hitsound (593072e)\nadded doc to HitsoundComponent (e0cd855)\nadded doc to httpLoaderFactory (66a13a6)\nadded doc to Hud (7a552fa)\nadded doc to HudComponent (70b11ad)\nadded doc to HudList (fee0dc2)\nadded doc to HudList (2126270)\nadded doc to materialcomponents (5c257d1)\nadded doc to MultipleWarningComponent (377f9c7)\nadded doc to MyErrorStateMatcher (2f6284f)\nadded doc to MyErrorStateMatcher (efe76f3)\nadded doc to QuestionAnswer (df06c22)\nadded doc to QuestionAnswerComponent (69c41c6)\nadded doc to Settings (df4a695)\nadded doc to SettingsComponent (9900c22)\nadded doc to SetupComponent (06fb1e4)\nadded doc to SnackBarMessage (1642c5f)\nadded doc to SnackService (0c7828e)\nadded doc to test (e5faa98)\nadded doc to tfWeapons (154394c)\nadded doc to TfWeapons (4a99e57)\nadded doc to UploadChangeName (4939961)\nadded doc to UploadChangeNameComponent (2edb1ad)\nadded doc to ValidatorService (fd35609)\nadded doc to WeaponData (be24bf5)\nadded doc to WeaponsSoundsComponent (6faaa9a)\nadded doc to YesNo (8df0ba8)\nadded doc to YesNoComponent (ee2c500)\nadded docs (a150574)\nadded log BehaviorSubject (4527408)\nadded log to CrosshairsComponent (276ed6d)\nadded log to HitsoundComponent (1bd5906)\nadded log to HudComponent (ff53bdf)\nadded log view (720ef06)\nadded moment (08e31f5)\nBump @types/node from 17.0.4 to 17.0.5 (a50ceb7)\nBump @typescript-eslint/eslint-plugin from 5.8.0 to 5.8.1 (222c4bc)\nBump @typescript-eslint/parser from 5.8.0 to 5.8.1 (ae6e250)\nBump eslint-plugin-jsdoc from 37.4.0 to 37.4.2 (f1e189c)\nBump rxjs from 7.4.0 to 7.5.1 (9ffecce)\nFix \'Unexpected empty block (block-no-empty)\' issue in src\\app\\app.component.scss (a97e1e4), closes #76\nfixed a few spelling errors (514d426)\nfixed a few spelling errors (d5d3296)\nremoved MyErrorStateMatcher (4f7ebc4)\nupdated docs (cfbcec2)\n\n4.3.0 (2021-12-27)\n\n[Bumped Version] 4.3.0 (7921f46)\nadd hud setting: move or copy (084c390), closes #67\nBump @types/node from 16.11.12 to 17.0.4 (cd802d3)\nBump conventional-changelog-cli from 2.1.1 to 2.2.2 (b921d4e)\nchanged uninstall and added remove (fb57b4e)\nchanged wording for hud setttings (6b12ea7)\nupdated package-lock with npm i (6b3bb9e)\n\n4.2.1 (2021-12-23)\n\n[Bumped Version] 4.1.0 (b13a1b4)\n[Bumped Version] 4.2.1 (228e9df)\nadded accent color to buttons (4a1f6bb)\nadded button color (c5d4a18)\nadded download option (8154536)\nadded easy version change (82326ea)\nadded tooltip to show what class its applyed to (a6528ed)\nBump @angular to 13.1.0 (14c3473)\nBump @angular/cli from 13.1.1 to 13.1.2 (4f59c74)\nBump @angular/language-service from 13.1.0 to 13.1.1 (bddacfc)\nBump @typescript-eslint/eslint-plugin from 5.7.0 to 5.8.0 (c10fa75)\nBump @typescript-eslint/parser from 5.7.0 to 5.8.0 (cd873d5)\nBump eslint-plugin-jsdoc from 37.2.2 to 37.4.0 (e102271)\nchanged accent color (a06c96a)\ndisable button (b7b8bc3)\nfixed generate (8b6e374)\nhud vtf files (997b2b7), closes #58\nmoved temp func to huds (5bf0ef4)\ntext cleanup (4deeb9f)\nUpdate bug_report.md (76c72c2)\nUpdate issue templates (e2ef56b)\n\n4.0.0 (2021-12-22)\n\n[Bumped Version] 4.0.0 (964c3ea)\nadd library folder, move files in root to library (2733daf)\nadded change location (b70b619)\nadded for later use (a46905a)\nadded openDialog (7e8b9eb)\nadded settings component (68a9058)\nadded settings for ref (970747d)\nBump eslint from 8.4.1 to 8.5.0 (dab433c)\nchanged check for old library and move to new (e7d64be)\nclean dialog (236d288)\nif the app is loading navigation is not allowed (ea75574)\n\n3.0.1 (2021-12-19)\n\n[Bumped Version] 3.0.1 (4ab6415)\nfixed apply to all weapons bug (be250f6)\n\n3.0.0 (2021-12-18)\n\n[Bumped Version] 3.0.0 (20531d7)\nadded crosshairs (92e0400)\nadded fixed nav (aea1346)\nadded missing weapons (a4f862a)\ncant have the select box over top bar (9fc8934)\ncosmetic changes (cb12d0a)\nenable crosshairs tab (c5850e4)\nenabled crosshairs (454344e)\nfixed a few visual bugs (4127853)\nfixed Apply to selected bug (adc11c7)\nfixed default crosshair, image and buttons (627fb67)\nhave to update settings if new settings was made (a6dcbcf)\nremoved reference code (9d2f1c5)\nupdated README.md (c6b928d)\nupdated README.md (7bdf421)\n\n2.2.2 (2021-12-17)\n\n[Bumped Version] 2.2.2 (fe4c95c)\nfull screen changed to maximize (e19c1df)\n\n2.2.1 (2021-12-17)\n\n[Bumped Version] 2.2.1 (00a5a2f)\nchanged the way full screen works (849914f)\n\n2.2.0 (2021-12-17)\n\n[Bumped Version] 2.1.0 (78c92e4)\n[Bumped Version] 2.2.0 (ed7dd92)\nadded multiple hitsound upload (d041771)\nadded setup if default path was not found (3786ada)\nBump @angular-devkit/build-angular from 13.1.0 to 13.1.1 (5b84f50)\nBump @angular/cli from 13.1.0 to 13.1.1 (34533b1)\nBump @angular/core and @angular/animations (37da0e0)\nBump @typescript-eslint/eslint-plugin from 5.6.0 to 5.7.0 (d476468)\nBump @typescript-eslint/parser from 5.6.0 to 5.7.0 (04e8776)\nBump electron from 16.0.4 to 16.0.5 (f207f89)\nBump eslint-plugin-jsdoc from 37.2.0 to 37.2.2 (481aac9)\nBump typescript from 4.4.4 to 4.5.3 (1a39c11)\nBump typescript from 4.5.3 to 4.5.4 (d28d1f2)\nchanged the listen location (892b2d4)\nfixed dialogs not returning undefined if closed (cc8bf7b)\nRevert "Bump @angular/core and @angular/animations" (245da9f)\nupdated README.md (50e970d)\n\n2.0.1 (2021-12-12)\n\n[Bumped Version] 2.0.1 (0dbbfd9)\nadded hitsounds and killsounds (af8d402)\nfixed audio not being able to load (7f2bc30)\nremoved tests and files not used (5bc5138)\nwont use node 14 on workflows (d860fb0)\n\n1.2.1 (2021-12-11)\n\n[Bumped Version] 1.2.1 (026719d)\nfixed active tabs (9526594)\nupdated README.md (f874c1c)\n\n1.2.0 (2021-12-11)\n\n[Bumped Version] 1.2.0 (da2db06)\nadded game sounds (12427ef)\nadded generate to crosshairs (385fa75)\nadded lint again, and fixed all lint issues (0336909)\nadded preloading and presearching (c907f03)\nadded vtf crosshairs (d09a9ad)\nadded WeaponsSoundsComponent (6c6ace3)\nBump @angular-devkit/build-angular from 13.0.2 to 13.1.0 (2559bbd)\nBump @angular-eslint/builder from 13.0.0-alpha.0 to 13.0.1 (aed3b86)\nBump @angular-eslint/eslint-plugin from 13.0.0-alpha.0 to 13.0.1 (d7fd3e9)\nBump @angular-eslint/eslint-plugin-template (73c8640)\nBump @angular-eslint/schematics from 13.0.0-alpha.0 to 13.0.1 (361712c)\nBump @angular-eslint/template-parser from 13.0.0-alpha.0 to 13.0.1 (5166f81)\nBump @angular/cli from 13.0.2 to 13.1.0 (c715676)\nBump @angular/language-service from 13.0.1 to 13.1.0 (6f8c55d)\nBump @playwright/test from 1.16.3 to 1.17.1 (a4e8323)\nBump @types/node from 16.11.7 to 16.11.12 (166efe2)\nBump @typescript-eslint/eslint-plugin from 5.4.0 to 5.6.0 (1e2e677)\nBump @typescript-eslint/parser from 5.4.0 to 5.6.0 (5a34c1f)\nBump electron from 16.0.0 to 16.0.4 (3831c54)\nBump electron-builder from 22.13.1 to 22.14.5 (a32e716)\nBump eslint from 8.2.0 to 8.4.1 (d452bf9)\nBump eslint-plugin-jsdoc from 37.0.3 to 37.2.0 (4e6649a)\nBump playwright from 1.16.3 to 1.17.1 (f9b4499)\nchanged win target to nsis-web (94b1e9b)\nCreate codeql-analysis.yml (9229338)\nCreate dependabot.yml (6683efb)\nDisabling webSecurity is strongly discouraged. (546b69f)\ndont fully support macos and ubuntu (a39898a)\nfixed Property \'subquestion\' (cd6e5e9)\nfixed workflow files (6eee7fe)\nlockfileVersion 2 (c402ee6)\n\n1.1.2 (2021-12-08)\n\n[Bumped Version] 1.1.2 (4ae0cad)\nDon\'t show the window if we are not ready to do so (22bdbe5)\nfile not used (b8a20d9)\nfirst commit (00a72e4)\nfixed angular json target (042eb0c)\ninstalled hud we want to be open (00f73c4)\nready to use the api for imgur (39e0c8c)\nremoved and changed compiler options (d833b4d)\nrewrote upload event (8f9db5d)\nupdated README.md (c3daabd)\nupdated the favicon (b226221)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "coverage.html": {
      url: "coverage.html",
      title: "coverage - coverage",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            httpLoaderFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/electron/electron.service.ts\n            \n            injectable\n            ElectronService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/dashboard/crosshairs/crosshairs.component.ts\n            \n            component\n            CrosshairsComponent\n            \n                100 %\n                (40/40)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/hitsound/hitsound.component.ts\n            \n            component\n            HitsoundComponent\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/dashboard/hitsound/multiple-warning/multiple-warning.component.ts\n            \n            component\n            MultipleWarningComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/dashboard/hitsound/upload-change-name/upload-change-name.component.ts\n            \n            component\n            UploadChangeNameComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/hud/hud.component.ts\n            \n            component\n            HudComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/dashboard/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/weapons-sounds/weapons-sounds.component.ts\n            \n            component\n            WeaponsSoundsComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/dialogs/question-answer/question-answer.component.ts\n            \n            component\n            QuestionAnswerComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/yes-no/yes-no.component.ts\n            \n            component\n            YesNoComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/material.ts\n            \n            variable\n            materialcomponents\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/mock/tfWeapons.ts\n            \n            variable\n            tfWeapons\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/crosshairSelected.ts\n            \n            class\n            CrosshairSelected\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/hitsound.ts\n            \n            class\n            Hitsound\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/hud.ts\n            \n            class\n            Hud\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/hudList.ts\n            \n            class\n            HudList\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/models/questionAnswer.ts\n            \n            class\n            QuestionAnswer\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/settings.ts\n            \n            class\n            Settings\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/tf_weapons.ts\n            \n            class\n            TfWeapons\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/uploadChangeName.ts\n            \n            class\n            UploadChangeName\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/weaponData.ts\n            \n            class\n            WeaponData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/yesNo.ts\n            \n            class\n            YesNo\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/file-help.service.ts\n            \n            injectable\n            FileHelpService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/snack.service.ts\n            \n            class\n            SnackBarMessage\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/snack.service.ts\n            \n            injectable\n            SnackService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/validators.service.ts\n            \n            injectable\n            ValidatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/setup/setup.component.ts\n            \n            component\n            SetupComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            APP_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            APP_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            APP_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.web.ts\n            \n            variable\n            APP_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "dependencies.html": {
      url: "dependencies.html",
      title: "package-dependencies - dependencies",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.1.0\n        \n            @angular/cdk : ~13.1.0\n        \n            @angular/common : ~13.1.0\n        \n            @angular/compiler : ~13.1.0\n        \n            @angular/core : ~13.1.0\n        \n            @angular/forms : ~13.1.0\n        \n            @angular/language-service : ~13.1.0\n        \n            @angular/material : ~13.1.0\n        \n            @angular/platform-browser : ~13.1.0\n        \n            @angular/platform-browser-dynamic : ~13.1.0\n        \n            @angular/router : ~13.1.0\n        \n            appdata-path : 1.0.0\n        \n            bootstrap : 5.1.3\n        \n            fs-extra : 10.0.0\n        \n            moment : 2.29.1\n        \n            rxjs : 7.5.1\n        \n            tslib : ^2.1.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "index.html": {
      url: "index.html",
      title: "getting-started - index",
      body: '\n                   \n\nIntroduction\nTF2Tools will help you change hud, hitsound and kill sound by the click of a button.\nHuds\nYou upload all of your local huds, now you can switch huds easily.\n\nHit/kill sound\nYou upload your collection of hitsounds and kill sounds. (has to be wav files) Now you can switch hitsounds and killsounds to your liking. You can also listen to how it sounds by clicking the play button.\n\nCrosshairs\nYou can change your vtf crosshairs, choose a background and see how it looks.\n\nDownload\nYou can download the latest stable version here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "license.html": {
      url: "license.html",
      title: "getting-started - license",
      body: '\n                   \n\nCopyright 2021 - PhongGuy\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nCopyright 2020 - Maxime GRIS\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules.html": {
      url: "modules.html",
      title: "modules - modules",
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "overview.html": {
      url: "overview.html",
      title: "overview - overview",
      body: '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCrosshairsComponent\n\nCrosshairsComponent\n\nAppModule -->\n\nCrosshairsComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nHitsoundComponent\n\nHitsoundComponent\n\nAppModule -->\n\nHitsoundComponent->AppModule\n\n\n\n\n\nHudComponent\n\nHudComponent\n\nAppModule -->\n\nHudComponent->AppModule\n\n\n\n\n\nMultipleWarningComponent\n\nMultipleWarningComponent\n\nAppModule -->\n\nMultipleWarningComponent->AppModule\n\n\n\n\n\nQuestionAnswerComponent\n\nQuestionAnswerComponent\n\nAppModule -->\n\nQuestionAnswerComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nSetupComponent\n\nSetupComponent\n\nAppModule -->\n\nSetupComponent->AppModule\n\n\n\n\n\nUploadChangeNameComponent\n\nUploadChangeNameComponent\n\nAppModule -->\n\nUploadChangeNameComponent->AppModule\n\n\n\n\n\nWeaponsSoundsComponent\n\nWeaponsSoundsComponent\n\nAppModule -->\n\nWeaponsSoundsComponent->AppModule\n\n\n\n\n\nYesNoComponent\n\nYesNoComponent\n\nAppModule -->\n\nYesNoComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "routes.html": {
      url: "routes.html",
      title: "routes - routes",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/variables.html": {
      url: "miscellaneous/variables.html",
      title: "miscellaneous-variables - variables",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APP_CONFIG   (src/.../environment.dev.ts)\n                        \n                        \n                            APP_CONFIG   (src/.../environment.prod.ts)\n                        \n                        \n                            APP_CONFIG   (src/.../environment.ts)\n                        \n                        \n                            APP_CONFIG   (src/.../environment.web.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            httpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            materialcomponents   (src/.../material.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            tfWeapons   (src/.../tfWeapons.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.dev.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  environment: 'DEV',\n  src: '',\n  version: '4.4.0',\n}\n                    \n                \n\n            \n                \n                    APP_CONFIG\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  environment: 'PROD',\n  src: 'resources\\\\app\\\\',\n  version: '4.4.0',\n}\n                    \n                \n\n            \n                \n                    APP_CONFIG\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  environment: 'LOCAL',\n  src: '',\n  version: '4.4.0',\n}\n                    \n                \n\n            \n                \n                    APP_CONFIG\n\n                \n            \n\n        \n    \n\n    src/environments/environment.web.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  environment: 'WEB',\n  src: 'src/',\n  version: '4.4.0',\n}\n                    \n                \n\n            \n                \n                    APP_CONFIG\n\n                \n            \n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n            \n                \n                    context\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    require\n\n                \n            \n\n        \n    \n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpLoaderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (http: HttpClient): TranslateHttpLoader => new TranslateHttpLoader(http, './assets/i18n/', '.json')\n                    \n                \n\n            \n                \n                    AoT requires an exported function for factories\n\n                \n            \n\n        \n    \n\n    src/app/material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        materialcomponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatListModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatAutocompleteModule,\n    MatTooltipModule,\n    MatSliderModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatBadgeModule,\n    MatSlideToggleModule\n]\n                    \n                \n\n            \n                \n                    Export and Import material components\n\n                \n            \n\n        \n    \n\n    src/app/mock/tfWeapons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tfWeapons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TfWeapons[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_pep_brawler_blaster',\n        name: `Baby Face's Blaster`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `Baby Face's Blaster`\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_lunchbox_drink',\n        name: `Bonk! Atomic Punch`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            'Bonk! Atomic Punch',\n            'Crit-a-Cola',\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_bat_fish',\n        name: `Holy Mackerel`,\n        slot: 'Melee',\n        weaponsAffected: [\n            'The Holy Mackerel',\n            'Unarmed Combat',\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_jar_milk',\n        name: 'Mad Milk',\n        slot: 'Secondary',\n        weaponsAffected: [\n            'Mad Milk',\n            'Mutated Milk',\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_bat',\n        name: 'Most Melee',\n        slot: 'Melee',\n        weaponsAffected: [\n            'Bat',\n            'The Candy Cane',\n            'The Boston Basher',\n            'Sun-on-a-Stick',\n            `The Fan O'War`,\n            'The Atomizer',\n            'Three - Rune Blade',\n            'Batsaber',\n            'Frying Pan',\n            'Saxxy',\n            'The Conscientious Objector',\n            'The Freedom Staff',\n            'The Bat Outta Hell',\n            'The Memory Maker',\n            'The Ham Shank',\n            'Gold Frying Pan',\n            'The Necro Smasher',\n            'The Crossing Guard',\n            'Prinny Machete',\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_bat_wood',\n        name: 'Sandman',\n        slot: 'Melee',\n        weaponsAffected: [\n            'The Sandman',\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_scattergun',\n        name: 'Scatterguns',\n        slot: 'Primary',\n        weaponsAffected: [\n            'Scattergun',\n            'Force-A-Nature',\n            'The Back Scatter'\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_handgun_scout_primary',\n        name: 'Shortstop',\n        slot: 'Primary',\n        weaponsAffected: [\n            'The Shortstop'\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_soda_popper',\n        name: 'Soda Popper',\n        slot: 'Primary',\n        weaponsAffected: [\n            'The Soda Popper'\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_pistol_scout',\n        name: 'Stock Pistols',\n        slot: 'Secondary',\n        weaponsAffected: [\n            'Pistol',\n            'Lugermorph',\n            'The C.A.P.P.E.R.',\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_handgun_scout_secondary',\n        name: 'Winger/Pocket Pistol',\n        slot: 'Secondary',\n        weaponsAffected: [\n            'The Winger',\n            'Pocket Pistol',\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_bat_giftwrap',\n        name: 'Wrap Assassin',\n        slot: 'Melee',\n        weaponsAffected: [\n            'The Wrap Assassin',\n        ]\n    },\n    {\n        class: 'Scout',\n        weaponClass: 'tf_weapon_cleaver',\n        name: 'Flying Guillotine',\n        slot: 'Secondary',\n        weaponsAffected: [\n            'Flying Guillotine',\n        ]\n    },\n    {\n        class: 'Soldier',\n        weaponClass: 'tf_weapon_rocketlauncher_airstrike',\n        name: 'Air Strike',\n        slot: 'Primary',\n        weaponsAffected: [\n            'The Air Strike',\n        ]\n    },\n    {\n        class: 'Soldier',\n        weaponClass: 'tf_weapon_buff_item',\n        name: 'Banners',\n        slot: 'Secondary',\n        weaponsAffected: [\n            'The Buff Banner',\n            `The Battalion's Backup`,\n            'The Concheror',\n        ]\n    },\n    {\n        class: 'Soldier',\n        weaponClass: 'tf_weapon_particle_cannon',\n        name: 'Cow Mangler 5000',\n        slot: 'Primary',\n        weaponsAffected: [\n            'Cow Mangler 5000',\n        ]\n    },\n    {\n        class: 'Soldier',\n        weaponClass: 'tf_weapon_rocketlauncher_directhit',\n        name: 'Direct Hit',\n        slot: 'Primary',\n        weaponsAffected: [\n            'The Direct Hit',\n        ]\n    },\n    {\n        class: 'Soldier',\n        weaponClass: 'tf_weapon_shovel',\n        name: 'Melee',\n        slot: 'Melee',\n        weaponsAffected: [\n            'Shovel',\n            'The Equalizer',\n            'The Pain Train',\n            'Frying Pan',\n            'The Half - Zatoichi',\n            'The Market Gardener',\n            'The Disciplinary Action',\n            'The Conscientious Objector',\n            'The Freedom Staff',\n            'The Bat Outta Hell',\n            'The Memory Maker',\n            'Gold Frying Pan',\n            'The Necro Smasher',\n            'The Crossing Guard',\n            'Prinny Machete',\n        ]\n    },\n    {\n        class: 'Soldier',\n        weaponClass: 'tf_weapon_raygun',\n        name: 'Righteous Bison',\n        slot: 'Secondary',\n        weaponsAffected: [\n            'The Righteous Bison',\n        ]\n    },\n    {\n        class: 'Soldier',\n        weaponClass: 'tf_weapon_rocketlauncher',\n        name: 'Rocket Launcher',\n        slot: 'Primary',\n        weaponsAffected: [\n            `Rocket Launcher`,\n            `The Black Box`,\n            `Rocket Jumper`,\n            `The Liberty Launcher`,\n            `The Original`,\n            `The Beggar's Bazooka`,\n        ]\n    },\n    {\n        class: 'Soldier',\n        weaponClass: 'tf_weapon_shotgun_soldier',\n        name: 'Shotguns',\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Soldier's Shotgun`,\n            `The Reserve Shooter`,\n            `Panic Attack`,\n        ]\n    },\n    {\n        class: 'Pyro',\n        weaponClass: 'tf_weapon_rocketlauncher_fireball',\n        name: `Dragon's Fury`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `Dragon's Fury`,\n        ]\n    },\n    {\n        class: 'Pyro',\n        weaponClass: 'tf_weapon_flamethrower',\n        name: `Flamethrowers`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `Flame Thrower`,\n            `The Backburner`,\n            `The Phlogistinator`,\n            `The Rainblower`,\n            `Nostromo Napalmer`,\n        ]\n    },\n    {\n        class: 'Pyro',\n        weaponClass: 'tf_weapon_flaregun',\n        name: `Flare Guns`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `The Flare Gun`,\n            `The Detonator`,\n            `The Scorch Shot`,\n        ]\n    },\n    {\n        class: 'Pyro',\n        weaponClass: 'tf_weapon_slap',\n        name: `Hot Hand`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `Hot Hand`,\n        ]\n    },\n    {\n        class: 'Pyro',\n        weaponClass: 'tf_weapon_flaregun_revenge',\n        name: `Manmelter`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Manmelter`,\n        ]\n    },\n    {\n        class: 'Pyro',\n        weaponClass: 'tf_weapon_fireaxe',\n        name: `Most Melee`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `Fire Axe`,\n            `The Axtinguisher`,\n            `Homewrecker`,\n            `The Powerjack`,\n            `Frying Pan`,\n            `The Back Scratcher`,\n            `Sharpened Volcano Fragment`,\n            `Saxxy`,\n            `The Postal Pummeler`,\n            `The Maul`,\n            `The Conscientious Objector`,\n            `The Third Degree`,\n            `The Lollichop`,\n            `The Freedom Staff`,\n            `The Bat Outta Hell`,\n            `The Memory Maker`,\n            `The Ham Shank`,\n            `Gold Frying Pan`,\n            `The Necro Smasher`,\n            `The Crossing Guard`,\n            `Prinny Machete`,\n        ]\n    },\n    {\n        class: 'Pyro',\n        weaponClass: 'tf_weapon_shotgun_pyro',\n        name: `Shotguns`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Pyro's Shotgun`,\n            `The Reserve Shooter`,\n            `Panic Attack`,\n            `Thermal Thruster`,\n            `Gas Passer`,\n        ]\n    },\n    {\n        class: 'Pyro',\n        weaponClass: 'tf_weapon_rocketpack',\n        name: `Thermal Thruster`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Thermal Thruster`,\n        ]\n    },\n    {\n        class: 'Demoman',\n        weaponClass: 'tf_weapon_grenadelauncher',\n        name: `Grenade Launchers`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `Grenade Launcher`,\n            `The Loch-n-Load`,\n            `The Iron Bomber`,\n        ]\n    },\n    {\n        class: 'Demoman',\n        weaponClass: 'tf_weapon_cannon',\n        name: `Loose Cannon`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `The Loose Cannon`,\n        ]\n    },\n    {\n        class: 'Demoman',\n        weaponClass: 'tf_weapon_bottle',\n        name: `Most Melee`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `Bottle`,\n            `The Scottish Handshake`,\n            `Frying Pan`,\n            `Saxxy`,\n            `The Conscientious Objector`,\n            `The Freedom Staff`,\n            `The Bat Outta Hell`,\n            `The Memory Maker`,\n            `The Ham Shank`,\n            `The Necro Smasher`,\n            `The Crossing Guard`,\n            `Prinny Machete`,\n        ]\n    },\n    {\n        class: 'Demoman',\n        weaponClass: 'tf_weapon_katana',\n        name: `Half-Zatoichi`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `The Half-Zatoichi`,\n        ]\n    },\n    {\n        class: 'Demoman',\n        weaponClass: 'tf_weapon_pipebomblauncher',\n        name: `Sticky Launchers`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Stickybomb Launcher`,\n            `The Scottish Resistance`,\n            `Sticky Jumper`,\n            `The Quickiebomb Launcher`,\n        ]\n    },\n    {\n        class: 'Demoman',\n        weaponClass: 'tf_weapon_sword',\n        name: `Swords`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `The Eyelander`,\n            `The Scotsman's Skullcutter`,\n            `Horseless Headless Horsemann's Headtaker`,\n            `The Claidheamh Mòr`,\n            `The Persian Persuader`,\n            `Nessie's Nine Iron`,\n        ]\n    },\n    {\n        class: 'Demoman',\n        weaponClass: 'tf_weapon_stickbomb',\n        name: `Ullapool Caber`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `Ullapool Caber`,\n        ]\n    },\n    {\n        class: 'Heavy',\n        weaponClass: 'tf_weapon_fists',\n        name: `Most Melee`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `Fists`,\n            `The Killing Gloves of Boxing`,\n            `Gloves of Running Urgently`,\n            `Frying Pan`,\n            `Warrior's Spirit`,\n            `Fists of Steel`,\n            `Saxxy`,\n            `The Eviction Notice`,\n            `The Conscientious Objector`,\n            `Apoco-Fists`,\n            `The Holiday Punch`,\n            `The Freedom Staff`,\n            `The Bat Outta Hell`,\n            `The Memory Maker`,\n            `The Ham Shank`,\n            `Gold Frying Pan`,\n            `The Bread Bite`,\n            `The Necro Smasher`,\n            `The Crossing Guard`,\n            `Gloves of Running Urgently MvM`,\n            `Prinny Machete`,\n        ]\n    },\n    {\n        class: 'Heavy',\n        weaponClass: 'tf_weapon_minigun',\n        name: `Miniguns`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `Minigun`,\n            `Natascha`,\n            `Iron Curtain`,\n            `The Brass Beast`,\n            `Tomislav`,\n            `The Huo-Long Heater`,\n        ]\n    },\n    {\n        class: 'Heavy',\n        weaponClass: 'tf_weapon_lunchbox',\n        name: `Sandvich/Other food`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Sandvich`,\n            `The Dalokohs Bar`,\n            `The Buffalo Steak Sandvich`,\n            `Fishcake`,\n            `Robo-Sandvich`,\n            `Second Banana`,\n        ]\n    },\n    {\n        class: 'Heavy',\n        weaponClass: 'tf_weapon_shotgun_hwg',\n        name: `Shotguns`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Heavy's Shotgun`,\n            `The Family Business`,\n            `Panic Attack`,\n        ]\n    },\n    {\n        class: 'Engineer',\n        weaponClass: 'tf_weapon_robot_arm',\n        name: `Gunslinger`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `The Gunslinger`,\n        ]\n    },\n    {\n        class: 'Engineer',\n        weaponClass: 'tf_weapon_wrench',\n        name: `Most Melee`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `Wrench`,\n            `The Southern Hospitality`,\n            `Golden Wrench`,\n            `The Jag`,\n            `Saxxy`,\n            `The Eureka Effect`,\n            `Gold Frying Pan`,\n            `The Necro Smasher`,\n            `Nutcracker`,\n            `Prinny Machete`,\n        ]\n    },\n    {\n        class: 'Engineer',\n        weaponClass: 'tf_weapon_pistol',\n        name: `Pistols`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Engineer's Pistol`,\n            `Lugermorph`,\n            `The C.A.P.P.E.R`,\n        ]\n    },\n    {\n        class: 'Engineer',\n        weaponClass: 'tf_weapon_shotgun_building_rescue',\n        name: `Rescue Ranger`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `The Rescue Ranger`,\n        ]\n    },\n    {\n        class: 'Engineer',\n        weaponClass: 'tf_weapon_mechanical_arm',\n        name: `Short Circuit`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Short Circuit`,\n        ]\n    },\n    {\n        class: 'Engineer',\n        weaponClass: 'tf_weapon_shotgun_primary',\n        name: `Shotguns`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `Engineer's Shotgun`,\n            `The Widowmaker`,\n            `Panic Attack`,\n        ]\n    },\n    {\n        class: 'Engineer',\n        weaponClass: 'tf_weapon_sentry_revenge',\n        name: `The Frontier Justice`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `The Frontier Justice`,\n        ]\n    },\n    {\n        class: 'Engineer',\n        weaponClass: 'tf_weapon_laser_pointer',\n        name: `Wranglers`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `The Wrangler`,\n            `The Giger Counter`,\n        ]\n    },\n    {\n        class: 'Medic',\n        weaponClass: 'tf_weapon_crossbow',\n        name: `Crusader's Crossbow`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `Crusader's Crossbow`,\n        ]\n    },\n    {\n        class: 'Medic',\n        weaponClass: 'tf_weapon_medigun',\n        name: `Mediguns`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Medi Gun`,\n            `The Kritzkrieg`,\n            `The Quick-Fix`,\n            `The Vaccinator`,\n        ]\n    },\n    {\n        class: 'Medic',\n        weaponClass: 'tf_weapon_bonesaw',\n        name: `Most Melee`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `Bonesaw`,\n            `The Ubersaw`,\n            `The Vita-Saw`,\n            `Frying Pan`,\n            `Amputator`,\n            `The Solemn Vow`,\n            `Saxxy`,\n            `The Conscientious Objector`,\n            `The Freedom Staff`,\n            `The Bat Outta Hell`,\n            `The Memory Maker`,\n            `The Ham Shank`,\n            `Gold Frying Pan`,\n            `The Necro Smasher`,\n            `The Crossing Guard`,\n            `Prinny Machete`,\n        ]\n    },\n    {\n        class: 'Medic',\n        weaponClass: 'tf_weapon_syringegun_medic',\n        name: `Syringe Guns`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `Syringe Gun`,\n            `The Blutsauger`,\n            `The Overdose`,\n        ]\n    },\n    {\n        class: 'Sniper',\n        weaponClass: 'tf_weapon_compound_bow',\n        name: `Bows`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `The Huntsman`,\n            `The Fortified Compound`,\n        ]\n    },\n    {\n        class: 'Sniper',\n        weaponClass: 'tf_weapon_sniperrifle_classic',\n        name: `Classic`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `The Classic`,\n        ]\n    },\n    {\n        class: 'Sniper',\n        weaponClass: 'tf_weapon_charged_smg',\n        name: `Cleaner's Carbine`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `The Cleaner's Carbine`,\n        ]\n    },\n    {\n        class: 'Sniper',\n        weaponClass: 'tf_weapon_jar',\n        name: `Jarate`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Jarate`,\n            `The Self-Aware Beauty Mark`,\n        ]\n    },\n    {\n        class: 'Sniper',\n        weaponClass: 'tf_weapon_club',\n        name: `Most Melee`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `Kukri`,\n            `The Tribalman's Shiv`,\n            `The Bushwacka`,\n            `Frying Pan`,\n            `The Shahanshah`,\n            `Saxxy`,\n            `The Conscientious Objector`,\n            `The Freedom Staff`,\n            `The Bat Outta Hell`,\n            `The Memory Maker`,\n            `The Ham Shank`,\n            `Gold Frying Pan`,\n            `The Necro Smasher`,\n            `The Crossing Guard`,\n            `Prinny Machete`,\n        ]\n    },\n    {\n        class: 'Sniper',\n        weaponClass: 'tf_weapon_sniperrifle',\n        name: `Rifles`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `Sniper Rifle`,\n            `The Sydney Sleeper`,\n            `The Bazaar Bargain`,\n            `The Machina`,\n            `The Hitman's Heatmaker`,\n            `The AWPer Hand`,\n            `Shooting Star`,\n        ]\n    },\n    {\n        class: 'Sniper',\n        weaponClass: 'tf_weapon_smg',\n        name: `SMG`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `SMG`,\n        ]\n    },\n    {\n        class: 'Sniper',\n        weaponClass: 'tf_weapon_sniperrifle_decap',\n        name: `The Bazaar Bargain`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `The Bazaar Bargain`,\n        ]\n    },\n    {\n        class: 'Spy',\n        weaponClass: 'tf_weapon_sapper',\n        name: `Other Sappers`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `The Red-Tape Recorder`,\n            `The Ap-Sap`,\n            `The Snack Attack`,\n        ]\n    },\n    {\n        class: 'Spy',\n        weaponClass: 'tf_weapon_knife',\n        name: `Most Melee`,\n        slot: 'Melee',\n        weaponsAffected: [\n            `Knife`,\n            `Your Eternal Reward`,\n            `Conniver's Kunai`,\n            `Saxxy`,\n            `The Big Earner`,\n            `The Wanga Prick`,\n            `The Sharp Dresser`,\n            `The Spy-cicle`,\n            `The Black Rose`,\n            `Gold Frying Pan`,\n            `Prinny Machete`,\n        ]\n    },\n    {\n        class: 'Spy',\n        weaponClass: 'tf_weapon_revolver',\n        name: `Revolvers`,\n        slot: 'Primary',\n        weaponsAffected: [\n            `Revolver`,\n            `The Ambassador`,\n            `Big Kill`,\n            `L'Etranger`,\n            `The Enforcer`,\n            `The Diamondback`,\n        ]\n    },\n    {\n        class: 'Spy',\n        weaponClass: 'tf_weapon_builder',\n        name: `Stock Sapper`,\n        slot: 'Secondary',\n        weaponsAffected: [\n            `Sapper`,\n        ]\n    },\n]\n                    \n                \n\n            \n                \n                    All comp weapons\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
  },
};
